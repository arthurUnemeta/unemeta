{
	"id": "b71cece433242e09c4f7221fc25e3827",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/ExecutionManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport {TheExManager} from \"./interface/TheExManager.sol\";\n\n/**\n * @title ExecutionManager\n * @notice It allows adding/removing execution strategies for trading on the LooksRare exchange.\n */\ncontract ExecutionManager is TheExManager, Ownable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    EnumerableSet.AddressSet private _whitelistedStrategies;\n\n    event StrategyRemoved(address indexed strategy);\n    event StrategyWhitelisted(address indexed strategy);\n\n    //\n    // function addStrategy\n    //  @Description: Add a strategy\n    //  @param address\n    //  @return external\n    //\n    function addStrategy(address strategy) external override onlyOwner {\n        require(!_whitelistedStrategies.contains(strategy), \"the ex already  whitelisted\");\n        _whitelistedStrategies.add(strategy);\n\n        emit StrategyWhitelisted(strategy);\n    }\n\n    //\n    // function removeStrategy\n    //  @Description: Remove a strategy\n    //  @param address\n    //  @return external\n    //\n    function removeStrategy(address strategy) external override onlyOwner {\n        require(_whitelistedStrategies.contains(strategy), \"the ex not whitelisted\");\n        _whitelistedStrategies.remove(strategy);\n\n        emit StrategyRemoved(strategy);\n    }\n\n    //\n    // function isStrategyWhitelisted\n    //  @Description: Confirm strategy has been added to whitelist\n    //  @param address\n    //  @return external\n    //\n    function isStrategyWhitelisted(address strategy) external view override returns (bool) {\n        return _whitelistedStrategies.contains(strategy);\n    }\n\n    //\n    // function viewCountWhitelistedStrategies\n    //  @Description: Count number of whitelisted strategies\n    //  @return external\n    //\n    function viewCountWhitelistedStrategies() external view override returns (uint256) {\n        return _whitelistedStrategies.length();\n    }\n\n    //\n    // function viewWhitelistedStrategies\n    //  @Description: Look through all whitelisted strategies\n    //  @param uint256\n    //  @param uint256\n    //  @return external\n    //\n    function viewWhitelistedStrategies(uint256 cursor, uint256 size)\n        external\n        view\n        override\n        returns (address[] memory, uint256)\n    {\n        uint256 length = size;\n\n        if (length > _whitelistedStrategies.length() - cursor) {\n            length = _whitelistedStrategies.length() - cursor;\n        }\n\n        address[] memory whitelistedStrategies = new address[](length);\n\n        for (uint256 i = 0; i < length; i++) {\n            whitelistedStrategies[i] = _whitelistedStrategies.at(cursor + i);\n        }\n\n        return (whitelistedStrategies, cursor + length);\n    }\n}\n"
			},
			"contracts/Manager/interface/TheExManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheExManager {\n    function addStrategy(address strategy) external;\n\n    function removeStrategy(address strategy) external;\n\n    function isStrategyWhitelisted(address strategy) external view returns (bool);\n\n    function viewWhitelistedStrategies(uint256 cursor, uint256 size) external view returns (address[] memory, uint256);\n\n    function viewCountWhitelistedStrategies() external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ecb6036e478fe646cb18a27f61e182e1ef8536324ddf18e56ca45e22211ed7df64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ecb6036e478fe646cb18a27f61e182e1ef8536324ddf18e56ca45e22211ed7df64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xB6 SUB PUSH15 0x478FE646CB18A27F61E182E1EF8536 ORIGIN 0x4D 0xDF XOR 0xE5 PUSH13 0xA45E22211ED7DF64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1228:11454:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11454:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ecb6036e478fe646cb18a27f61e182e1ef8536324ddf18e56ca45e22211ed7df64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xB6 SUB PUSH15 0x478FE646CB18A27F61E182E1EF8536 ORIGIN 0x4D 0xDF XOR 0xE5 PUSH13 0xA45E22211ED7DF64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1228:11454:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ecb6036e478fe646cb18a27f61e182e1ef8536324ddf18e56ca45e22211ed7df64736f6c63430008110033",
									".code": [
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"contracts/Manager/ExecutionManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/ExecutionManager.sol": {
				"ExecutionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "StrategyRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "StrategyWhitelisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "addStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "isStrategyWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "removeStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCountWhitelistedStrategies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cursor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"name": "viewWhitelistedStrategies",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "ExecutionManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/ExecutionManager.sol\":405:2883  contract ExecutionManager is TheExManager, Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/Manager/ExecutionManager.sol\":405:2883  contract ExecutionManager is TheExManager, Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Manager/ExecutionManager.sol\":405:2883  contract ExecutionManager is TheExManager, Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/ExecutionManager.sol\":405:2883  contract ExecutionManager is TheExManager, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x985e3a2f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x999ba27c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x175188e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x223e5479\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x31fb5b1f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/ExecutionManager.sol\":1213:1466  function removeStrategy(address strategy) external override onlyOwner {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Manager/ExecutionManager.sol\":817:1074  function addStrategy(address strategy) external override onlyOwner {... */\n    tag_4:\n      tag_12\n      tag_17\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n        /* \"contracts/Manager/ExecutionManager.sol\":2277:2881  function viewWhitelistedStrategies(uint256 cursor, uint256 size)... */\n    tag_5:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_12\n      tag_26\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1440:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1428:1430   */\n      0x20\n        /* \"#utility.yul\":1413:1431   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_23\n        /* \"#utility.yul\":1294:1497   */\n      jump\n        /* \"contracts/Manager/ExecutionManager.sol\":1944:2082  function viewCountWhitelistedStrategies() external view override returns (uint256) {... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1648:1673   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1636:1638   */\n      0x20\n        /* \"#utility.yul\":1621:1639   */\n      add\n        /* \"contracts/Manager/ExecutionManager.sol\":1944:2082  function viewCountWhitelistedStrategies() external view override returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":1502:1679   */\n      jump\n        /* \"contracts/Manager/ExecutionManager.sol\":1639:1791  function isStrategyWhitelisted(address strategy) external view override returns (bool) {... */\n    tag_9:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1849:1863   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1842:1864   */\n      iszero\n        /* \"#utility.yul\":1824:1865   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1812:1814   */\n      0x20\n        /* \"#utility.yul\":1797:1815   */\n      add\n        /* \"contracts/Manager/ExecutionManager.sol\":1639:1791  function isStrategyWhitelisted(address strategy) external view override returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":1684:1871   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_12\n      tag_41\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"contracts/Manager/ExecutionManager.sol\":1213:1466  function removeStrategy(address strategy) external override onlyOwner {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/Manager/ExecutionManager.sol\":1301:1342  _whitelistedStrategies.contains(strategy) */\n      tag_47\n        /* \"contracts/Manager/ExecutionManager.sol\":1301:1323  _whitelistedStrategies */\n      0x01\n        /* \"contracts/Manager/ExecutionManager.sol\":1333:1341  strategy */\n      dup3\n        /* \"contracts/Manager/ExecutionManager.sol\":1301:1332  _whitelistedStrategies.contains */\n      tag_48\n        /* \"contracts/Manager/ExecutionManager.sol\":1301:1342  _whitelistedStrategies.contains(strategy) */\n      jump\t// in\n    tag_47:\n        /* \"contracts/Manager/ExecutionManager.sol\":1293:1369  require(_whitelistedStrategies.contains(strategy), \"the ex not whitelisted\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2078:2080   */\n      0x20\n        /* \"contracts/Manager/ExecutionManager.sol\":1293:1369  require(_whitelistedStrategies.contains(strategy), \"the ex not whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2060:2081   */\n      mstore\n        /* \"#utility.yul\":2117:2119   */\n      0x16\n        /* \"#utility.yul\":2097:2115   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2090:2120   */\n      mstore\n      shl(0x52, 0x1d1a1948195e081b9bdd081dda1a5d195b1a5cdd1959)\n        /* \"#utility.yul\":2136:2154   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2129:2181   */\n      mstore\n        /* \"#utility.yul\":2198:2216   */\n      0x64\n      add\n        /* \"contracts/Manager/ExecutionManager.sol\":1293:1369  require(_whitelistedStrategies.contains(strategy), \"the ex not whitelisted\") */\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"contracts/Manager/ExecutionManager.sol\":1379:1418  _whitelistedStrategies.remove(strategy) */\n      tag_52\n        /* \"contracts/Manager/ExecutionManager.sol\":1379:1401  _whitelistedStrategies */\n      0x01\n        /* \"contracts/Manager/ExecutionManager.sol\":1409:1417  strategy */\n      dup3\n        /* \"contracts/Manager/ExecutionManager.sol\":1379:1408  _whitelistedStrategies.remove */\n      tag_53\n        /* \"contracts/Manager/ExecutionManager.sol\":1379:1418  _whitelistedStrategies.remove(strategy) */\n      jump\t// in\n    tag_52:\n      pop\n        /* \"contracts/Manager/ExecutionManager.sol\":1434:1459  StrategyRemoved(strategy) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea4\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/ExecutionManager.sol\":1213:1466  function removeStrategy(address strategy) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/ExecutionManager.sol\":817:1074  function addStrategy(address strategy) external override onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_55:\n        /* \"contracts/Manager/ExecutionManager.sol\":903:944  _whitelistedStrategies.contains(strategy) */\n      tag_57\n        /* \"contracts/Manager/ExecutionManager.sol\":903:925  _whitelistedStrategies */\n      0x01\n        /* \"contracts/Manager/ExecutionManager.sol\":935:943  strategy */\n      dup3\n        /* \"contracts/Manager/ExecutionManager.sol\":903:934  _whitelistedStrategies.contains */\n      tag_48\n        /* \"contracts/Manager/ExecutionManager.sol\":903:944  _whitelistedStrategies.contains(strategy) */\n      jump\t// in\n    tag_57:\n        /* \"contracts/Manager/ExecutionManager.sol\":902:944  !_whitelistedStrategies.contains(strategy) */\n      iszero\n        /* \"contracts/Manager/ExecutionManager.sol\":894:976  require(!_whitelistedStrategies.contains(strategy), \"the ex already  whitelisted\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2429:2431   */\n      0x20\n        /* \"contracts/Manager/ExecutionManager.sol\":894:976  require(!_whitelistedStrategies.contains(strategy), \"the ex already  whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2411:2432   */\n      mstore\n        /* \"#utility.yul\":2468:2470   */\n      0x1b\n        /* \"#utility.yul\":2448:2466   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2441:2471   */\n      mstore\n        /* \"#utility.yul\":2507:2536   */\n      0x74686520657820616c7265616479202077686974656c69737465640000000000\n        /* \"#utility.yul\":2487:2505   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2480:2537   */\n      mstore\n        /* \"#utility.yul\":2554:2572   */\n      0x64\n      add\n        /* \"contracts/Manager/ExecutionManager.sol\":894:976  require(!_whitelistedStrategies.contains(strategy), \"the ex already  whitelisted\") */\n      tag_50\n        /* \"#utility.yul\":2227:2578   */\n      jump\n        /* \"contracts/Manager/ExecutionManager.sol\":894:976  require(!_whitelistedStrategies.contains(strategy), \"the ex already  whitelisted\") */\n    tag_58:\n        /* \"contracts/Manager/ExecutionManager.sol\":986:1022  _whitelistedStrategies.add(strategy) */\n      tag_61\n        /* \"contracts/Manager/ExecutionManager.sol\":986:1008  _whitelistedStrategies */\n      0x01\n        /* \"contracts/Manager/ExecutionManager.sol\":1013:1021  strategy */\n      dup3\n        /* \"contracts/Manager/ExecutionManager.sol\":986:1012  _whitelistedStrategies.add */\n      tag_62\n        /* \"contracts/Manager/ExecutionManager.sol\":986:1022  _whitelistedStrategies.add(strategy) */\n      jump\t// in\n    tag_61:\n      pop\n        /* \"contracts/Manager/ExecutionManager.sol\":1038:1067  StrategyWhitelisted(strategy) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x6b583e2e3ad2e182671d77905fee57b1ffd8ce2aa5c0b652ca029317919751a4\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/ExecutionManager.sol\":817:1074  function addStrategy(address strategy) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/ExecutionManager.sol\":2277:2881  function viewWhitelistedStrategies(uint256 cursor, uint256 size)... */\n    tag_22:\n        /* \"contracts/Manager/ExecutionManager.sol\":2406:2422  address[] memory */\n      0x60\n        /* \"contracts/Manager/ExecutionManager.sol\":2424:2431  uint256 */\n      0x00\n        /* \"contracts/Manager/ExecutionManager.sol\":2464:2468  size */\n      dup3\n        /* \"contracts/Manager/ExecutionManager.sol\":2526:2532  cursor */\n      dup5\n        /* \"contracts/Manager/ExecutionManager.sol\":2492:2523  _whitelistedStrategies.length() */\n      tag_64\n        /* \"contracts/Manager/ExecutionManager.sol\":2492:2514  _whitelistedStrategies */\n      0x01\n        /* \"contracts/Manager/ExecutionManager.sol\":2492:2521  _whitelistedStrategies.length */\n      tag_65\n        /* \"contracts/Manager/ExecutionManager.sol\":2492:2523  _whitelistedStrategies.length() */\n      jump\t// in\n    tag_64:\n        /* \"contracts/Manager/ExecutionManager.sol\":2492:2532  _whitelistedStrategies.length() - cursor */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/Manager/ExecutionManager.sol\":2483:2489  length */\n      dup2\n        /* \"contracts/Manager/ExecutionManager.sol\":2483:2532  length > _whitelistedStrategies.length() - cursor */\n      gt\n        /* \"contracts/Manager/ExecutionManager.sol\":2479:2608  if (length > _whitelistedStrategies.length() - cursor) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/Manager/ExecutionManager.sol\":2591:2597  cursor */\n      dup5\n        /* \"contracts/Manager/ExecutionManager.sol\":2557:2588  _whitelistedStrategies.length() */\n      tag_69\n        /* \"contracts/Manager/ExecutionManager.sol\":2557:2579  _whitelistedStrategies */\n      0x01\n        /* \"contracts/Manager/ExecutionManager.sol\":2557:2586  _whitelistedStrategies.length */\n      tag_65\n        /* \"contracts/Manager/ExecutionManager.sol\":2557:2588  _whitelistedStrategies.length() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/Manager/ExecutionManager.sol\":2557:2597  _whitelistedStrategies.length() - cursor */\n      tag_70\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_70:\n        /* \"contracts/Manager/ExecutionManager.sol\":2548:2597  length = _whitelistedStrategies.length() - cursor */\n      swap1\n      pop\n        /* \"contracts/Manager/ExecutionManager.sol\":2479:2608  if (length > _whitelistedStrategies.length() - cursor) {... */\n    tag_68:\n        /* \"contracts/Manager/ExecutionManager.sol\":2618:2656  address[] memory whitelistedStrategies */\n      0x00\n        /* \"contracts/Manager/ExecutionManager.sol\":2673:2679  length */\n      dup2\n        /* \"contracts/Manager/ExecutionManager.sol\":2659:2680  new address[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_72\n      jumpi\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_74:\n      pop\n        /* \"contracts/Manager/ExecutionManager.sol\":2618:2680  address[] memory whitelistedStrategies = new address[](length) */\n      swap1\n      pop\n        /* \"contracts/Manager/ExecutionManager.sol\":2696:2705  uint256 i */\n      0x00\n        /* \"contracts/Manager/ExecutionManager.sol\":2691:2817  for (uint256 i = 0; i < length; i++) {... */\n    tag_75:\n        /* \"contracts/Manager/ExecutionManager.sol\":2715:2721  length */\n      dup3\n        /* \"contracts/Manager/ExecutionManager.sol\":2711:2712  i */\n      dup2\n        /* \"contracts/Manager/ExecutionManager.sol\":2711:2721  i < length */\n      lt\n        /* \"contracts/Manager/ExecutionManager.sol\":2691:2817  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"contracts/Manager/ExecutionManager.sol\":2769:2806  _whitelistedStrategies.at(cursor + i) */\n      tag_78\n        /* \"contracts/Manager/ExecutionManager.sol\":2795:2805  cursor + i */\n      tag_79\n        /* \"contracts/Manager/ExecutionManager.sol\":2804:2805  i */\n      dup3\n        /* \"contracts/Manager/ExecutionManager.sol\":2795:2801  cursor */\n      dup10\n        /* \"contracts/Manager/ExecutionManager.sol\":2795:2805  cursor + i */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/Manager/ExecutionManager.sol\":2769:2791  _whitelistedStrategies */\n      0x01\n      swap1\n        /* \"contracts/Manager/ExecutionManager.sol\":2769:2794  _whitelistedStrategies.at */\n      tag_81\n        /* \"contracts/Manager/ExecutionManager.sol\":2769:2806  _whitelistedStrategies.at(cursor + i) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/Manager/ExecutionManager.sol\":2742:2763  whitelistedStrategies */\n      dup3\n        /* \"contracts/Manager/ExecutionManager.sol\":2764:2765  i */\n      dup3\n        /* \"contracts/Manager/ExecutionManager.sol\":2742:2766  whitelistedStrategies[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_83\n      jumpi\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/ExecutionManager.sol\":2742:2806  whitelistedStrategies[i] = _whitelistedStrategies.at(cursor + i) */\n      swap1\n      swap3\n      and\n        /* \"contracts/Manager/ExecutionManager.sol\":2742:2766  whitelistedStrategies[i] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"contracts/Manager/ExecutionManager.sol\":2742:2806  whitelistedStrategies[i] = _whitelistedStrategies.at(cursor + i) */\n      mstore\n        /* \"contracts/Manager/ExecutionManager.sol\":2723:2726  i++ */\n      dup1\n      tag_85\n      dup2\n      tag_86\n      jump\t// in\n    tag_85:\n      swap2\n      pop\n      pop\n        /* \"contracts/Manager/ExecutionManager.sol\":2691:2817  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_75)\n    tag_76:\n      pop\n        /* \"contracts/Manager/ExecutionManager.sol\":2835:2856  whitelistedStrategies */\n      dup1\n        /* \"contracts/Manager/ExecutionManager.sol\":2858:2873  cursor + length */\n      tag_87\n        /* \"contracts/Manager/ExecutionManager.sol\":2867:2873  length */\n      dup4\n        /* \"contracts/Manager/ExecutionManager.sol\":2858:2864  cursor */\n      dup9\n        /* \"contracts/Manager/ExecutionManager.sol\":2858:2873  cursor + length */\n      tag_80\n      jump\t// in\n    tag_87:\n        /* \"contracts/Manager/ExecutionManager.sol\":2827:2874  return (whitelistedStrategies, cursor + length) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/ExecutionManager.sol\":2277:2881  function viewWhitelistedStrategies(uint256 cursor, uint256 size)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/ExecutionManager.sol\":1944:2082  function viewCountWhitelistedStrategies() external view override returns (uint256) {... */\n    tag_32:\n        /* \"contracts/Manager/ExecutionManager.sol\":2018:2025  uint256 */\n      0x00\n        /* \"contracts/Manager/ExecutionManager.sol\":2044:2075  _whitelistedStrategies.length() */\n      tag_95\n        /* \"contracts/Manager/ExecutionManager.sol\":2044:2066  _whitelistedStrategies */\n      0x01\n        /* \"contracts/Manager/ExecutionManager.sol\":2044:2073  _whitelistedStrategies.length */\n      tag_65\n        /* \"contracts/Manager/ExecutionManager.sol\":2044:2075  _whitelistedStrategies.length() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/Manager/ExecutionManager.sol\":2037:2075  return _whitelistedStrategies.length() */\n      swap1\n      pop\n        /* \"contracts/Manager/ExecutionManager.sol\":1944:2082  function viewCountWhitelistedStrategies() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Manager/ExecutionManager.sol\":1639:1791  function isStrategyWhitelisted(address strategy) external view override returns (bool) {... */\n    tag_37:\n        /* \"contracts/Manager/ExecutionManager.sol\":1720:1724  bool */\n      0x00\n        /* \"contracts/Manager/ExecutionManager.sol\":1743:1784  _whitelistedStrategies.contains(strategy) */\n      tag_97\n        /* \"contracts/Manager/ExecutionManager.sol\":1743:1765  _whitelistedStrategies */\n      0x01\n        /* \"contracts/Manager/ExecutionManager.sol\":1775:1783  strategy */\n      dup4\n        /* \"contracts/Manager/ExecutionManager.sol\":1743:1774  _whitelistedStrategies.contains */\n      tag_48\n        /* \"contracts/Manager/ExecutionManager.sol\":1743:1784  _whitelistedStrategies.contains(strategy) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/Manager/ExecutionManager.sol\":1736:1784  return _whitelistedStrategies.contains(strategy) */\n      swap3\n        /* \"contracts/Manager/ExecutionManager.sol\":1639:1791  function isStrategyWhitelisted(address strategy) external view override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3584:3586   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3566:3587   */\n      mstore\n        /* \"#utility.yul\":3623:3625   */\n      0x26\n        /* \"#utility.yul\":3603:3621   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3596:3626   */\n      mstore\n        /* \"#utility.yul\":3662:3696   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3642:3660   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3635:3697   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3713:3731   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3706:3742   */\n      mstore\n        /* \"#utility.yul\":3759:3778   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_50\n        /* \"#utility.yul\":3382:3784   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3991:3993   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3973:3994   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4010:4028   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4003:4033   */\n      mstore\n        /* \"#utility.yul\":4069:4103   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4049:4067   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4042:4104   */\n      mstore\n        /* \"#utility.yul\":4121:4139   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_50\n        /* \"#utility.yul\":3789:4145   */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8583:8748  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8716:8739  uint256(uint160(value)) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8663:8667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4262  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4274  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8686:8741  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8679:8741  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8583:8748  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8346:8502  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8419:8423  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8442:8495  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_113\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8450:8453  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8470:8493  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8442:8449  _remove */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8442:8495  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8028:8178  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8098:8102  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8171  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_113\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8126:8129  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8146:8169  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8125  _add */\n      tag_120\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8171  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8829:8944  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8892:8899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8918:8937  _length(set._inner) */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8926:8929  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4444:4462  set._values.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4362:4469  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9286:9442  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9360:9367  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9410:9432  _at(set._inner, index) */\n      tag_113\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9414:9417  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9426:9431  index */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9410:9413  _at */\n      tag_126\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9410:9432  _at(set._inner, index) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2685:4073  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2751:2755  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2888:2900  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2922:2937  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3291:3312  uint256 toDeleteIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3328:3329  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3315:3325  valueIndex */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_67\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3363:3381  set._values.length */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3291:3329  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3343:3360  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_133\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3384:3385  1 */\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_67\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3343:3385  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3417:3430  toDeleteIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3404:3413  lastIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3404:3430  lastIndex != toDeleteIndex */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3450:3467  bytes32 lastValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3470:3473  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3470:3481  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3482:3491  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3470:3492  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_136\n      tag_84\n      jump\t// in\n    tag_136:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3450:3492  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3621:3630  lastValue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3595  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3603  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3604:3617  toDeleteIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3618  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_139\n      tag_84\n      jump\t// in\n    tag_139:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3630  set._values[toDeleteIndex] = lastValue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3716  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3740  set._indexes[lastValue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3876:3879  set */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup1\n      tag_142\n      jumpi\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3971  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3980  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3981:3986  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3961:3987  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4009:4013  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4002:4013  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_97)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4051:4056  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4044:4056  return false */\n      swap2\n      pop\n      pop\n      jump(tag_97)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2113:2517  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2176:2180  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4262  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n      tag_148\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2245  set._values */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2414:2432  set._values.length */\n      dup5\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2404  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2432  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2446:2457  return true */\n      jump(tag_97)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n    tag_148:\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2495:2500  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2488:2500  return false */\n      jump(tag_97)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4811:4929  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4878:4885  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:4907  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:4915  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4916:4921  index */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:4922  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_154\n      tag_84\n      jump\t// in\n    tag_154:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4897:4922  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4811:4929  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_159:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":305:553   */\n    tag_21:\n        /* \"#utility.yul\":373:379   */\n      0x00\n        /* \"#utility.yul\":381:387   */\n      dup1\n        /* \"#utility.yul\":434:436   */\n      0x40\n        /* \"#utility.yul\":422:431   */\n      dup4\n        /* \"#utility.yul\":413:420   */\n      dup6\n        /* \"#utility.yul\":409:432   */\n      sub\n        /* \"#utility.yul\":405:437   */\n      slt\n        /* \"#utility.yul\":402:454   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":450:451   */\n      0x00\n        /* \"#utility.yul\":447:448   */\n      dup1\n        /* \"#utility.yul\":440:452   */\n      revert\n        /* \"#utility.yul\":402:454   */\n    tag_162:\n      pop\n      pop\n        /* \"#utility.yul\":473:496   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":543:545   */\n      0x20\n        /* \"#utility.yul\":528:546   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":515:547   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":305:553   */\n      jump\t// out\n        /* \"#utility.yul\":558:1289   */\n    tag_24:\n        /* \"#utility.yul\":776:778   */\n      0x40\n        /* \"#utility.yul\":788:809   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":858:871   */\n      dup4\n      mload\n        /* \"#utility.yul\":761:779   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":880:902   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":728:732   */\n      0x00\n      swap1\n        /* \"#utility.yul\":955:959   */\n      0x20\n      swap1\n        /* \"#utility.yul\":933:935   */\n      0x60\n        /* \"#utility.yul\":918:936   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":982:997   */\n      dup3\n      dup8\n      add\n        /* \"#utility.yul\":728:732   */\n      dup5\n        /* \"#utility.yul\":1025:1220   */\n    tag_164:\n        /* \"#utility.yul\":1039:1045   */\n      dup3\n        /* \"#utility.yul\":1036:1037   */\n      dup2\n        /* \"#utility.yul\":1033:1046   */\n      lt\n        /* \"#utility.yul\":1025:1220   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1104:1117   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1100:1139   */\n      and\n        /* \"#utility.yul\":1088:1140   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1160:1172   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1195:1210   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1136:1137   */\n      0x01\n        /* \"#utility.yul\":1054:1063   */\n      add\n        /* \"#utility.yul\":1025:1220   */\n      jump(tag_164)\n    tag_166:\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1256:1274   */\n      swap3\n      add\n        /* \"#utility.yul\":1249:1283   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1237:1240   */\n      swap3\n        /* \"#utility.yul\":558:1289   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2583:2710   */\n    tag_156:\n        /* \"#utility.yul\":2644:2654   */\n      0x4e487b71\n        /* \"#utility.yul\":2639:2642   */\n      0xe0\n        /* \"#utility.yul\":2635:2655   */\n      shl\n        /* \"#utility.yul\":2632:2633   */\n      0x00\n        /* \"#utility.yul\":2625:2656   */\n      mstore\n        /* \"#utility.yul\":2675:2679   */\n      0x11\n        /* \"#utility.yul\":2672:2673   */\n      0x04\n        /* \"#utility.yul\":2665:2680   */\n      mstore\n        /* \"#utility.yul\":2699:2703   */\n      0x24\n        /* \"#utility.yul\":2696:2697   */\n      0x00\n        /* \"#utility.yul\":2689:2704   */\n      revert\n        /* \"#utility.yul\":2715:2843   */\n    tag_67:\n        /* \"#utility.yul\":2782:2791   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2803:2814   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2800:2837   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":2817:2835   */\n      tag_97\n      tag_156\n      jump\t// in\n        /* \"#utility.yul\":2848:2975   */\n    tag_73:\n        /* \"#utility.yul\":2909:2919   */\n      0x4e487b71\n        /* \"#utility.yul\":2904:2907   */\n      0xe0\n        /* \"#utility.yul\":2900:2920   */\n      shl\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2890:2921   */\n      mstore\n        /* \"#utility.yul\":2940:2944   */\n      0x41\n        /* \"#utility.yul\":2937:2938   */\n      0x04\n        /* \"#utility.yul\":2930:2945   */\n      mstore\n        /* \"#utility.yul\":2964:2968   */\n      0x24\n        /* \"#utility.yul\":2961:2962   */\n      0x00\n        /* \"#utility.yul\":2954:2969   */\n      revert\n        /* \"#utility.yul\":2980:3105   */\n    tag_80:\n        /* \"#utility.yul\":3045:3054   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3066:3076   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3063:3099   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3079:3097   */\n      tag_97\n      tag_156\n      jump\t// in\n        /* \"#utility.yul\":3110:3237   */\n    tag_84:\n        /* \"#utility.yul\":3171:3181   */\n      0x4e487b71\n        /* \"#utility.yul\":3166:3169   */\n      0xe0\n        /* \"#utility.yul\":3162:3182   */\n      shl\n        /* \"#utility.yul\":3159:3160   */\n      0x00\n        /* \"#utility.yul\":3152:3183   */\n      mstore\n        /* \"#utility.yul\":3202:3206   */\n      0x32\n        /* \"#utility.yul\":3199:3200   */\n      0x04\n        /* \"#utility.yul\":3192:3207   */\n      mstore\n        /* \"#utility.yul\":3226:3230   */\n      0x24\n        /* \"#utility.yul\":3223:3224   */\n      0x00\n        /* \"#utility.yul\":3216:3231   */\n      revert\n        /* \"#utility.yul\":3242:3377   */\n    tag_86:\n        /* \"#utility.yul\":3281:3284   */\n      0x00\n        /* \"#utility.yul\":3302:3319   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3299:3342   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":3322:3340   */\n      tag_183\n      tag_156\n      jump\t// in\n    tag_183:\n      pop\n        /* \"#utility.yul\":3369:3370   */\n      0x01\n        /* \"#utility.yul\":3358:3371   */\n      add\n      swap1\n        /* \"#utility.yul\":3242:3377   */\n      jump\t// out\n        /* \"#utility.yul\":4150:4277   */\n    tag_143:\n        /* \"#utility.yul\":4211:4221   */\n      0x4e487b71\n        /* \"#utility.yul\":4206:4209   */\n      0xe0\n        /* \"#utility.yul\":4202:4222   */\n      shl\n        /* \"#utility.yul\":4199:4200   */\n      0x00\n        /* \"#utility.yul\":4192:4223   */\n      mstore\n        /* \"#utility.yul\":4242:4246   */\n      0x31\n        /* \"#utility.yul\":4239:4240   */\n      0x04\n        /* \"#utility.yul\":4232:4247   */\n      mstore\n        /* \"#utility.yul\":4266:4270   */\n      0x24\n        /* \"#utility.yul\":4263:4264   */\n      0x00\n        /* \"#utility.yul\":4256:4271   */\n      revert\n\n    auxdata: 0xa26469706673582212202e76e42bad514947bcdfef094a7498fe790b9c21b3f43a633f01e729d6e1923e64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 31,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61081b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e7578063985e3a2f14610102578063999ba27c14610118578063f2fde38b1461013b57600080fd5b8063175188e81461008d578063223e5479146100a257806331fb5b1f146100b5578063715018a6146100df575b600080fd5b6100a061009b3660046106b2565b61014e565b005b6100a06100b03660046106b2565b6101ee565b6100c86100c33660046106db565b610291565b6040516100d69291906106fd565b60405180910390f35b6100a0610386565b6000546040516001600160a01b0390911681526020016100d6565b61010a61039a565b6040519081526020016100d6565b61012b6101263660046106b2565b6103ab565b60405190151581526020016100d6565b6100a06101493660046106b2565b6103be565b610156610437565b610161600182610491565b6101ab5760405162461bcd60e51b81526020600482015260166024820152751d1a1948195e081b9bdd081dda1a5d195b1a5cdd195960521b60448201526064015b60405180910390fd5b6101b66001826104b6565b506040516001600160a01b038216907f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea490600090a250565b6101f6610437565b610201600182610491565b1561024e5760405162461bcd60e51b815260206004820152601b60248201527f74686520657820616c7265616479202077686974656c6973746564000000000060448201526064016101a2565b6102596001826104cb565b506040516001600160a01b038216907f6b583e2e3ad2e182671d77905fee57b1ffd8ce2aa5c0b652ca029317919751a490600090a250565b6060600082846102a160016104e0565b6102ab9190610764565b8111156102ca57846102bd60016104e0565b6102c79190610764565b90505b60008167ffffffffffffffff8111156102e5576102e5610777565b60405190808252806020026020018201604052801561030e578160200160208202803683370190505b50905060005b8281101561036d57610331610329828961078d565b6001906104ea565b828281518110610343576103436107a0565b6001600160a01b039092166020928302919091019091015280610365816107b6565b915050610314565b5080610379838861078d565b9350935050509250929050565b61038e610437565b61039860006104f6565b565b60006103a660016104e0565b905090565b60006103b8600183610491565b92915050565b6103c6610437565b6001600160a01b03811661042b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a2565b610434816104f6565b50565b6000546001600160a01b031633146103985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a2565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b60006104af836001600160a01b038416610546565b60006104af836001600160a01b038416610639565b60006103b8825490565b60006104af8383610688565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600183016020526040812054801561062f57600061056a600183610764565b855490915060009061057e90600190610764565b90508181146105e357600086600001828154811061059e5761059e6107a0565b90600052602060002001549050808760000184815481106105c1576105c16107a0565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806105f4576105f46107cf565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103b8565b60009150506103b8565b6000818152600183016020526040812054610680575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103b8565b5060006103b8565b600082600001828154811061069f5761069f6107a0565b9060005260206000200154905092915050565b6000602082840312156106c457600080fd5b81356001600160a01b03811681146104af57600080fd5b600080604083850312156106ee57600080fd5b50508035926020909101359150565b604080825283519082018190526000906020906060840190828701845b8281101561073f5781516001600160a01b03168452928401929084019060010161071a565b50505092019290925292915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103b8576103b861074e565b634e487b7160e01b600052604160045260246000fd5b808201808211156103b8576103b861074e565b634e487b7160e01b600052603260045260246000fd5b6000600182016107c8576107c861074e565b5060010190565b634e487b7160e01b600052603160045260246000fdfea26469706673582212202e76e42bad514947bcdfef094a7498fe790b9c21b3f43a633f01e729d6e1923e64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x81B DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x985E3A2F EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x999BA27C EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x175188E8 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x31FB5B1F EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP3 SWAP2 SWAP1 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x156 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x161 PUSH1 0x1 DUP3 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x1AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1D1A1948195E081B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH1 0x1 DUP3 PUSH2 0x4B6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x9A1DB4B80C32706328728508C941A6B954F31EB5AFFD32F236C1FD405F8FEA4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x201 PUSH1 0x1 DUP3 PUSH2 0x491 JUMP JUMPDEST ISZERO PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520657820616C7265616479202077686974656C69737465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x259 PUSH1 0x1 DUP3 PUSH2 0x4CB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6B583E2E3AD2E182671D77905FEE57B1FFD8CE2AA5C0B652CA029317919751A4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 DUP5 PUSH2 0x2A1 PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x2CA JUMPI DUP5 PUSH2 0x2BD PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E5 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x30E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x36D JUMPI PUSH2 0x331 PUSH2 0x329 DUP3 DUP10 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x4EA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x343 JUMPI PUSH2 0x343 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x365 DUP2 PUSH2 0x7B6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST POP DUP1 PUSH2 0x379 DUP4 DUP9 PUSH2 0x78D JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0x437 JUMP JUMPDEST PUSH2 0x398 PUSH1 0x0 PUSH2 0x4F6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6 PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 PUSH1 0x1 DUP4 PUSH2 0x491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x434 DUP2 PUSH2 0x4F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP4 DUP4 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 PUSH2 0x56A PUSH1 0x1 DUP4 PUSH2 0x764 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x57E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x764 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x59E JUMPI PUSH2 0x59E PUSH2 0x7A0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5C1 JUMPI PUSH2 0x5C1 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x5F4 JUMPI PUSH2 0x5F4 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x680 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x69F JUMPI PUSH2 0x69F PUSH2 0x7A0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x73F JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x71A JUMP JUMPDEST POP POP POP SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0x74E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0x74E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x7C8 JUMPI PUSH2 0x7C8 PUSH2 0x74E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E PUSH23 0xE42BAD514947BCDFEF094A7498FE790B9C21B3F43A633F ADD 0xE7 0x29 0xD6 0xE1 SWAP3 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "405:2478:3:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:1;936:18:0;:32::i;:::-;405:2478:3;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;405:2478:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_add_187": {
									"entryPoint": 1593,
									"id": 187,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_at_321": {
									"entryPoint": 1672,
									"id": 321,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 1079,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_contains_290": {
									"entryPoint": null,
									"id": 290,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_length_304": {
									"entryPoint": null,
									"id": 304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_remove_271": {
									"entryPoint": 1350,
									"id": 271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1270,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addStrategy_789": {
									"entryPoint": 494,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_473": {
									"entryPoint": 1227,
									"id": 473,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@at_569": {
									"entryPoint": 1258,
									"id": 569,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_527": {
									"entryPoint": 1169,
									"id": 527,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isStrategyWhitelisted_830": {
									"entryPoint": 939,
									"id": 830,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_542": {
									"entryPoint": 1248,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeStrategy_816": {
									"entryPoint": 334,
									"id": 816,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_500": {
									"entryPoint": 1206,
									"id": 500,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 902,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 958,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@viewCountWhitelistedStrategies_841": {
									"entryPoint": 922,
									"id": 841,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@viewWhitelistedStrategies_916": {
									"entryPoint": 657,
									"id": 916,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f041a0166ca2bd003d17899496a7f4c0b8e15639ed07a055e9e14fbad4d04fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7df3f74e6721cf2d25f64b911d0ab529fd8e5f79957f6d7c9e2532a25cbb15f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1952,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4279:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:5"
															},
															"nodeType": "YulIf",
															"src": "94:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:5"
															},
															"nodeType": "YulIf",
															"src": "200:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:5",
														"type": ""
													}
												],
												"src": "14:286:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "392:161:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "438:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "447:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "450:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "440:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "440:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "440:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "413:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "422:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "409:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "409:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "434:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:32:5"
															},
															"nodeType": "YulIf",
															"src": "402:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "463:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "486:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "473:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "463:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "505:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "532:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "543:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "528:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "515:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "515:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "505:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "350:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "361:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "373:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "381:6:5",
														"type": ""
													}
												],
												"src": "305:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "737:552:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "747:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "765:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "776:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "761:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "761:18:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "751:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "795:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "806:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "788:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "788:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "818:17:5",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "829:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "822:3:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "844:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "864:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "858:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "848:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "887:6:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "895:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "880:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "880:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "880:22:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "911:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "922:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "933:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:18:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "945:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "955:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "949:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "968:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "986:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "994:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "982:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "982:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "972:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1006:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1015:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1010:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1074:146:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1110:6:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1104:5:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1104:13:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1127:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1132:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "1123:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1123:11:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1136:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1119:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1119:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1100:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1100:39:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1088:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1088:52:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1088:52:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1153:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1169:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1160:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1160:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1153:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1185:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1199:6:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1207:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1195:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1195:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1185:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1036:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1047:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1049:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1058:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1054:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1054:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1049:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1029:3:5",
																"statements": []
															},
															"src": "1025:195:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1229:11:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1237:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1229:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1260:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1271:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1256:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1256:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "698:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "709:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "717:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "728:4:5",
														"type": ""
													}
												],
												"src": "558:731:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1395:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1405:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1417:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1428:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1405:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1447:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1462:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1478:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1483:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1474:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1474:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1487:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1470:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1470:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1458:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1458:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1364:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1375:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1386:4:5",
														"type": ""
													}
												],
												"src": "1294:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1603:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1613:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1625:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1636:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1621:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1621:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1613:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1655:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1666:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1648:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1648:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1572:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1583:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1594:4:5",
														"type": ""
													}
												],
												"src": "1502:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1789:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1801:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1812:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1789:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1831:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1856:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1849:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1849:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1842:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1824:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1824:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1748:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1759:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1770:4:5",
														"type": ""
													}
												],
												"src": "1684:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:172:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2067:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2078:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2060:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2060:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2101:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2112:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2117:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2140:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2151:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2136:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2136:18:5"
																	},
																	{
																		"hexValue": "746865206578206e6f742077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2156:24:5",
																		"type": "",
																		"value": "the ex not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2129:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2129:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2129:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2190:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2202:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2213:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2198:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2190:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f041a0166ca2bd003d17899496a7f4c0b8e15639ed07a055e9e14fbad4d04fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2027:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2041:4:5",
														"type": ""
													}
												],
												"src": "1876:346:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2401:177:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2418:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2429:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2411:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2411:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2452:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2463:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2468:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2441:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2441:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2502:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:18:5"
																	},
																	{
																		"hexValue": "74686520657820616c7265616479202077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2507:29:5",
																		"type": "",
																		"value": "the ex already  whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2480:57:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2546:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2558:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2554:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2546:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7df3f74e6721cf2d25f64b911d0ab529fd8e5f79957f6d7c9e2532a25cbb15f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2378:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2392:4:5",
														"type": ""
													}
												],
												"src": "2227:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2615:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2632:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2639:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2644:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2635:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2635:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2625:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2625:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2675:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2665:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2665:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2699:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2689:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2689:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2689:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2583:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2774:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2786:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2789:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2782:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2782:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2774:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2815:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2817:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2817:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2817:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2806:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2812:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2803:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:11:5"
															},
															"nodeType": "YulIf",
															"src": "2800:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2746:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2749:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2755:4:5",
														"type": ""
													}
												],
												"src": "2715:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2904:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2909:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2900:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2890:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2890:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2930:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2961:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2848:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3028:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3038:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3049:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3052:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3045:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3038:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3077:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3079:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3079:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3079:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3069:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3072:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3066:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:10:5"
															},
															"nodeType": "YulIf",
															"src": "3063:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3011:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3014:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3020:3:5",
														"type": ""
													}
												],
												"src": "2980:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3159:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3166:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3171:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3162:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3162:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3199:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3202:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3192:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3223:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3226:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3216:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "3110:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3289:88:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3320:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3322:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3322:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3322:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3305:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3316:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:6:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3302:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3302:17:5"
															},
															"nodeType": "YulIf",
															"src": "3299:43:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3351:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3362:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3369:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3358:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3358:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3351:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3271:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3281:3:5",
														"type": ""
													}
												],
												"src": "3242:135:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3556:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3573:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3566:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3566:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3566:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3607:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3618:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3603:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3623:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3596:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3662:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3717:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3728:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3713:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3713:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3733:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3706:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3706:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3751:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3763:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3774:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3759:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3751:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3533:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3547:4:5",
														"type": ""
													}
												],
												"src": "3382:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3963:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3980:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3991:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3973:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3973:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3973:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4014:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4025:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4010:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4010:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4030:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4003:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4003:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4053:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4064:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4069:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4042:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4042:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4113:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4125:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4121:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4121:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4113:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3940:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3954:4:5",
														"type": ""
													}
												],
												"src": "3789:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4182:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4199:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4206:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4211:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4202:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4202:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4192:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4239:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4242:4:5",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4232:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4232:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4232:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4266:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4256:15:5"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "4150:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, _1), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_1f041a0166ca2bd003d17899496a7f4c0b8e15639ed07a055e9e14fbad4d04fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"the ex not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7df3f74e6721cf2d25f64b911d0ab529fd8e5f79957f6d7c9e2532a25cbb15f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"the ex already  whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e7578063985e3a2f14610102578063999ba27c14610118578063f2fde38b1461013b57600080fd5b8063175188e81461008d578063223e5479146100a257806331fb5b1f146100b5578063715018a6146100df575b600080fd5b6100a061009b3660046106b2565b61014e565b005b6100a06100b03660046106b2565b6101ee565b6100c86100c33660046106db565b610291565b6040516100d69291906106fd565b60405180910390f35b6100a0610386565b6000546040516001600160a01b0390911681526020016100d6565b61010a61039a565b6040519081526020016100d6565b61012b6101263660046106b2565b6103ab565b60405190151581526020016100d6565b6100a06101493660046106b2565b6103be565b610156610437565b610161600182610491565b6101ab5760405162461bcd60e51b81526020600482015260166024820152751d1a1948195e081b9bdd081dda1a5d195b1a5cdd195960521b60448201526064015b60405180910390fd5b6101b66001826104b6565b506040516001600160a01b038216907f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea490600090a250565b6101f6610437565b610201600182610491565b1561024e5760405162461bcd60e51b815260206004820152601b60248201527f74686520657820616c7265616479202077686974656c6973746564000000000060448201526064016101a2565b6102596001826104cb565b506040516001600160a01b038216907f6b583e2e3ad2e182671d77905fee57b1ffd8ce2aa5c0b652ca029317919751a490600090a250565b6060600082846102a160016104e0565b6102ab9190610764565b8111156102ca57846102bd60016104e0565b6102c79190610764565b90505b60008167ffffffffffffffff8111156102e5576102e5610777565b60405190808252806020026020018201604052801561030e578160200160208202803683370190505b50905060005b8281101561036d57610331610329828961078d565b6001906104ea565b828281518110610343576103436107a0565b6001600160a01b039092166020928302919091019091015280610365816107b6565b915050610314565b5080610379838861078d565b9350935050509250929050565b61038e610437565b61039860006104f6565b565b60006103a660016104e0565b905090565b60006103b8600183610491565b92915050565b6103c6610437565b6001600160a01b03811661042b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a2565b610434816104f6565b50565b6000546001600160a01b031633146103985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a2565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b60006104af836001600160a01b038416610546565b60006104af836001600160a01b038416610639565b60006103b8825490565b60006104af8383610688565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600183016020526040812054801561062f57600061056a600183610764565b855490915060009061057e90600190610764565b90508181146105e357600086600001828154811061059e5761059e6107a0565b90600052602060002001549050808760000184815481106105c1576105c16107a0565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806105f4576105f46107cf565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103b8565b60009150506103b8565b6000818152600183016020526040812054610680575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103b8565b5060006103b8565b600082600001828154811061069f5761069f6107a0565b9060005260206000200154905092915050565b6000602082840312156106c457600080fd5b81356001600160a01b03811681146104af57600080fd5b600080604083850312156106ee57600080fd5b50508035926020909101359150565b604080825283519082018190526000906020906060840190828701845b8281101561073f5781516001600160a01b03168452928401929084019060010161071a565b50505092019290925292915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103b8576103b861074e565b634e487b7160e01b600052604160045260246000fd5b808201808211156103b8576103b861074e565b634e487b7160e01b600052603260045260246000fd5b6000600182016107c8576107c861074e565b5060010190565b634e487b7160e01b600052603160045260246000fdfea26469706673582212202e76e42bad514947bcdfef094a7498fe790b9c21b3f43a633f01e729d6e1923e64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x985E3A2F EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x999BA27C EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x175188E8 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x31FB5B1F EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP3 SWAP2 SWAP1 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x156 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x161 PUSH1 0x1 DUP3 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x1AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1D1A1948195E081B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH1 0x1 DUP3 PUSH2 0x4B6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x9A1DB4B80C32706328728508C941A6B954F31EB5AFFD32F236C1FD405F8FEA4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x201 PUSH1 0x1 DUP3 PUSH2 0x491 JUMP JUMPDEST ISZERO PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520657820616C7265616479202077686974656C69737465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x259 PUSH1 0x1 DUP3 PUSH2 0x4CB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x6B583E2E3AD2E182671D77905FEE57B1FFD8CE2AA5C0B652CA029317919751A4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 DUP5 PUSH2 0x2A1 PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x2CA JUMPI DUP5 PUSH2 0x2BD PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E5 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x30E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x36D JUMPI PUSH2 0x331 PUSH2 0x329 DUP3 DUP10 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x4EA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x343 JUMPI PUSH2 0x343 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x365 DUP2 PUSH2 0x7B6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST POP DUP1 PUSH2 0x379 DUP4 DUP9 PUSH2 0x78D JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0x437 JUMP JUMPDEST PUSH2 0x398 PUSH1 0x0 PUSH2 0x4F6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6 PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 PUSH1 0x1 DUP4 PUSH2 0x491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x434 DUP2 PUSH2 0x4F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP4 DUP4 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 PUSH2 0x56A PUSH1 0x1 DUP4 PUSH2 0x764 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x57E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x764 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x59E JUMPI PUSH2 0x59E PUSH2 0x7A0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5C1 JUMPI PUSH2 0x5C1 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x5F4 JUMPI PUSH2 0x5F4 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x680 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x69F JUMPI PUSH2 0x69F PUSH2 0x7A0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x73F JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x71A JUMP JUMPDEST POP POP POP SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0x74E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0x74E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x7C8 JUMPI PUSH2 0x7C8 PUSH2 0x74E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E PUSH23 0xE42BAD514947BCDFEF094A7498FE790B9C21B3F43A633F ADD 0xE7 0x29 0xD6 0xE1 SWAP3 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "405:2478:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1213:253;;;;;;:::i;:::-;;:::i;:::-;;817:257;;;;;;:::i;:::-;;:::i;2277:604::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;1440:51:5;;1428:2;1413:18;1201:85:0;1294:203:5;1944:138:3;;;:::i;:::-;;;1648:25:5;;;1636:2;1621:18;1944:138:3;1502:177:5;1639:152:3;;;;;;:::i;:::-;;:::i;:::-;;;1849:14:5;;1842:22;1824:41;;1812:2;1797:18;1639:152:3;1684:187:5;2081:198:0;;;;;;:::i;:::-;;:::i;1213:253:3:-;1094:13:0;:11;:13::i;:::-;1301:41:3::1;:22;1333:8:::0;1301:31:::1;:41::i;:::-;1293:76;;;::::0;-1:-1:-1;;;1293:76:3;;2078:2:5;1293:76:3::1;::::0;::::1;2060:21:5::0;2117:2;2097:18;;;2090:30;-1:-1:-1;;;2136:18:5;;;2129:52;2198:18;;1293:76:3::1;;;;;;;;;1379:39;:22;1409:8:::0;1379:29:::1;:39::i;:::-;-1:-1:-1::0;1434:25:3::1;::::0;-1:-1:-1;;;;;1434:25:3;::::1;::::0;::::1;::::0;;;::::1;1213:253:::0;:::o;817:257::-;1094:13:0;:11;:13::i;:::-;903:41:3::1;:22;935:8:::0;903:31:::1;:41::i;:::-;902:42;894:82;;;::::0;-1:-1:-1;;;894:82:3;;2429:2:5;894:82:3::1;::::0;::::1;2411:21:5::0;2468:2;2448:18;;;2441:30;2507:29;2487:18;;;2480:57;2554:18;;894:82:3::1;2227:351:5::0;894:82:3::1;986:36;:22;1013:8:::0;986:26:::1;:36::i;:::-;-1:-1:-1::0;1038:29:3::1;::::0;-1:-1:-1;;;;;1038:29:3;::::1;::::0;::::1;::::0;;;::::1;817:257:::0;:::o;2277:604::-;2406:16;2424:7;2464:4;2526:6;2492:31;:22;:29;:31::i;:::-;:40;;;;:::i;:::-;2483:6;:49;2479:129;;;2591:6;2557:31;:22;:29;:31::i;:::-;:40;;;;:::i;:::-;2548:49;;2479:129;2618:38;2673:6;2659:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2659:21:3;;2618:62;;2696:9;2691:126;2715:6;2711:1;:10;2691:126;;;2769:37;2795:10;2804:1;2795:6;:10;:::i;:::-;2769:22;;:25;:37::i;:::-;2742:21;2764:1;2742:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2742:64:3;;;:24;;;;;;;;;;;:64;2723:3;;;;:::i;:::-;;;;2691:126;;;-1:-1:-1;2835:21:3;2858:15;2867:6;2858;:15;:::i;:::-;2827:47;;;;;;2277:604;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1944:138:3:-;2018:7;2044:31;:22;:29;:31::i;:::-;2037:38;;1944:138;:::o;1639:152::-;1720:4;1743:41;:22;1775:8;1743:31;:41::i;:::-;1736:48;1639:152;-1:-1:-1;;1639:152:3:o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;3584:2:5;2161:73:0::1;::::0;::::1;3566:21:5::0;3623:2;3603:18;;;3596:30;3662:34;3642:18;;;3635:62;-1:-1:-1;;;3713:18:5;;;3706:36;3759:19;;2161:73:0::1;3382:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;3991:2:5;1414:68:0;;;3973:21:5;;;4010:18;;;4003:30;4069:34;4049:18;;;4042:62;4121:18;;1414:68:0;3789:356:5;8583:165:2;-1:-1:-1;;;;;8716:23:2;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;8679:62;8583:165;-1:-1:-1;;;8583:165:2:o;8346:156::-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:2;;8442:7;:53::i;8028:150::-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:2;;8121:4;:50::i;8829:115::-;8892:7;8918:19;8926:3;4444:18;;4362:107;9286:156;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2685:1388:2:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:2;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;2113:404;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:2;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:2;2488:12;;4811:118;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;14:286:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:5;;210:42;;200:70;;266:1;263;256:12;305:248;373:6;381;434:2;422:9;413:7;409:23;405:32;402:52;;;450:1;447;440:12;402:52;-1:-1:-1;;473:23:5;;;543:2;528:18;;;515:32;;-1:-1:-1;305:248:5:o;558:731::-;776:2;788:21;;;858:13;;761:18;;;880:22;;;728:4;;955;;933:2;918:18;;;982:15;;;728:4;1025:195;1039:6;1036:1;1033:13;1025:195;;;1104:13;;-1:-1:-1;;;;;1100:39:5;1088:52;;1160:12;;;;1195:15;;;;1136:1;1054:9;1025:195;;;-1:-1:-1;;;1256:18:5;;1249:34;;;;1237:3;558:731;-1:-1:-1;;558:731:5:o;2583:127::-;2644:10;2639:3;2635:20;2632:1;2625:31;2675:4;2672:1;2665:15;2699:4;2696:1;2689:15;2715:128;2782:9;;;2803:11;;;2800:37;;;2817:18;;:::i;2848:127::-;2909:10;2904:3;2900:20;2897:1;2890:31;2940:4;2937:1;2930:15;2964:4;2961:1;2954:15;2980:125;3045:9;;;3066:10;;;3063:36;;;3079:18;;:::i;3110:127::-;3171:10;3166:3;3162:20;3159:1;3152:31;3202:4;3199:1;3192:15;3226:4;3223:1;3216:15;3242:135;3281:3;3302:17;;;3299:43;;3322:18;;:::i;:::-;-1:-1:-1;3369:1:5;3358:13;;3242:135::o;4150:127::-;4211:10;4206:3;4202:20;4199:1;4192:31;4242:4;4239:1;4232:15;4266:4;4263:1;4256:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "415000",
								"executionCost": "26290",
								"totalCost": "441290"
							},
							"external": {
								"addStrategy(address)": "infinite",
								"isStrategyWhitelisted(address)": "infinite",
								"owner()": "2301",
								"removeStrategy(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28364",
								"viewCountWhitelistedStrategies()": "2392",
								"viewWhitelistedStrategies(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 405,
									"end": 2883,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 2883,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e76e42bad514947bcdfef094a7498fe790b9c21b3f43a633f01e729d6e1923e64736f6c63430008110033",
									".code": [
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "985E3A2F"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "999BA27C"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "175188E8"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "223E5479"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "31FB5B1F"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 405,
											"end": 2883,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1213,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1213,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 817,
											"end": 1074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 817,
											"end": 1074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2277,
											"end": 2881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2277,
											"end": 2881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2277,
											"end": 2881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1294,
											"end": 1497,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1944,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1648,
											"end": 1673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1673,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1673,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1638,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1502,
											"end": 1679,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1639,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1639,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1863,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1814,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1684,
											"end": 1871,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1301,
											"end": 1323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 1341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1301,
											"end": 1342,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1301,
											"end": 1342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1293,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2080,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2120,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1A1948195E081B9BDD081DDA1A5D195B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2154,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2136,
											"end": 2154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2154,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2216,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2198,
											"end": 2216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1293,
											"end": 1369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1379,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1409,
											"end": 1417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1379,
											"end": 1418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1379,
											"end": 1418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1434,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1459,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "9A1DB4B80C32706328728508C941A6B954F31EB5AFFD32F236C1FD405F8FEA4"
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1459,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 903,
											"end": 925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 935,
											"end": 943,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 903,
											"end": 944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 903,
											"end": 944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 903,
											"end": 944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 902,
											"end": 944,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 894,
											"end": 976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 894,
											"end": 976,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 894,
											"end": 976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 976,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 894,
											"end": 976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 894,
											"end": 976,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 894,
											"end": 976,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2470,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2471,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2536,
											"name": "PUSH",
											"source": 5,
											"value": "74686520657820616C7265616479202077686974656C69737465640000000000"
										},
										{
											"begin": 2487,
											"end": 2505,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2487,
											"end": 2505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 894,
											"end": 976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2227,
											"end": 2578,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 894,
											"end": 976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1022,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 986,
											"end": 1008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 1021,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 986,
											"end": 1022,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1022,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 986,
											"end": 1022,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1038,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6B583E2E3AD2E182671D77905FEE57B1FFD8CE2AA5C0B652CA029317919751A4"
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1067,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2422,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2424,
											"end": 2431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2468,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2492,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2492,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2492,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2492,
											"end": 2532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2492,
											"end": 2532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2532,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2492,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2489,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2532,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2479,
											"end": 2608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2591,
											"end": 2597,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2557,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2557,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2557,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2588,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2557,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2557,
											"end": 2597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2557,
											"end": 2597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2597,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2557,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2608,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2479,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2659,
											"end": 2680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2795,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2804,
											"end": 2805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2801,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2795,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2805,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2795,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2791,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2769,
											"end": 2791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2769,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2806,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2769,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2765,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2742,
											"end": 2766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2806,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2806,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2806,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2723,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2691,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2864,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2858,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2873,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2858,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2874,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2874,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2044,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2075,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2044,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2075,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1944,
											"end": 2082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1944,
											"end": 2082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1743,
											"end": 1765,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1775,
											"end": 1783,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1743,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1743,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1743,
											"end": 1784,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1743,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1784,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1639,
											"end": 1791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3603,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3603,
											"end": 3621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 3621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3626,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3696,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3635,
											"end": 3697,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3742,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3382,
											"end": 3784,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4028,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4010,
											"end": 4028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4103,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4049,
											"end": 4067,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4049,
											"end": 4067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4042,
											"end": 4104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3789,
											"end": 4145,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8748,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 8583,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8716,
											"end": 8739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8716,
											"end": 8739,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8663,
											"end": 8667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8686,
											"end": 8741,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8686,
											"end": 8741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8679,
											"end": 8741,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8583,
											"end": 8748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8583,
											"end": 8748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8502,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 8346,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8419,
											"end": 8423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8450,
											"end": 8453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8470,
											"end": 8493,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8470,
											"end": 8493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8442,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 8442,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8028,
											"end": 8178,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 8028,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8121,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8126,
											"end": 8129,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8121,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8121,
											"end": 8171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8829,
											"end": 8944,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 8829,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8892,
											"end": 8899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8918,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 8926,
											"end": 8929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4469,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9286,
											"end": 9442,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 9286,
											"end": 9442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9360,
											"end": 9367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 9414,
											"end": 9417,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9410,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 9410,
											"end": 9432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3315,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3363,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3430,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3473,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3470,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3595,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3592,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3876,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3986,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4916,
											"end": 4921,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4904,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4922,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 305,
											"end": 553,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 305,
											"end": 553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 387,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 434,
											"end": 436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 413,
											"end": 420,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 405,
											"end": 437,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 402,
											"end": 454,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 402,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 402,
											"end": 454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 450,
											"end": 451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 440,
											"end": 452,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 402,
											"end": 454,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 402,
											"end": 454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 473,
											"end": 496,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 473,
											"end": 496,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 496,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 543,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 528,
											"end": 546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 528,
											"end": 546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 515,
											"end": 547,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 515,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 558,
											"end": 1289,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 558,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 809,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 788,
											"end": 809,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 788,
											"end": 809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 858,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 858,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 761,
											"end": 779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 761,
											"end": 779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 761,
											"end": 779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 880,
											"end": 902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 880,
											"end": 902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 902,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 728,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 955,
											"end": 959,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 959,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 918,
											"end": 936,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 918,
											"end": 936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 982,
											"end": 997,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 982,
											"end": 997,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 982,
											"end": 997,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 728,
											"end": 732,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1220,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1025,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1046,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1025,
											"end": 1220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1139,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1140,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1140,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1210,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1054,
											"end": 1063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1025,
											"end": 1220,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1220,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1025,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1283,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1283,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1240,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 558,
											"end": 1289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 558,
											"end": 1289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2710,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2583,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2654,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2639,
											"end": 2642,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2635,
											"end": 2655,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2679,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2672,
											"end": 2673,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2703,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2843,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2715,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2837,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2800,
											"end": 2837,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2817,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2817,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2975,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2848,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2904,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2900,
											"end": 2920,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2944,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2937,
											"end": 2938,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2961,
											"end": 2962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2980,
											"end": 3105,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2980,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 3054,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 3054,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 3054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3076,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3076,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3076,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3099,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3063,
											"end": 3099,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3237,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3110,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3181,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3166,
											"end": 3169,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3162,
											"end": 3182,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3192,
											"end": 3207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3231,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3377,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3242,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3319,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3302,
											"end": 3319,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3319,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3299,
											"end": 3342,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3322,
											"end": 3340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3358,
											"end": 3371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3358,
											"end": 3371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4277,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4150,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4221,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 4206,
											"end": 4209,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4202,
											"end": 4222,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4239,
											"end": 4240,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4270,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4263,
											"end": 4264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4271,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"contracts/Manager/ExecutionManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addStrategy(address)": "223e5479",
							"isStrategyWhitelisted(address)": "999ba27c",
							"owner()": "8da5cb5b",
							"removeStrategy(address)": "175188e8",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"viewCountWhitelistedStrategies()": "985e3a2f",
							"viewWhitelistedStrategies(uint256,uint256)": "31fb5b1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyWhitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"isStrategyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCountWhitelistedStrategies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"viewWhitelistedStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ExecutionManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"It allows adding/removing execution strategies for trading on the LooksRare exchange.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/ExecutionManager.sol\":\"ExecutionManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/Manager/ExecutionManager.sol\":{\"keccak256\":\"0xbcff995441f246743dd27cbb7b0c836dc05d200294d1c824a692da14f3025c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96e0c70aaecfaa8c225ed9ed8d194353d003d6dddc4ef052c7abb263ae445b7c\",\"dweb:/ipfs/QmWaTJDDhdxU1WqQCm5EhMS7XZshrjXF3Sn5wJH2HAcZbU\"]},\"contracts/Manager/interface/TheExManager.sol\":{\"keccak256\":\"0xf68dcbd29125fed9b86d24ee4a46a90c7311d0e429a9f379336d26c26a05acd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b433798aae0b80257667ca3e4573fd010989623b09b4bbd94fd2fa6885b535bc\",\"dweb:/ipfs/QmPnaMAhD4cs5KUVUAkryxGD9GkwmwGUYSCpN1Fe5xxEqq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/ExecutionManager.sol:ExecutionManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 753,
								"contract": "contracts/Manager/ExecutionManager.sol:ExecutionManager",
								"label": "_whitelistedStrategies",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(AddressSet)446_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)446_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 445,
										"contract": "contracts/Manager/ExecutionManager.sol:ExecutionManager",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)145_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)145_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 140,
										"contract": "contracts/Manager/ExecutionManager.sol:ExecutionManager",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 144,
										"contract": "contracts/Manager/ExecutionManager.sol:ExecutionManager",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "It allows adding/removing execution strategies for trading on the LooksRare exchange.",
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheExManager.sol": {
				"TheExManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "addStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "isStrategyWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "removeStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCountWhitelistedStrategies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cursor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"name": "viewWhitelistedStrategies",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStrategy(address)": "223e5479",
							"isStrategyWhitelisted(address)": "999ba27c",
							"removeStrategy(address)": "175188e8",
							"viewCountWhitelistedStrategies()": "985e3a2f",
							"viewWhitelistedStrategies(uint256,uint256)": "31fb5b1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"isStrategyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCountWhitelistedStrategies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"viewWhitelistedStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheExManager.sol\":\"TheExManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheExManager.sol\":{\"keccak256\":\"0xf68dcbd29125fed9b86d24ee4a46a90c7311d0e429a9f379336d26c26a05acd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b433798aae0b80257667ca3e4573fd010989623b09b4bbd94fd2fa6885b535bc\",\"dweb:/ipfs/QmPnaMAhD4cs5KUVUAkryxGD9GkwmwGUYSCpN1Fe5xxEqq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							733
						]
					},
					"id": 734,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "140:1087:2",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 733,
							"linearizedBaseContracts": [
								733
							],
							"name": "EnumerableSet",
							"nameLocation": "1236:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 145,
									"members": [
										{
											"constant": false,
											"id": 140,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1760:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "1750:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 138,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 139,
												"nodeType": "ArrayTypeName",
												"src": "1750:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1928:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "1900:36:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 143,
												"keyType": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1900:27:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1703:3:2",
									"nodeType": "StructDefinition",
									"scope": 733,
									"src": "1696:247:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "2182:335:2",
										"statements": [
											{
												"condition": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2196:22:2",
													"subExpression": {
														"arguments": [
															{
																"id": 157,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2207:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 158,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "2212:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 156,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "2197:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2197:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 184,
													"nodeType": "Block",
													"src": "2474:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 155,
															"id": 183,
															"nodeType": "Return",
															"src": "2488:12:2"
														}
													]
												},
												"id": 185,
												"nodeType": "IfStatement",
												"src": "2192:319:2",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "2220:248:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 166,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2251:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "2234:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 164,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2238:7:2",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 140,
																		"src": "2234:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2246:4:2",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2234:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2234:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 168,
															"nodeType": "ExpressionStatement",
															"src": "2234:23:2"
														},
														{
															"expression": {
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 169,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "2392:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2396:8:2",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 144,
																		"src": "2392:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 173,
																	"indexExpression": {
																		"id": 171,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2405:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2392:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 174,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "2414:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 175,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2418:7:2",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 140,
																		"src": "2414:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2426:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2414:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2392:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 178,
															"nodeType": "ExpressionStatement",
															"src": "2392:40:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2453:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 155,
															"id": 180,
															"nodeType": "Return",
															"src": "2446:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "1949:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2122:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2139:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2127:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 148,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 147,
														"name": "Set",
														"nameLocations": [
															"2127:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "2127:3:2"
													},
													"referencedDeclaration": 145,
													"src": "2127:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2152:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:32:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2176:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:6:2"
									},
									"scope": 733,
									"src": "2113:404:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "2757:1316:2",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2875:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "2867:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2867:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 200,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2888:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2892:8:2",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "2888:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 203,
													"indexExpression": {
														"id": 202,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2901:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2888:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2867:40:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 205,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "2922:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2936:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2922:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 268,
													"nodeType": "Block",
													"src": "4030:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4051:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 197,
															"id": 267,
															"nodeType": "Return",
															"src": "4044:12:2"
														}
													]
												},
												"id": 269,
												"nodeType": "IfStatement",
												"src": "2918:1149:2",
												"trueBody": {
													"id": 265,
													"nodeType": "Block",
													"src": "2939:1085:2",
													"statements": [
														{
															"assignments": [
																209
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 209,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3299:13:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 265,
																	"src": "3291:21:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 208,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3291:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 213,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "3315:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3328:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3315:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3291:38:2"
														},
														{
															"assignments": [
																215
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 215,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3351:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 265,
																	"src": "3343:17:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 214,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3343:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 221,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 216,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "3363:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3367:7:2",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 140,
																		"src": "3363:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3375:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3363:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3363:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3343:42:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 222,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3404:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 223,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "3417:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3404:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 249,
															"nodeType": "IfStatement",
															"src": "3400:398:2",
															"trueBody": {
																"id": 248,
																"nodeType": "Block",
																"src": "3432:366:2",
																"statements": [
																	{
																		"assignments": [
																			226
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 226,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3458:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 248,
																				"src": "3450:17:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 225,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3450:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 231,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 227,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 191,
																					"src": "3470:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 228,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3474:7:2",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 140,
																				"src": "3470:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 230,
																			"indexExpression": {
																				"id": 229,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "3482:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3470:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3450:42:2"
																	},
																	{
																		"expression": {
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 232,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 191,
																						"src": "3592:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 235,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3596:7:2",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 140,
																					"src": "3592:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 236,
																				"indexExpression": {
																					"id": 234,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "3604:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3592:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 237,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "3621:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3592:38:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 239,
																		"nodeType": "ExpressionStatement",
																		"src": "3592:38:2"
																	},
																	{
																		"expression": {
																			"id": 246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 240,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 191,
																						"src": "3704:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 243,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3708:8:2",
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 144,
																					"src": "3704:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 244,
																				"indexExpression": {
																					"id": 242,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 226,
																					"src": "3717:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3704:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 245,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "3730:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3704:36:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 247,
																		"nodeType": "ExpressionStatement",
																		"src": "3704:36:2"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 250,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "3876:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3880:7:2",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 140,
																		"src": "3876:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3888:3:2",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3876:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3876:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 256,
															"nodeType": "ExpressionStatement",
															"src": "3876:17:2"
														},
														{
															"expression": {
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3961:26:2",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 257,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "3968:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 258,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3972:8:2",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 144,
																		"src": "3968:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 260,
																	"indexExpression": {
																		"id": 259,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "3981:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3968:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 262,
															"nodeType": "ExpressionStatement",
															"src": "3961:26:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4009:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 197,
															"id": 264,
															"nodeType": "Return",
															"src": "4002:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2523:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2694:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2714:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2702:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 190,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 189,
														"name": "Set",
														"nameLocations": [
															"2702:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "2702:3:2"
													},
													"referencedDeclaration": 145,
													"src": "2702:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:32:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2751:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2751:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:6:2"
									},
									"scope": 733,
									"src": "2685:1388:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "4233:48:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 282,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "4250:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4254:8:2",
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "4250:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 285,
														"indexExpression": {
															"id": 284,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "4263:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4250:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4273:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4250:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 281,
												"id": 288,
												"nodeType": "Return",
												"src": "4243:31:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4079:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4163:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4185:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4173:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 274,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 273,
														"name": "Set",
														"nameLocations": [
															"4173:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "4173:3:2"
													},
													"referencedDeclaration": 145,
													"src": "4173:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4190:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:32:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4227:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4227:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:6:2"
									},
									"scope": 733,
									"src": "4154:127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "4427:42:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 299,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4444:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4448:7:2",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "4444:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4456:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4444:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 298,
												"id": 302,
												"nodeType": "Return",
												"src": "4437:25:2"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "4287:70:2",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4371:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4391:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4379:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 292,
														"name": "Set",
														"nameLocations": [
															"4379:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "4379:3:2"
													},
													"referencedDeclaration": 145,
													"src": "4379:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:17:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4418:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:9:2"
									},
									"scope": 733,
									"src": "4362:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "4887:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 315,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4904:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4908:7:2",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "4904:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 318,
													"indexExpression": {
														"id": 317,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "4916:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4904:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 314,
												"id": 319,
												"nodeType": "Return",
												"src": "4897:25:2"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "4475:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4820:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4836:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4824:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "Set",
														"nameLocations": [
															"4824:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "4824:3:2"
													},
													"referencedDeclaration": 145,
													"src": "4824:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4849:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4841:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4841:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:32:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:2"
									},
									"scope": 733,
									"src": "4811:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "5543:35:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 331,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "5560:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5564:7:2",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 140,
													"src": "5560:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 330,
												"id": 333,
												"nodeType": "Return",
												"src": "5553:18:2"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "4935:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5478:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5498:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "5486:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 324,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 323,
														"name": "Set",
														"nameLocations": [
															"5486:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "5486:3:2"
													},
													"referencedDeclaration": 145,
													"src": "5486:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5485:17:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "5525:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 327,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5525:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 328,
													"nodeType": "ArrayTypeName",
													"src": "5525:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5524:18:2"
									},
									"scope": 733,
									"src": "5469:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 339,
									"members": [
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5635:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 339,
											"src": "5631:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 337,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 336,
													"name": "Set",
													"nameLocations": [
														"5631:3:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 145,
													"src": "5631:3:2"
												},
												"referencedDeclaration": 145,
												"src": "5631:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5610:10:2",
									"nodeType": "StructDefinition",
									"scope": 733,
									"src": "5603:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "5894:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 351,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5916:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5920:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "5916:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 353,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5928:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 350,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "5911:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5911:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 349,
												"id": 355,
												"nodeType": "Return",
												"src": "5904:30:2"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "5654:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5827:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5850:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5831:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 342,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 341,
														"name": "Bytes32Set",
														"nameLocations": [
															"5831:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "5831:10:2"
													},
													"referencedDeclaration": 339,
													"src": "5831:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5855:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5830:39:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5888:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5888:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:6:2"
									},
									"scope": 733,
									"src": "5818:123:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "6188:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 369,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "6213:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6217:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "6213:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6225:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 368,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "6205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6205:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 367,
												"id": 373,
												"nodeType": "Return",
												"src": "6198:33:2"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "5947:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6118:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6144:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6125:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 359,
														"name": "Bytes32Set",
														"nameLocations": [
															"6125:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "6125:10:2"
													},
													"referencedDeclaration": 339,
													"src": "6125:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6157:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6149:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 362,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6124:39:2"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6182:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6182:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:6:2"
									},
									"scope": 733,
									"src": "6109:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6405:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 387,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "6432:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6436:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "6432:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 389,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "6444:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 386,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "6422:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6422:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 385,
												"id": 391,
												"nodeType": "Return",
												"src": "6415:35:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "6244:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6328:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6356:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6337:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 377,
														"name": "Bytes32Set",
														"nameLocations": [
															"6337:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "6337:10:2"
													},
													"referencedDeclaration": 339,
													"src": "6337:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6369:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6361:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6361:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6336:39:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6399:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6399:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:6:2"
									},
									"scope": 733,
									"src": "6319:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "6610:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 403,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "6635:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6639:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "6635:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 402,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "6627:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6627:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 406,
												"nodeType": "Return",
												"src": "6620:26:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6463:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6547:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6573:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "6554:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 395,
														"name": "Bytes32Set",
														"nameLocations": [
															"6554:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "6554:10:2"
													},
													"referencedDeclaration": 339,
													"src": "6554:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:24:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "6601:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6600:9:2"
									},
									"scope": 733,
									"src": "6538:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "7078:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 420,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "7099:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7103:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "7099:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 422,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7111:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "7095:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7095:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "7088:29:2"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "6659:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7004:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7026:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "7007:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 410,
														"name": "Bytes32Set",
														"nameLocations": [
															"7007:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "7007:10:2"
													},
													"referencedDeclaration": 339,
													"src": "7007:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7039:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "7031:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7031:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7006:39:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "7069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 416,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:9:2"
									},
									"scope": 733,
									"src": "6995:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "7745:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 437,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "7770:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7774:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "7770:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 436,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "7762:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7762:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 435,
												"id": 440,
												"nodeType": "Return",
												"src": "7755:26:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "7130:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7673:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7699:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "7680:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 428,
														"name": "Bytes32Set",
														"nameLocations": [
															"7680:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "7680:10:2"
													},
													"referencedDeclaration": 339,
													"src": "7680:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7679:24:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "7727:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7727:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "7727:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7726:18:2"
									},
									"scope": 733,
									"src": "7664:124:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 446,
									"members": [
										{
											"constant": false,
											"id": 445,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "7845:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 446,
											"src": "7841:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 444,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 443,
													"name": "Set",
													"nameLocations": [
														"7841:3:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 145,
													"src": "7841:3:2"
												},
												"referencedDeclaration": 145,
												"src": "7841:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "7820:10:2",
									"nodeType": "StructDefinition",
									"scope": 733,
									"src": "7813:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "8104:74:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 458,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "8126:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8130:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "8126:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 466,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8162:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8154:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 464,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8154:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8154:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8146:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 462,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8146:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8146:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8138:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 460,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8138:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8138:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 457,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "8121:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8121:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 456,
												"id": 471,
												"nodeType": "Return",
												"src": "8114:57:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "7864:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8037:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8060:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8041:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 449,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 448,
														"name": "AddressSet",
														"nameLocations": [
															"8041:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "8041:10:2"
													},
													"referencedDeclaration": 446,
													"src": "8041:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8073:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8065:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8065:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8040:39:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8098:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8098:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8097:6:2"
									},
									"scope": 733,
									"src": "8028:150:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "8425:77:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 485,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "8450:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8454:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "8450:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 493,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 479,
																					"src": "8486:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8478:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 491,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8478:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8478:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8470:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 489,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8470:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8470:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8462:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 487,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8462:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8462:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 484,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "8442:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8442:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 483,
												"id": 498,
												"nodeType": "Return",
												"src": "8435:60:2"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "8184:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8355:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8381:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "8362:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "AddressSet",
														"nameLocations": [
															"8362:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "8362:10:2"
													},
													"referencedDeclaration": 446,
													"src": "8362:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8394:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "8386:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8361:39:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "8419:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8419:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8418:6:2"
									},
									"scope": 733,
									"src": "8346:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "8669:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 512,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "8696:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8700:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "8696:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 520,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 506,
																					"src": "8732:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8724:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 518,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8724:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8724:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8716:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 516,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8716:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8716:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8708:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 514,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8708:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8708:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 511,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "8686:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8686:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 510,
												"id": 525,
												"nodeType": "Return",
												"src": "8679:62:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "8508:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8592:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8620:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8601:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 502,
														"name": "AddressSet",
														"nameLocations": [
															"8601:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "8601:10:2"
													},
													"referencedDeclaration": 446,
													"src": "8601:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8633:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8625:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:39:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:6:2"
									},
									"scope": 733,
									"src": "8583:165:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8901:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 537,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "8926:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8930:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "8926:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 536,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "8918:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 535,
												"id": 540,
												"nodeType": "Return",
												"src": "8911:26:2"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "8754:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "8838:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8864:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8845:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 529,
														"name": "AddressSet",
														"nameLocations": [
															"8845:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "8845:10:2"
													},
													"referencedDeclaration": 446,
													"src": "8845:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8844:24:2"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8891:9:2"
									},
									"scope": 733,
									"src": "8829:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "9369:73:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 560,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 546,
																						"src": "9414:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 561,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9418:6:2",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 445,
																					"src": "9414:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$145_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 562,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 548,
																					"src": "9426:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$145_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 321,
																				"src": "9410:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9410:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9402:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 557,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9402:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9402:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9394:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 555,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9394:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9394:40:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9386:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 553,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9386:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 552,
												"id": 567,
												"nodeType": "Return",
												"src": "9379:56:2"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8950:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9295:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9317:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "9298:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 544,
														"name": "AddressSet",
														"nameLocations": [
															"9298:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "9298:10:2"
													},
													"referencedDeclaration": 446,
													"src": "9298:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9330:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "9322:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9297:39:2"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "9360:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9360:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9359:9:2"
									},
									"scope": 733,
									"src": "9286:156:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "10063:219:2",
										"statements": [
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10090:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "10073:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 581,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10073:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 582,
															"nodeType": "ArrayTypeName",
															"src": "10073:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 585,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "10106:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10110:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "10106:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 584,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "10098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10098:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10073:44:2"
											},
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10144:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "10127:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 591,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10127:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 592,
															"nodeType": "ArrayTypeName",
															"src": "10127:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"nodeType": "VariableDeclarationStatement",
												"src": "10127:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10213:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10227:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10237:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "10227:6:2",
														"valueSize": 1
													},
													{
														"declaration": 583,
														"isOffset": false,
														"isSlot": false,
														"src": "10237:5:2",
														"valueSize": 1
													}
												],
												"id": 595,
												"nodeType": "InlineAssembly",
												"src": "10204:48:2"
											},
											{
												"expression": {
													"id": 596,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 593,
													"src": "10269:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 578,
												"id": 597,
												"nodeType": "Return",
												"src": "10262:13:2"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "9448:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "9991:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10017:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "9998:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 571,
														"name": "AddressSet",
														"nameLocations": [
															"9998:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "9998:10:2"
													},
													"referencedDeclaration": 446,
													"src": "9998:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9997:24:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "10045:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 575,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10045:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 576,
													"nodeType": "ArrayTypeName",
													"src": "10045:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10044:18:2"
									},
									"scope": 733,
									"src": "9982:300:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 603,
									"members": [
										{
											"constant": false,
											"id": 602,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10333:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 603,
											"src": "10329:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 601,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 600,
													"name": "Set",
													"nameLocations": [
														"10329:3:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 145,
													"src": "10329:3:2"
												},
												"referencedDeclaration": 145,
												"src": "10329:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10311:7:2",
									"nodeType": "StructDefinition",
									"scope": 733,
									"src": "10304:42:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "10589:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 615,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "10611:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10615:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "10611:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 619,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10631:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10623:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 617,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10623:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10623:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 614,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "10606:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10606:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 613,
												"id": 622,
												"nodeType": "Return",
												"src": "10599:39:2"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "10352:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10525:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10545:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10529:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "UintSet",
														"nameLocations": [
															"10529:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "10529:7:2"
													},
													"referencedDeclaration": 603,
													"src": "10529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10558:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10550:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10550:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10528:36:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10583:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10583:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10582:6:2"
									},
									"scope": 733,
									"src": "10516:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "10889:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 636,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "10914:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10918:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "10914:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 640,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "10934:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10926:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 638,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10926:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10926:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 635,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "10906:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10906:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 634,
												"id": 643,
												"nodeType": "Return",
												"src": "10899:42:2"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "10651:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "10822:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10845:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10829:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 627,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 626,
														"name": "UintSet",
														"nameLocations": [
															"10829:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "10829:7:2"
													},
													"referencedDeclaration": 603,
													"src": "10829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10858:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10850:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10850:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10828:36:2"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10883:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10883:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10882:6:2"
									},
									"scope": 733,
									"src": "10813:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "11112:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 657,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "11139:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11143:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "11139:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "11159:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11151:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 659,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11151:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11151:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 656,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "11129:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11129:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 655,
												"id": 664,
												"nodeType": "Return",
												"src": "11122:44:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "10954:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11038:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11063:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "11047:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 648,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 647,
														"name": "UintSet",
														"nameLocations": [
															"11047:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "11047:7:2"
													},
													"referencedDeclaration": 603,
													"src": "11047:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11076:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "11068:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11068:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11046:36:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "11106:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 653,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11106:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11105:6:2"
									},
									"scope": 733,
									"src": "11029:144:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "11323:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 676,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "11348:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11352:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "11348:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 675,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "11340:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11340:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 674,
												"id": 679,
												"nodeType": "Return",
												"src": "11333:26:2"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "11179:70:2",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11263:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11286:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11270:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 669,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 668,
														"name": "UintSet",
														"nameLocations": [
															"11270:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "11270:7:2"
													},
													"referencedDeclaration": 603,
													"src": "11270:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11269:21:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11314:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:9:2"
									},
									"scope": 733,
									"src": "11254:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "11788:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 695,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "11817:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11821:6:2",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 602,
																	"src": "11817:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$145_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 697,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "11829:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$145_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 694,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "11813:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11813:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11805:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11805:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 691,
												"id": 700,
												"nodeType": "Return",
												"src": "11798:38:2"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "11372:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11717:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11736:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "11720:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 684,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 683,
														"name": "UintSet",
														"nameLocations": [
															"11720:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "11720:7:2"
													},
													"referencedDeclaration": 603,
													"src": "11720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11749:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "11741:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11719:36:2"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "11779:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11778:9:2"
									},
									"scope": 733,
									"src": "11708:135:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "12461:219:2",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12488:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "12471:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 714,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12471:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 715,
															"nodeType": "ArrayTypeName",
															"src": "12471:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 718,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "12504:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12508:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "12504:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 717,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "12496:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12496:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12471:44:2"
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12542:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "12525:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 724,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ArrayTypeName",
															"src": "12525:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 727,
												"nodeType": "VariableDeclarationStatement",
												"src": "12525:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12611:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12625:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12635:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 726,
														"isOffset": false,
														"isSlot": false,
														"src": "12625:6:2",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "12635:5:2",
														"valueSize": 1
													}
												],
												"id": 728,
												"nodeType": "InlineAssembly",
												"src": "12602:48:2"
											},
											{
												"expression": {
													"id": 729,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 726,
													"src": "12667:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 711,
												"id": 730,
												"nodeType": "Return",
												"src": "12660:13:2"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "11849:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12392:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12415:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "12399:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 705,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 704,
														"name": "UintSet",
														"nameLocations": [
															"12399:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "12399:7:2"
													},
													"referencedDeclaration": 603,
													"src": "12399:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12398:21:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "12443:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 708,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12443:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 709,
													"nodeType": "ArrayTypeName",
													"src": "12443:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12442:18:2"
									},
									"scope": 733,
									"src": "12383:297:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 734,
							"src": "1228:11454:2",
							"usedErrors": []
						}
					],
					"src": "115:12568:2"
				},
				"id": 2
			},
			"contracts/Manager/ExecutionManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/ExecutionManager.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							733
						],
						"ExecutionManager": [
							917
						],
						"Ownable": [
							112
						],
						"TheExManager": [
							954
						]
					},
					"id": 918,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 113,
							"src": "57:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 736,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "65:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 734,
							"src": "125:86:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 738,
										"name": "EnumerableSet",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 733,
										"src": "133:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheExManager.sol",
							"file": "./interface/TheExManager.sol",
							"id": 741,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 955,
							"src": "213:58:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 740,
										"name": "TheExManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 954,
										"src": "221:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 743,
										"name": "TheExManager",
										"nameLocations": [
											"434:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 954,
										"src": "434:12:3"
									},
									"id": 744,
									"nodeType": "InheritanceSpecifier",
									"src": "434:12:3"
								},
								{
									"baseName": {
										"id": 745,
										"name": "Ownable",
										"nameLocations": [
											"448:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "448:7:3"
									},
									"id": 746,
									"nodeType": "InheritanceSpecifier",
									"src": "448:7:3"
								}
							],
							"canonicalName": "ExecutionManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 742,
								"nodeType": "StructuredDocumentation",
								"src": "273:131:3",
								"text": " @title ExecutionManager\n @notice It allows adding/removing execution strategies for trading on the LooksRare exchange."
							},
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								112,
								134,
								954
							],
							"name": "ExecutionManager",
							"nameLocation": "414:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 750,
									"libraryName": {
										"id": 747,
										"name": "EnumerableSet",
										"nameLocations": [
											"468:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 733,
										"src": "468:13:3"
									},
									"nodeType": "UsingForDirective",
									"src": "462:49:3",
									"typeName": {
										"id": 749,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 748,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"486:13:3",
												"500:10:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 446,
											"src": "486:24:3"
										},
										"referencedDeclaration": 446,
										"src": "486:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 753,
									"mutability": "mutable",
									"name": "_whitelistedStrategies",
									"nameLocation": "550:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "517:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$446_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 752,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 751,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"517:13:3",
												"531:10:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 446,
											"src": "517:24:3"
										},
										"referencedDeclaration": 446,
										"src": "517:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea4",
									"id": 757,
									"name": "StrategyRemoved",
									"nameLocation": "585:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"indexed": true,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "617:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "601:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:26:3"
									},
									"src": "579:48:3"
								},
								{
									"anonymous": false,
									"eventSelector": "6b583e2e3ad2e182671d77905fee57b1ffd8ce2aa5c0b652ca029317919751a4",
									"id": 761,
									"name": "StrategyWhitelisted",
									"nameLocation": "638:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"indexed": true,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "674:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "658:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:26:3"
									},
									"src": "632:52:3"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "884:190:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "902:42:3",
															"subExpression": {
																"arguments": [
																	{
																		"id": 772,
																		"name": "strategy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "935:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 770,
																		"name": "_whitelistedStrategies",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 753,
																		"src": "903:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "926:8:3",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 527,
																	"src": "903:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "903:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "74686520657820616c7265616479202077686974656c6973746564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "946:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7df3f74e6721cf2d25f64b911d0ab529fd8e5f79957f6d7c9e2532a25cbb15f4",
																"typeString": "literal_string \"the ex already  whitelisted\""
															},
															"value": "the ex already  whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7df3f74e6721cf2d25f64b911d0ab529fd8e5f79957f6d7c9e2532a25cbb15f4",
																"typeString": "literal_string \"the ex already  whitelisted\""
															}
														],
														"id": 769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "894:82:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "894:82:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "1013:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 778,
															"name": "_whitelistedStrategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "986:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1009:3:3",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 473,
														"src": "986:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "986:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "986:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 785,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "1058:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 784,
														"name": "StrategyWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "1038:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "EmitStatement",
												"src": "1033:34:3"
											}
										]
									},
									"functionSelector": "223e5479",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 767,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 766,
												"name": "onlyOwner",
												"nameLocations": [
													"874:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "874:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "874:9:3"
										}
									],
									"name": "addStrategy",
									"nameLocation": "826:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 765,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "865:8:3"
									},
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "846:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "838:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:18:3"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:0:3"
									},
									"scope": 917,
									"src": "817:257:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "1283:183:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 800,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "1333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 798,
																	"name": "_whitelistedStrategies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "1301:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1324:8:3",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 527,
																"src": "1301:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1301:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746865206578206e6f742077686974656c6973746564",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f041a0166ca2bd003d17899496a7f4c0b8e15639ed07a055e9e14fbad4d04fe",
																"typeString": "literal_string \"the ex not whitelisted\""
															},
															"value": "the ex not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f041a0166ca2bd003d17899496a7f4c0b8e15639ed07a055e9e14fbad4d04fe",
																"typeString": "literal_string \"the ex not whitelisted\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1293:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "1293:76:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1409:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 805,
															"name": "_whitelistedStrategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "1379:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1402:6:3",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "1379:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "1379:39:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 812,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1450:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 811,
														"name": "StrategyRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "1434:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1434:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "EmitStatement",
												"src": "1429:30:3"
											}
										]
									},
									"functionSelector": "175188e8",
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 795,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 794,
												"name": "onlyOwner",
												"nameLocations": [
													"1273:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1273:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1273:9:3"
										}
									],
									"name": "removeStrategy",
									"nameLocation": "1222:14:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 793,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1264:8:3"
									},
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1245:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1237:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:18:3"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:3"
									},
									"scope": 917,
									"src": "1213:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "1726:65:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 826,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "1775:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 824,
															"name": "_whitelistedStrategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "1743:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1766:8:3",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "1743:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1743:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 823,
												"id": 828,
												"nodeType": "Return",
												"src": "1736:48:3"
											}
										]
									},
									"functionSelector": "999ba27c",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isStrategyWhitelisted",
									"nameLocation": "1648:21:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 820,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1702:8:3"
									},
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1678:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1670:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:18:3"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1720:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1720:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1719:6:3"
									},
									"scope": 917,
									"src": "1639:152:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										953
									],
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "2027:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 836,
															"name": "_whitelistedStrategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "2044:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2067:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 542,
														"src": "2044:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2044:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 835,
												"id": 839,
												"nodeType": "Return",
												"src": "2037:38:3"
											}
										]
									},
									"functionSelector": "985e3a2f",
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewCountWhitelistedStrategies",
									"nameLocation": "1953:30:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 832,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2000:8:3"
									},
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:3"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "2018:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2017:9:3"
									},
									"scope": 917,
									"src": "1944:138:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "2437:444:3",
										"statements": [
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2455:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "2447:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 854,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2447:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 857,
												"initialValue": {
													"id": 856,
													"name": "size",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 845,
													"src": "2464:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2447:21:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "2483:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 859,
																	"name": "_whitelistedStrategies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "2492:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 542,
																"src": "2492:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2492:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 862,
															"name": "cursor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "2526:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2492:40:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2483:49:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 874,
												"nodeType": "IfStatement",
												"src": "2479:129:3",
												"trueBody": {
													"id": 873,
													"nodeType": "Block",
													"src": "2534:74:3",
													"statements": [
														{
															"expression": {
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 865,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "2548:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 866,
																				"name": "_whitelistedStrategies",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "2557:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																					"typeString": "struct EnumerableSet.AddressSet storage ref"
																				}
																			},
																			"id": 867,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2580:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 542,
																			"src": "2557:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																				"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2557:31:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 869,
																		"name": "cursor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "2591:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2557:40:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2548:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 872,
															"nodeType": "ExpressionStatement",
															"src": "2548:49:3"
														}
													]
												}
											},
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"mutability": "mutable",
														"name": "whitelistedStrategies",
														"nameLocation": "2635:21:3",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "2618:38:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2618:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 878,
															"nodeType": "ArrayTypeName",
															"src": "2618:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 885,
												"initialValue": {
													"arguments": [
														{
															"id": 883,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "2673:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2659:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 880,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2663:7:3",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 881,
															"nodeType": "ArrayTypeName",
															"src": "2663:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2659:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2618:62:3"
											},
											{
												"body": {
													"id": 907,
													"nodeType": "Block",
													"src": "2728:89:3",
													"statements": [
														{
															"expression": {
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 896,
																		"name": "whitelistedStrategies",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "2742:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 898,
																	"indexExpression": {
																		"id": 897,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "2764:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2742:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 901,
																				"name": "cursor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 843,
																				"src": "2795:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 902,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 887,
																				"src": "2804:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2795:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 899,
																			"name": "_whitelistedStrategies",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "2769:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																				"typeString": "struct EnumerableSet.AddressSet storage ref"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2792:2:3",
																		"memberName": "at",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 569,
																		"src": "2769:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																			"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2769:37:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2742:64:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 906,
															"nodeType": "ExpressionStatement",
															"src": "2742:64:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2711:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 891,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "2715:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2711:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 908,
												"initializationExpression": {
													"assignments": [
														887
													],
													"declarations": [
														{
															"constant": false,
															"id": 887,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2704:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 908,
															"src": "2696:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 886,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2696:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 889,
													"initialValue": {
														"hexValue": "30",
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2708:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2696:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2723:3:3",
														"subExpression": {
															"id": 893,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2723:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 895,
													"nodeType": "ExpressionStatement",
													"src": "2723:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2691:126:3"
											},
											{
												"expression": {
													"components": [
														{
															"id": 909,
															"name": "whitelistedStrategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "2835:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 910,
																"name": "cursor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "2858:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 911,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "2867:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2858:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 913,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2834:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$",
														"typeString": "tuple(address[] memory,uint256)"
													}
												},
												"functionReturnParameters": 853,
												"id": 914,
												"nodeType": "Return",
												"src": "2827:47:3"
											}
										]
									},
									"functionSelector": "31fb5b1f",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewWhitelistedStrategies",
									"nameLocation": "2286:25:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 847,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2380:8:3"
									},
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "cursor",
												"nameLocation": "2320:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2312:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "2336:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2328:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2328:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:30:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2406:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 848,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2406:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 849,
													"nodeType": "ArrayTypeName",
													"src": "2406:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2424:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2405:27:3"
									},
									"scope": 917,
									"src": "2277:604:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 918,
							"src": "405:2478:3",
							"usedErrors": []
						}
					],
					"src": "32:2852:3"
				},
				"id": 3
			},
			"contracts/Manager/interface/TheExManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheExManager.sol",
					"exportedSymbols": {
						"TheExManager": [
							954
						]
					},
					"id": 955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 919,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheExManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 954,
							"linearizedBaseContracts": [
								954
							],
							"name": "TheExManager",
							"nameLocation": "67:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "223e5479",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addStrategy",
									"nameLocation": "95:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "115:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "107:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "106:18:4"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:0:4"
									},
									"scope": 954,
									"src": "86:48:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "175188e8",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeStrategy",
									"nameLocation": "149:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "172:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "164:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:18:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "190:0:4"
									},
									"scope": 954,
									"src": "140:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "999ba27c",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isStrategyWhitelisted",
									"nameLocation": "206:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "236:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "228:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:18:4"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "269:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:6:4"
									},
									"scope": 954,
									"src": "197:78:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31fb5b1f",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewWhitelistedStrategies",
									"nameLocation": "290:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "cursor",
												"nameLocation": "324:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "316:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "340:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "332:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:30:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "369:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 942,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "369:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 943,
													"nodeType": "ArrayTypeName",
													"src": "369:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "387:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:27:4"
									},
									"scope": 954,
									"src": "281:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "985e3a2f",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewCountWhitelistedStrategies",
									"nameLocation": "411:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:4"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "467:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:9:4"
									},
									"scope": 954,
									"src": "402:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 955,
							"src": "57:421:4",
							"usedErrors": []
						}
					],
					"src": "32:447:4"
				},
				"id": 4
			}
		}
	}
}