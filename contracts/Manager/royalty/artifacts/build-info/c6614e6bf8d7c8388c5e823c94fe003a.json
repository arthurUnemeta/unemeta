{
	"id": "c6614e6bf8d7c8388c5e823c94fe003a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport {IRoyaltyFeeRegistry} from \"./interface/IRoyaltyFeeRegistry.sol\";\n\n//  register royalty fee\ncontract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {\n    struct FeeInfo {\n        address setter;\n        address receiver;\n        uint256 fee;\n    }\n\n    // limit max royalty fee（10,000 = 100%）\n    uint256 public royaltyFeeLimit;\n\n    //compile royalty information mapping \n    mapping(address => FeeInfo) private _royaltyFeeInfoCollection;\n\n    event NewRoyaltyFeeLimit(uint256 royaltyFeeLimit);\n    event RoyaltyFeeUpdate(address indexed collection, address indexed setter, address indexed receiver, uint256 fee);\n\n    //  initialize royalty fee\n    constructor(uint256 _royaltyFeeLimit) {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n    }\n\n    // Update a collection's upper limit of royalty fee\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n\n        emit NewRoyaltyFeeLimit(_royaltyFeeLimit);\n    }\n\n\n    //\n    // function royaltyInfo\n    //  @Description: calculate royalty fee\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {\n        return (\n        _royaltyFeeInfoCollection[collection].receiver,\n        (amount * _royaltyFeeInfoCollection[collection].fee) / 10000\n        );\n    }\n    /*Check collection information*/\n    function royaltyFeeInfoCollection(address collection)\n    external\n    view\n    override\n    returns (\n        address,\n        address,\n        uint256\n    )\n    {\n        return (\n        _royaltyFeeInfoCollection[collection].setter,\n        _royaltyFeeInfoCollection[collection].receiver,\n        _royaltyFeeInfoCollection[collection].fee\n        );\n    }\n}\n"
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IRoyaltyFeeRegistry {\n\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function royaltyInfo(address collection, uint256 amount) external view returns (address, uint256);\n\n    function royaltyFeeInfoCollection(address collection)\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        );\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"RoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "NewRoyaltyFeeLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "RoyaltyFeeUpdate",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":225:2194  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":792:996  constructor(uint256 _royaltyFeeLimit) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":910:914  9500 */\n  0x251c\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":890:906  _royaltyFeeLimit */\n  dup2\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":890:914  _royaltyFeeLimit <= 9500 */\n  gt\n  iszero\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":882:945  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":405:407   */\n  0x20\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":882:945  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":387:408   */\n  mstore\n    /* \"#utility.yul\":444:446   */\n  0x1a\n    /* \"#utility.yul\":424:442   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":417:447   */\n  mstore\n    /* \"#utility.yul\":483:511   */\n  0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n    /* \"#utility.yul\":463:481   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":456:512   */\n  mstore\n    /* \"#utility.yul\":529:547   */\n  0x64\n  add\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":882:945  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":955:970  royaltyFeeLimit */\n  0x01\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":955:989  royaltyFeeLimit = _royaltyFeeLimit */\n  sstore\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":225:2194  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_20:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:553   */\ntag_18:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":225:2194  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":225:2194  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb9223c9d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe31ef91c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x2782d6c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4fb7d3f9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1525:1792  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":643:675   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":625:676   */\n      dup4\n      mstore\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":692:710   */\n      dup4\n      add\n        /* \"#utility.yul\":685:719   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":598:616   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1525:1792  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":438:468  uint256 public royaltyFeeLimit */\n    tag_4:\n      tag_17\n      sload(0x01)\n      dup2\n      jump\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":876:901   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":864:866   */\n      0x20\n        /* \"#utility.yul\":849:867   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":438:468  uint256 public royaltyFeeLimit */\n      tag_15\n        /* \"#utility.yul\":730:907   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1058:1109   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1046:1048   */\n      0x20\n        /* \"#utility.yul\":1031:1049   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_15\n        /* \"#utility.yul\":912:1115   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1058:1361  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_7:\n      tag_21\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1834:2192  function royaltyFeeInfoCollection(address collection)... */\n    tag_8:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2024:2061  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1945:1952  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2024:2061  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2024:2049  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2024:2061  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2024:2068  _royaltyFeeInfoCollection[collection].setter */\n      dup1\n      sload\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2078:2124  _royaltyFeeInfoCollection[collection].receiver */\n      dup3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2134:2175  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2024:2068  _royaltyFeeInfoCollection[collection].setter */\n      swap2\n      dup4\n      and\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2078:2124  _royaltyFeeInfoCollection[collection].receiver */\n      swap3\n      and\n      swap2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1834:2192  function royaltyFeeInfoCollection(address collection)... */\n      jump\n    tag_31:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1754:1769   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":1736:1770   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1806:1821   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1801:1803   */\n      0x20\n        /* \"#utility.yul\":1786:1804   */\n      dup5\n      add\n        /* \"#utility.yul\":1779:1822   */\n      mstore\n        /* \"#utility.yul\":1838:1856   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1831:1865   */\n      mstore\n        /* \"#utility.yul\":1686:1688   */\n      0x60\n        /* \"#utility.yul\":1671:1689   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1834:2192  function royaltyFeeInfoCollection(address collection)... */\n      tag_15\n        /* \"#utility.yul\":1496:1871   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_21\n      tag_38\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1525:1792  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_14:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1659:1696  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup4\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1614:1621  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1659:1696  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1659:1684  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1659:1696  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1659:1705  _royaltyFeeInfoCollection[collection].receiver */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1725:1766  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1614:1621  address */\n      swap2\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1659:1705  _royaltyFeeInfoCollection[collection].receiver */\n      swap2\n      and\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1770:1775  10000 */\n      0x2710\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1716:1766  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_41\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1716:1722  amount */\n      dup7\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1716:1766  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1715:1775  (amount * _royaltyFeeInfoCollection[collection].fee) / 10000 */\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1642:1785  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1525:1792  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1058:1361  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_53:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1223:1227  9500 */\n      0x251c\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1203:1219  _royaltyFeeLimit */\n      dup2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1203:1227  _royaltyFeeLimit <= 9500 */\n      gt\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1195:1258  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2570:2572   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1195:1258  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2552:2573   */\n      mstore\n        /* \"#utility.yul\":2609:2611   */\n      0x1a\n        /* \"#utility.yul\":2589:2607   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2582:2612   */\n      mstore\n        /* \"#utility.yul\":2648:2676   */\n      0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n        /* \"#utility.yul\":2628:2646   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2621:2677   */\n      mstore\n        /* \"#utility.yul\":2694:2712   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1195:1258  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1268:1283  royaltyFeeLimit */\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1268:1302  royaltyFeeLimit = _royaltyFeeLimit */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1318:1354  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n        /* \"#utility.yul\":876:901   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1318:1354  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      0x2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256\n      swap1\n        /* \"#utility.yul\":864:866   */\n      0x20\n        /* \"#utility.yul\":849:867   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1318:1354  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1058:1361  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2925:2927   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2907:2928   */\n      mstore\n        /* \"#utility.yul\":2964:2966   */\n      0x26\n        /* \"#utility.yul\":2944:2962   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2937:2967   */\n      mstore\n        /* \"#utility.yul\":3003:3037   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2983:3001   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2976:3038   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3054:3072   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3047:3083   */\n      mstore\n        /* \"#utility.yul\":3100:3119   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_56\n        /* \"#utility.yul\":2723:3125   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3332:3334   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3314:3335   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3351:3369   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3344:3374   */\n      mstore\n        /* \"#utility.yul\":3410:3444   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3390:3408   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3383:3445   */\n      mstore\n        /* \"#utility.yul\":3462:3480   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_56\n        /* \"#utility.yul\":3130:3486   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_76:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_79:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_13:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_81:\n        /* \"#utility.yul\":360:389   */\n      tag_82\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_76\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":1120:1300   */\n    tag_29:\n        /* \"#utility.yul\":1179:1185   */\n      0x00\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1220:1229   */\n      dup3\n        /* \"#utility.yul\":1211:1218   */\n      dup5\n        /* \"#utility.yul\":1207:1230   */\n      sub\n        /* \"#utility.yul\":1203:1235   */\n      slt\n        /* \"#utility.yul\":1200:1252   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":1248:1249   */\n      0x00\n        /* \"#utility.yul\":1245:1246   */\n      dup1\n        /* \"#utility.yul\":1238:1250   */\n      revert\n        /* \"#utility.yul\":1200:1252   */\n    tag_87:\n      pop\n        /* \"#utility.yul\":1271:1294   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1120:1300   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1305:1491   */\n    tag_33:\n        /* \"#utility.yul\":1364:1370   */\n      0x00\n        /* \"#utility.yul\":1417:1419   */\n      0x20\n        /* \"#utility.yul\":1405:1414   */\n      dup3\n        /* \"#utility.yul\":1396:1403   */\n      dup5\n        /* \"#utility.yul\":1392:1415   */\n      sub\n        /* \"#utility.yul\":1388:1420   */\n      slt\n        /* \"#utility.yul\":1385:1437   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":1433:1434   */\n      0x00\n        /* \"#utility.yul\":1430:1431   */\n      dup1\n        /* \"#utility.yul\":1423:1435   */\n      revert\n        /* \"#utility.yul\":1385:1437   */\n    tag_89:\n        /* \"#utility.yul\":1456:1485   */\n      tag_90\n        /* \"#utility.yul\":1475:1484   */\n      dup3\n        /* \"#utility.yul\":1456:1485   */\n      tag_76\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1446:1485   */\n      swap4\n        /* \"#utility.yul\":1305:1491   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1876:2141   */\n    tag_42:\n        /* \"#utility.yul\":1949:1958   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1980:1989   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1997:2012   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":1991:2013   */\n      dup5\n      eq\n        /* \"#utility.yul\":1977:2014   */\n      or\n        /* \"#utility.yul\":1967:2135   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":2057:2067   */\n      0x4e487b71\n        /* \"#utility.yul\":2052:2055   */\n      0xe0\n        /* \"#utility.yul\":2048:2068   */\n      shl\n        /* \"#utility.yul\":2045:2046   */\n      0x00\n        /* \"#utility.yul\":2038:2069   */\n      mstore\n        /* \"#utility.yul\":2092:2096   */\n      0x11\n        /* \"#utility.yul\":2089:2090   */\n      0x04\n        /* \"#utility.yul\":2082:2097   */\n      mstore\n        /* \"#utility.yul\":2120:2124   */\n      0x24\n        /* \"#utility.yul\":2117:2118   */\n      0x00\n        /* \"#utility.yul\":2110:2125   */\n      revert\n        /* \"#utility.yul\":1967:2135   */\n    tag_93:\n        /* \"#utility.yul\":1876:2141   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2146:2363   */\n    tag_44:\n        /* \"#utility.yul\":2186:2187   */\n      0x00\n        /* \"#utility.yul\":2212:2213   */\n      dup3\n        /* \"#utility.yul\":2202:2334   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":2256:2266   */\n      0x4e487b71\n        /* \"#utility.yul\":2251:2254   */\n      0xe0\n        /* \"#utility.yul\":2247:2267   */\n      shl\n        /* \"#utility.yul\":2244:2245   */\n      0x00\n        /* \"#utility.yul\":2237:2268   */\n      mstore\n        /* \"#utility.yul\":2291:2295   */\n      0x12\n        /* \"#utility.yul\":2288:2289   */\n      0x04\n        /* \"#utility.yul\":2281:2296   */\n      mstore\n        /* \"#utility.yul\":2319:2323   */\n      0x24\n        /* \"#utility.yul\":2316:2317   */\n      0x00\n        /* \"#utility.yul\":2309:2324   */\n      revert\n        /* \"#utility.yul\":2202:2334   */\n    tag_95:\n      pop\n        /* \"#utility.yul\":2348:2357   */\n      div\n      swap1\n        /* \"#utility.yul\":2146:2363   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220882f71440b877635f0684d9474b815d6a6b52beca581da56f6051a15765afe7f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 150,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:555:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:176:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "394:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "387:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:4",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:4"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "483:28:4",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:56:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "521:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "354:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "368:4:4",
														"type": ""
													}
												],
												"src": "203:350:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105b03803806105b083398101604081905261002f916100e6565b61003833610096565b61251c81111561008e5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f2068696768000000000000604482015260640160405180910390fd5b6001556100ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f857600080fd5b5051919050565b6104a28061010e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100da578063b9223c9d146100f5578063e31ef91c14610108578063f2fde38b1461016d57600080fd5b80632782d6c7146100825780634fb7d3f9146100b9578063715018a6146100d0575b600080fd5b6100956100903660046103ba565b610180565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100c260015481565b6040519081526020016100b0565b6100d86101cd565b005b6000546040516001600160a01b0390911681526020016100b0565b6100d86101033660046103e4565b6101e1565b6101476101163660046103fd565b6001600160a01b03908116600090815260026020819052604090912080546001820154919092015491831693921691565b604080516001600160a01b039485168152939092166020840152908201526060016100b0565b6100d861017b3660046103fd565b61027b565b6001600160a01b0380831660009081526002602081905260408220600181015491015491928392911690612710906101b8908661041f565b6101c2919061044a565b915091509250929050565b6101d56102f4565b6101df600061034e565b565b6101e96102f4565b61251c8111156102405760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064015b60405180910390fd5b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b6102836102f4565b6001600160a01b0381166102e85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610237565b6102f18161034e565b50565b6000546001600160a01b031633146101df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610237565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103b557600080fd5b919050565b600080604083850312156103cd57600080fd5b6103d68361039e565b946020939093013593505050565b6000602082840312156103f657600080fd5b5035919050565b60006020828403121561040f57600080fd5b6104188261039e565b9392505050565b808202811582820484141761044457634e487b7160e01b600052601160045260246000fd5b92915050565b60008261046757634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220882f71440b877635f0684d9474b815d6a6b52beca581da56f6051a15765afe7f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5B0 CODESIZE SUB DUP1 PUSH2 0x5B0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x96 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A2 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x1CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x1B8 SWAP1 DUP7 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x1DF PUSH1 0x0 PUSH2 0x34E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x283 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x237 JUMP JUMPDEST PUSH2 0x2F1 DUP2 PUSH2 0x34E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D6 DUP4 PUSH2 0x39E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x418 DUP3 PUSH2 0x39E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x444 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x467 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x2F PUSH18 0x440B877635F0684D9474B815D6A6B52BECA5 DUP2 0xDA JUMP 0xF6 SDIV BYTE ISZERO PUSH23 0x5AFE7F64736F6C63430008110033000000000000000000 ",
							"sourceMap": "225:1969:2:-:0;;;792:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;910:4:2;890:16;:24;;882:63;;;;-1:-1:-1;;;882:63:2;;405:2:4;882:63:2;;;387:21:4;444:2;424:18;;;417:30;483:28;463:18;;;456:56;529:18;;882:63:2;;;;;;;;955:15;:34;225:1969;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:184:4:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:4;;14:184;-1:-1:-1;14:184:4:o;203:350::-;225:1969:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 756,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 846,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 461,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeInfoCollection_268": {
									"entryPoint": null,
									"id": 268,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@royaltyFeeLimit_153": {
									"entryPoint": null,
									"id": 153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyInfo_241": {
									"entryPoint": 384,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@transferOwnership_91": {
									"entryPoint": 635,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeLimit_213": {
									"entryPoint": 481,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3488:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:4"
															},
															"nodeType": "YulIf",
															"src": "111:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:4"
															},
															"nodeType": "YulIf",
															"src": "289:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:4",
														"type": ""
													}
												],
												"src": "192:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "580:145:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "590:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "602:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "598:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "590:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "632:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "647:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "663:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "668:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "659:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "659:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "672:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "643:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "643:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "625:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "625:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "696:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "707:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "692:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "692:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "712:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "685:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "685:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "541:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "552:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "560:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "571:4:4",
														"type": ""
													}
												],
												"src": "451:274:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "831:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "841:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "853:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "864:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "849:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "841:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "883:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "894:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "800:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "811:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "822:4:4",
														"type": ""
													}
												],
												"src": "730:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1013:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1023:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1023:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1065:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1096:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1101:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1092:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1092:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1105:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1088:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1088:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1076:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1076:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1058:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1058:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "982:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "993:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1004:4:4",
														"type": ""
													}
												],
												"src": "912:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:110:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1236:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1245:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1248:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1238:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1238:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1238:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1211:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1203:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:32:4"
															},
															"nodeType": "YulIf",
															"src": "1200:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1261:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1284:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1271:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1271:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1261:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1156:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1167:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1179:6:4",
														"type": ""
													}
												],
												"src": "1120:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1421:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1430:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1433:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1423:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1423:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1396:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1392:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1388:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:32:4"
															},
															"nodeType": "YulIf",
															"src": "1385:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1446:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1475:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1456:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1446:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1341:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1352:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1364:6:4",
														"type": ""
													}
												],
												"src": "1305:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:218:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1663:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1675:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1663:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1698:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1716:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1712:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1712:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1725:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1708:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1702:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1743:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1758:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1766:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1754:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1736:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1736:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1790:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1801:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1786:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1810:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1818:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1806:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1806:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1779:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1842:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1838:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1838:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1858:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1831:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1606:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1617:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1625:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1633:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1644:4:4",
														"type": ""
													}
												],
												"src": "1496:375:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1928:213:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1938:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1953:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1956:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1949:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1938:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2024:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2052:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2057:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2048:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2048:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2038:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2038:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2038:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2089:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2092:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2082:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2082:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2082:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2117:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2120:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2110:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2110:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2110:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1987:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1980:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1980:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "1994:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2001:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2010:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "1997:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1997:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "1991:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1991:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1977:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1977:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1970:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1970:45:4"
															},
															"nodeType": "YulIf",
															"src": "1967:168:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1907:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1910:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1916:7:4",
														"type": ""
													}
												],
												"src": "1876:265:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2192:171:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2223:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2244:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2251:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2256:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2247:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2247:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2237:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2237:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2237:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2288:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2281:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2281:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2281:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2316:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2319:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2309:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2309:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2309:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2212:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:9:4"
															},
															"nodeType": "YulIf",
															"src": "2202:132:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2343:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2352:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2355:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2348:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2343:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2177:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2180:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2186:1:4",
														"type": ""
													}
												],
												"src": "2146:217:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2542:176:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2570:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2552:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2593:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2604:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2589:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2589:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2609:2:4",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2582:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2632:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2643:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2628:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2628:18:4"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2648:28:4",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2621:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:56:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2621:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2686:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2698:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2694:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2694:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2686:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2519:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2533:4:4",
														"type": ""
													}
												],
												"src": "2368:350:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2897:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2914:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2925:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2907:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2907:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2948:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2944:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2944:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2937:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2937:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2987:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2998:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2983:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3003:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2976:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3058:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3069:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:18:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3074:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3047:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3092:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3104:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3115:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3100:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3092:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2874:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2888:4:4",
														"type": ""
													}
												],
												"src": "2723:402:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3304:182:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3321:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3332:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3314:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3314:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3371:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3394:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3405:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3390:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3390:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3410:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:62:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3454:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3466:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3477:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3462:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3454:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3281:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3295:4:4",
														"type": ""
													}
												],
												"src": "3130:356:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100da578063b9223c9d146100f5578063e31ef91c14610108578063f2fde38b1461016d57600080fd5b80632782d6c7146100825780634fb7d3f9146100b9578063715018a6146100d0575b600080fd5b6100956100903660046103ba565b610180565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100c260015481565b6040519081526020016100b0565b6100d86101cd565b005b6000546040516001600160a01b0390911681526020016100b0565b6100d86101033660046103e4565b6101e1565b6101476101163660046103fd565b6001600160a01b03908116600090815260026020819052604090912080546001820154919092015491831693921691565b604080516001600160a01b039485168152939092166020840152908201526060016100b0565b6100d861017b3660046103fd565b61027b565b6001600160a01b0380831660009081526002602081905260408220600181015491015491928392911690612710906101b8908661041f565b6101c2919061044a565b915091509250929050565b6101d56102f4565b6101df600061034e565b565b6101e96102f4565b61251c8111156102405760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064015b60405180910390fd5b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b6102836102f4565b6001600160a01b0381166102e85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610237565b6102f18161034e565b50565b6000546001600160a01b031633146101df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610237565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103b557600080fd5b919050565b600080604083850312156103cd57600080fd5b6103d68361039e565b946020939093013593505050565b6000602082840312156103f657600080fd5b5035919050565b60006020828403121561040f57600080fd5b6104188261039e565b9392505050565b808202811582820484141761044457634e487b7160e01b600052601160045260246000fd5b92915050565b60008261046757634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220882f71440b877635f0684d9474b815d6a6b52beca581da56f6051a15765afe7f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x1CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x1B8 SWAP1 DUP7 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x1DF PUSH1 0x0 PUSH2 0x34E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x283 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x237 JUMP JUMPDEST PUSH2 0x2F1 DUP2 PUSH2 0x34E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D6 DUP4 PUSH2 0x39E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x418 DUP3 PUSH2 0x39E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x444 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x467 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x2F PUSH18 0x440B877635F0684D9474B815D6A6B52BECA5 DUP2 0xDA JUMP 0xF6 SDIV BYTE ISZERO PUSH23 0x5AFE7F64736F6C63430008110033000000000000000000 ",
							"sourceMap": "225:1969:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1525:267;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;643:32:4;;;625:51;;707:2;692:18;;685:34;;;;598:18;1525:267:2;;;;;;;;438:30;;;;;;;;;876:25:4;;;864:2;849:18;438:30:2;730:177:4;1831:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;1058:51:4;;1046:2;1031:18;1201:85:0;912:203:4;1058:303:2;;;;;;:::i;:::-;;:::i;1834:358::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2024:37:2;;;1945:7;2024:37;;;:25;:37;;;;;;;;:44;;;2078:46;;;2134:41;;;;;2024:44;;;;2078:46;;;1834:358;;;;;-1:-1:-1;;;;;1754:15:4;;;1736:34;;1806:15;;;;1801:2;1786:18;;1779:43;1838:18;;;1831:34;1686:2;1671:18;1834:358:2;1496:375:4;2081:198:0;;;;;;:::i;:::-;;:::i;1525:267:2:-;-1:-1:-1;;;;;1659:37:2;;;1614:7;1659:37;;;:25;:37;;;;;;;:46;;;;1725:41;;;1614:7;;;;1659:46;;;1770:5;;1716:50;;:6;:50;:::i;:::-;1715:60;;;;:::i;:::-;1642:143;;;;1525:267;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1058:303:2:-;1094:13:0;:11;:13::i;:::-;1223:4:2::1;1203:16;:24;;1195:63;;;::::0;-1:-1:-1;;;1195:63:2;;2570:2:4;1195:63:2::1;::::0;::::1;2552:21:4::0;2609:2;2589:18;;;2582:30;2648:28;2628:18;;;2621:56;2694:18;;1195:63:2::1;;;;;;;;;1268:15;:34:::0;;;1318:36:::1;::::0;876:25:4;;;1318:36:2::1;::::0;864:2:4;849:18;1318:36:2::1;;;;;;;1058:303:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;2925:2:4;2161:73:0::1;::::0;::::1;2907:21:4::0;2964:2;2944:18;;;2937:30;3003:34;2983:18;;;2976:62;-1:-1:-1;;;3054:18:4;;;3047:36;3100:19;;2161:73:0::1;2723:402:4::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;3332:2:4;1414:68:0;;;3314:21:4;;;3351:18;;;3344:30;3410:34;3390:18;;;3383:62;3462:18;;1414:68:0;3130:356:4;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:4:o;1120:180::-;1179:6;1232:2;1220:9;1211:7;1207:23;1203:32;1200:52;;;1248:1;1245;1238:12;1200:52;-1:-1:-1;1271:23:4;;1120:180;-1:-1:-1;1120:180:4:o;1305:186::-;1364:6;1417:2;1405:9;1396:7;1392:23;1388:32;1385:52;;;1433:1;1430;1423:12;1385:52;1456:29;1475:9;1456:29;:::i;:::-;1446:39;1305:186;-1:-1:-1;;;1305:186:4:o;1876:265::-;1949:9;;;1980;;1997:15;;;1991:22;;1977:37;1967:168;;2057:10;2052:3;2048:20;2045:1;2038:31;2092:4;2089:1;2082:15;2120:4;2117:1;2110:15;1967:168;1876:265;;;;:::o;2146:217::-;2186:1;2212;2202:132;;2256:10;2251:3;2247:20;2244:1;2237:31;2291:4;2288:1;2281:15;2319:4;2316:1;2309:15;2202:132;-1:-1:-1;2348:9:4;;2146:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "237200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2301",
								"renounceOwnership()": "infinite",
								"royaltyFeeInfoCollection(address)": "6904",
								"royaltyFeeLimit()": "2318",
								"royaltyInfo(address,uint256)": "4930",
								"transferOwnership(address)": "28399",
								"updateRoyaltyFeeLimit(uint256)": "25601"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 225,
									"end": 2194,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 792,
									"end": 996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 910,
									"end": 914,
									"name": "PUSH",
									"source": 2,
									"value": "251C"
								},
								{
									"begin": 890,
									"end": 906,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 890,
									"end": 914,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 890,
									"end": 914,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 882,
									"end": 945,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 387,
									"end": 408,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 4,
									"value": "1A"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 442,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 417,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 483,
									"end": 511,
									"name": "PUSH",
									"source": 4,
									"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 456,
									"end": 512,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 529,
									"end": 547,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 529,
									"end": 547,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 955,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 989,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 203,
									"end": 553,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 203,
									"end": 553,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 2194,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220882f71440b877635f0684d9474b815d6a6b52beca581da56f6051a15765afe7f64736f6c63430008110033",
									".code": [
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "B9223C9D"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "E31EF91C"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "2782D6C7"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "4FB7D3F9"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1525,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1525,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 643,
											"end": 675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 643,
											"end": 675,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 643,
											"end": 675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 625,
											"end": 676,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 625,
											"end": 676,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 685,
											"end": 719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 685,
											"end": 719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 685,
											"end": 719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 685,
											"end": 719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 598,
											"end": 616,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 876,
											"end": 901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 876,
											"end": 901,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 864,
											"end": 866,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 438,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 730,
											"end": 907,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 912,
											"end": 1115,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1058,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1058,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1834,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2049,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2078,
											"end": 2124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2175,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2068,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2124,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1769,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1769,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1769,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1821,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1821,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1821,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1496,
											"end": 1871,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1705,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1659,
											"end": 1705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1705,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1705,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "PUSH",
											"source": 2,
											"value": "2710"
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1716,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1722,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1716,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1766,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1716,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1715,
											"end": 1775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1715,
											"end": 1775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1775,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1715,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "251C"
										},
										{
											"begin": 1203,
											"end": 1219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1227,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1227,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1195,
											"end": 1258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2552,
											"end": 2573,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2612,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2676,
											"name": "PUSH",
											"source": 4,
											"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
										},
										{
											"begin": 2628,
											"end": 2646,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2628,
											"end": 2646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2646,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2712,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2694,
											"end": 2712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1354,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 876,
											"end": 901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 876,
											"end": 901,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256"
										},
										{
											"begin": 1318,
											"end": 1354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 864,
											"end": 866,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 2966,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2944,
											"end": 2962,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2944,
											"end": 2962,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2962,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 3038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3047,
											"end": 3083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2723,
											"end": 3125,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3334,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3344,
											"end": 3374,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3445,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3130,
											"end": 3486,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1300,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1120,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1235,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1294,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1294,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1491,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1305,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1396,
											"end": 1403,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1420,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1437,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1385,
											"end": 1437,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1431,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1435,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1437,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1385,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1475,
											"end": 1484,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1456,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1485,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1456,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1485,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1491,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1305,
											"end": 1491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 2141,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1876,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1958,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1958,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2012,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2013,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2013,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 2014,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1967,
											"end": 2135,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2057,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2052,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2048,
											"end": 2068,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2120,
											"end": 2124,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2117,
											"end": 2118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2125,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2135,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1967,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 2141,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 2141,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 2141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 2141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 2141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2146,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2146,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2202,
											"end": 2334,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2266,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2251,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2247,
											"end": 2267,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2244,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2268,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2295,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2288,
											"end": 2289,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2281,
											"end": 2296,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2323,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2316,
											"end": 2317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2334,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2202,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2146,
											"end": 2363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
								"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyFeeLimit()": "4fb7d3f9",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"transferOwnership(address)": "f2fde38b",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"NewRoyaltyFeeLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RoyaltyFeeUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":\"RoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xa42170902abb452942c1d096169fb1efa5d9316a9ce229348a1b1ca7f3a2ad18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cec4b689ba818ee417c4d6e8f9d98bf11f374986e84cc4506d38caef86cb53cd\",\"dweb:/ipfs/QmZFd6aa944b3uksC3vu4wpivVxuaH9UN8FRBWgWWYLczP\"]},\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xf3980efab7f2ea6bb9ad1bac2c7ab7d1b48b13a1948fa09fd7f455416a865db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a57f55968179d3251b3d631824e1cddb326f853dbf9746247899c6c8899a24a0\",\"dweb:/ipfs/QmTDMp2zBeWUStZ6EbhrZETL1PdEeQPMaq8sjBnEA76cMy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 153,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "royaltyFeeLimit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 158,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_royaltyFeeInfoCollection",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(FeeInfo)151_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(FeeInfo)151_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(FeeInfo)151_storage"
							},
							"t_struct(FeeInfo)151_storage": {
								"encoding": "inplace",
								"label": "struct RoyaltyFeeRegistry.FeeInfo",
								"members": [
									{
										"astId": 146,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "setter",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 148,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "receiver",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 150,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "fee",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"IRoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":\"IRoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xf3980efab7f2ea6bb9ad1bac2c7ab7d1b48b13a1948fa09fd7f455416a865db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a57f55968179d3251b3d631824e1cddb326f853dbf9746247899c6c8899a24a0\",\"dweb:/ipfs/QmTDMp2zBeWUStZ6EbhrZETL1PdEeQPMaq8sjBnEA76cMy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							299
						],
						"Ownable": [
							112
						],
						"RoyaltyFeeRegistry": [
							269
						]
					},
					"id": 270,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 270,
							"sourceUnit": 113,
							"src": "57:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 137,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "65:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
							"file": "./interface/IRoyaltyFeeRegistry.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 270,
							"sourceUnit": 300,
							"src": "126:72:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IRoyaltyFeeRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 299,
										"src": "134:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 141,
										"name": "IRoyaltyFeeRegistry",
										"nameLocations": [
											"256:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 299,
										"src": "256:19:2"
									},
									"id": 142,
									"nodeType": "InheritanceSpecifier",
									"src": "256:19:2"
								},
								{
									"baseName": {
										"id": 143,
										"name": "Ownable",
										"nameLocations": [
											"277:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "277:7:2"
									},
									"id": 144,
									"nodeType": "InheritanceSpecifier",
									"src": "277:7:2"
								}
							],
							"canonicalName": "RoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269,
								112,
								134,
								299
							],
							"name": "RoyaltyFeeRegistry",
							"nameLocation": "234:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "RoyaltyFeeRegistry.FeeInfo",
									"id": 151,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "setter",
											"nameLocation": "324:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "316:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "316:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "348:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "340:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "374:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "366:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 149,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "366:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeInfo",
									"nameLocation": "298:7:2",
									"nodeType": "StructDefinition",
									"scope": 269,
									"src": "291:93:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fb7d3f9",
									"id": 153,
									"mutability": "mutable",
									"name": "royaltyFeeLimit",
									"nameLocation": "453:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 269,
									"src": "438:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_royaltyFeeInfoCollection",
									"nameLocation": "554:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 269,
									"src": "518:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
										"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
									},
									"typeName": {
										"id": 157,
										"keyType": {
											"id": 154,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "526:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "518:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
											"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
										},
										"valueType": {
											"id": 156,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 155,
												"name": "FeeInfo",
												"nameLocations": [
													"537:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "537:7:2"
											},
											"referencedDeclaration": 151,
											"src": "537:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeeInfo_$151_storage_ptr",
												"typeString": "struct RoyaltyFeeRegistry.FeeInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256",
									"id": 162,
									"name": "NewRoyaltyFeeLimit",
									"nameLocation": "592:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "royaltyFeeLimit",
												"nameLocation": "619:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "611:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:25:2"
									},
									"src": "586:50:2"
								},
								{
									"anonymous": false,
									"eventSelector": "d01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64",
									"id": 172,
									"name": "RoyaltyFeeUpdate",
									"nameLocation": "647:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "680:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "664:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "708:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "692:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "732:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "716:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "750:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "742:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:91:2"
									},
									"src": "641:114:2"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "830:166:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 178,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "890:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "910:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "890:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "916:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "882:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "882:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "882:63:2"
											},
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "955:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 185,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "973:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "955:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "955:34:2"
											}
										]
									},
									"id": 189,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "812:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "804:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:26:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:0:2"
									},
									"scope": 269,
									"src": "792:204:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										276
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1143:218:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 198,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "1203:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1223:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "1203:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1195:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1195:63:2"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1268:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "1286:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1268:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1268:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 209,
															"name": "_royaltyFeeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1337:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 208,
														"name": "NewRoyaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1318:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1318:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "EmitStatement",
												"src": "1313:41:2"
											}
										]
									},
									"functionSelector": "b9223c9d",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 195,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 194,
												"name": "onlyOwner",
												"nameLocations": [
													"1133:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1133:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1133:9:2"
										}
									],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "1067:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1124:8:2"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "1097:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1089:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:26:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:2"
									},
									"scope": 269,
									"src": "1058:303:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										287
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1632:160:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 225,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "1659:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 227,
																"indexExpression": {
																	"id": 226,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1685:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1659:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1697:8:2",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "1659:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 229,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "1716:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 230,
																					"name": "_royaltyFeeInfoCollection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 158,
																					"src": "1725:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																						"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																					}
																				},
																				"id": 232,
																				"indexExpression": {
																					"id": 231,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 215,
																					"src": "1751:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1725:37:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																					"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																				}
																			},
																			"id": 233,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1763:3:2",
																			"memberName": "fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 150,
																			"src": "1725:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1716:50:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 235,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1770:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "1715:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 238,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1649:136:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 224,
												"id": 239,
												"nodeType": "Return",
												"src": "1642:143:2"
											}
										]
									},
									"functionSelector": "2782d6c7",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "1534:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 219,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1596:8:2"
									},
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1554:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1546:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1574:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1566:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:36:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1614:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:18:2"
									},
									"scope": 269,
									"src": "1525:267:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										298
									],
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "1997:195:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 253,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "2024:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 255,
																"indexExpression": {
																	"id": 254,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "2050:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2024:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2062:6:2",
															"memberName": "setter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 146,
															"src": "2024:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 257,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "2078:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 259,
																"indexExpression": {
																	"id": 258,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "2104:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2078:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2116:8:2",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "2078:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 261,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "2134:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 263,
																"indexExpression": {
																	"id": 262,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "2160:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2134:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2172:3:2",
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "2134:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 265,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2014:171:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"functionReturnParameters": 252,
												"id": 266,
												"nodeType": "Return",
												"src": "2007:178:2"
											}
										]
									},
									"functionSelector": "e31ef91c",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "1843:24:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1914:8:2"
									},
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1876:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1868:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:20:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1945:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1962:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1979:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1979:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1935:57:2"
									},
									"scope": 269,
									"src": "1834:358:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 270,
							"src": "225:1969:2",
							"usedErrors": []
						}
					],
					"src": "32:2163:2"
				},
				"id": 2
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							299
						]
					},
					"id": 300,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 271,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 299,
							"linearizedBaseContracts": [
								299
							],
							"name": "IRoyaltyFeeRegistry",
							"nameLocation": "67:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b9223c9d",
									"id": 276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "103:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "133:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "125:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:26:3"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "159:0:3"
									},
									"scope": 299,
									"src": "94:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "175:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "195:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "187:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "215:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "207:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:36:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "246:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "255:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:18:3"
									},
									"scope": 299,
									"src": "166:98:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e31ef91c",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "279:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "312:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "304:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:20:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "384:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "405:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "426:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:73:3"
									},
									"scope": 299,
									"src": "270:174:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 300,
							"src": "57:389:3",
							"usedErrors": []
						}
					],
					"src": "32:415:3"
				},
				"id": 3
			}
		}
	}
}