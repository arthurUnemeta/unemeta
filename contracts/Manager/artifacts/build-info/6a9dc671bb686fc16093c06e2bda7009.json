{
	"id": "6a9dc671bb686fc16093c06e2bda7009",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/CurrencyManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport {TheCurrencyManager} from \"./interface/TheCurrencyManager.sol\";\n\n//  Allow adding different currency for transaction\ncontract CurrencyManager is TheCurrencyManager, Ownable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    EnumerableSet.AddressSet private _whitelistedCurrencies;\n\n    event CurrencyRemoved(address indexed currency);\n    event CurrencyWhitelisted(address indexed currency);\n\n    //\n    // function addCurrency\n    //  @Description: Add a currency\n    //  @param address\n    //  @return external\n    //\n    function addCurrency(address currency) external override onlyOwner {\n        // Check if the currency to be added exists\n        require(!_whitelistedCurrencies.contains(currency), \" Already whitelisted\");\n        _whitelistedCurrencies.add(currency);\n\n        emit CurrencyWhitelisted(currency);\n    }\n\n    //\n    // function removeCurrency\n    //  @Description: Delete a currency\n    //  @param address\n    //  @return external\n    //\n    function removeCurrency(address currency) external override onlyOwner {\n        // Check if the currency to be deleted exists\n        require(_whitelistedCurrencies.contains(currency), \" Not whitelisted\");\n        _whitelistedCurrencies.remove(currency);\n\n        emit CurrencyRemoved(currency);\n    }\n\n    //\n    // function isCurrencyWhitelisted\n    //  @Description: Check if the currency is whitelisted\n    //  @param address\n    //  @return external\n    //\n    function isCurrencyWhitelisted(address currency) external view override returns (bool) {\n        return _whitelistedCurrencies.contains(currency);\n    }\n\n    //\n    // function viewCountWhitelistedCurrencies\n    //  @Description: Count number of whitelisted currencies\n    //  @return external\n    //\n    function viewCountWhitelistedCurrencies() external view override returns (uint256) {\n        return _whitelistedCurrencies.length();\n    }\n\n    //\n    // function viewWhitelistedCurrencies\n    //  @Description: Look through all whitelisted currencies\n    //  @param uint256\n    //  @param uint256\n    //  @return external\n    //\n    function viewWhitelistedCurrencies(uint256 cursor, uint256 size)\n    external\n    view\n    override\n    returns (address[] memory, uint256)\n    {\n        uint256 length = size;\n\n        if (length > _whitelistedCurrencies.length() - cursor) {\n            length = _whitelistedCurrencies.length() - cursor;\n        }\n\n        address[] memory whitelistedCurrencies = new address[](length);\n\n        for (uint256 i = 0; i < length; i++) {\n            whitelistedCurrencies[i] = _whitelistedCurrencies.at(cursor + i);\n        }\n\n        return (whitelistedCurrencies, cursor + length);\n    }\n}\n"
			},
			"contracts/Manager/interface/TheCurrencyManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheCurrencyManager {\n    function addCurrency(address currency) external;\n\n    function removeCurrency(address currency) external;\n\n    function isCurrencyWhitelisted(address currency) external view returns (bool);\n\n    function viewWhitelistedCurrencies(uint256 cursor, uint256 size) external view returns (address[] memory, uint256);\n\n    function viewCountWhitelistedCurrencies() external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208cc9c2e3c1bc6b406b229ac7e1b4926259e75be909664301aef85d1880a7594c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208cc9c2e3c1bc6b406b229ac7e1b4926259e75be909664301aef85d1880a7594c64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xC9 0xC2 0xE3 0xC1 0xBC PUSH12 0x406B229AC7E1B4926259E75B 0xE9 MULMOD PUSH7 0x4301AEF85D1880 0xA7 MSIZE 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1228:11454:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11454:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208cc9c2e3c1bc6b406b229ac7e1b4926259e75be909664301aef85d1880a7594c64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xC9 0xC2 0xE3 0xC1 0xBC PUSH12 0x406B229AC7E1B4926259E75B 0xE9 MULMOD PUSH7 0x4301AEF85D1880 0xA7 MSIZE 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1228:11454:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208cc9c2e3c1bc6b406b229ac7e1b4926259e75be909664301aef85d1880a7594c64736f6c63430008110033",
									".code": [
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"contracts/Manager/CurrencyManager.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/CurrencyManager.sol": {
				"CurrencyManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "CurrencyRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "CurrencyWhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "addCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "isCurrencyWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "removeCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCountWhitelistedCurrencies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cursor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"name": "viewWhitelistedCurrencies",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/CurrencyManager.sol\":337:2889  contract CurrencyManager is TheCurrencyManager, Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/Manager/CurrencyManager.sol\":337:2889  contract CurrencyManager is TheCurrencyManager, Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Manager/CurrencyManager.sol\":337:2889  contract CurrencyManager is TheCurrencyManager, Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/CurrencyManager.sol\":337:2889  contract CurrencyManager is TheCurrencyManager, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ab234b6\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8ab234b6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc5d3a107\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x1facfd9c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x43b938c5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x85f39b0a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/CurrencyManager.sol\":1966:2104  function viewCountWhitelistedCurrencies() external view override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Manager/CurrencyManager.sol\":1966:2104  function viewCountWhitelistedCurrencies() external view override returns (uint256) {... */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/CurrencyManager.sol\":1661:1813  function isCurrencyWhitelisted(address currency) external view override returns (bool) {... */\n    tag_4:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":675:689   */\n      swap1\n      iszero\n        /* \"#utility.yul\":668:690   */\n      iszero\n        /* \"#utility.yul\":650:691   */\n      dup2\n      mstore\n        /* \"#utility.yul\":638:640   */\n      0x20\n        /* \"#utility.yul\":623:641   */\n      add\n        /* \"contracts/Manager/CurrencyManager.sol\":1661:1813  function isCurrencyWhitelisted(address currency) external view override returns (bool) {... */\n      tag_14\n        /* \"#utility.yul\":510:697   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Manager/CurrencyManager.sol\":2299:2887  function viewWhitelistedCurrencies(uint256 cursor, uint256 size)... */\n    tag_6:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/Manager/CurrencyManager.sol\":754:1056  function addCurrency(address currency) external override onlyOwner {... */\n    tag_7:\n      tag_22\n      tag_31\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1860:1934   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1848:1850   */\n      0x20\n        /* \"#utility.yul\":1833:1851   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_14\n        /* \"#utility.yul\":1714:1940   */\n      jump\n        /* \"contracts/Manager/CurrencyManager.sol\":1195:1496  function removeCurrency(address currency) external override onlyOwner {... */\n    tag_9:\n      tag_22\n      tag_38\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_22\n      tag_41\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"contracts/Manager/CurrencyManager.sol\":1966:2104  function viewCountWhitelistedCurrencies() external view override returns (uint256) {... */\n    tag_13:\n        /* \"contracts/Manager/CurrencyManager.sol\":2040:2047  uint256 */\n      0x00\n        /* \"contracts/Manager/CurrencyManager.sol\":2066:2097  _whitelistedCurrencies.length() */\n      tag_44\n        /* \"contracts/Manager/CurrencyManager.sol\":2066:2088  _whitelistedCurrencies */\n      0x01\n        /* \"contracts/Manager/CurrencyManager.sol\":2066:2095  _whitelistedCurrencies.length */\n      tag_45\n        /* \"contracts/Manager/CurrencyManager.sol\":2066:2097  _whitelistedCurrencies.length() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/Manager/CurrencyManager.sol\":2059:2097  return _whitelistedCurrencies.length() */\n      swap1\n      pop\n        /* \"contracts/Manager/CurrencyManager.sol\":1966:2104  function viewCountWhitelistedCurrencies() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Manager/CurrencyManager.sol\":1661:1813  function isCurrencyWhitelisted(address currency) external view override returns (bool) {... */\n    tag_19:\n        /* \"contracts/Manager/CurrencyManager.sol\":1742:1746  bool */\n      0x00\n        /* \"contracts/Manager/CurrencyManager.sol\":1765:1806  _whitelistedCurrencies.contains(currency) */\n      tag_47\n        /* \"contracts/Manager/CurrencyManager.sol\":1765:1787  _whitelistedCurrencies */\n      0x01\n        /* \"contracts/Manager/CurrencyManager.sol\":1797:1805  currency */\n      dup4\n        /* \"contracts/Manager/CurrencyManager.sol\":1765:1796  _whitelistedCurrencies.contains */\n      tag_48\n        /* \"contracts/Manager/CurrencyManager.sol\":1765:1806  _whitelistedCurrencies.contains(currency) */\n      jump\t// in\n    tag_47:\n        /* \"contracts/Manager/CurrencyManager.sol\":1758:1806  return _whitelistedCurrencies.contains(currency) */\n      swap3\n        /* \"contracts/Manager/CurrencyManager.sol\":1661:1813  function isCurrencyWhitelisted(address currency) external view override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/CurrencyManager.sol\":2299:2887  function viewWhitelistedCurrencies(uint256 cursor, uint256 size)... */\n    tag_27:\n        /* \"contracts/Manager/CurrencyManager.sol\":2412:2428  address[] memory */\n      0x60\n        /* \"contracts/Manager/CurrencyManager.sol\":2430:2437  uint256 */\n      0x00\n        /* \"contracts/Manager/CurrencyManager.sol\":2470:2474  size */\n      dup3\n        /* \"contracts/Manager/CurrencyManager.sol\":2532:2538  cursor */\n      dup5\n        /* \"contracts/Manager/CurrencyManager.sol\":2498:2529  _whitelistedCurrencies.length() */\n      tag_56\n        /* \"contracts/Manager/CurrencyManager.sol\":2498:2520  _whitelistedCurrencies */\n      0x01\n        /* \"contracts/Manager/CurrencyManager.sol\":2498:2527  _whitelistedCurrencies.length */\n      tag_45\n        /* \"contracts/Manager/CurrencyManager.sol\":2498:2529  _whitelistedCurrencies.length() */\n      jump\t// in\n    tag_56:\n        /* \"contracts/Manager/CurrencyManager.sol\":2498:2538  _whitelistedCurrencies.length() - cursor */\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"contracts/Manager/CurrencyManager.sol\":2489:2495  length */\n      dup2\n        /* \"contracts/Manager/CurrencyManager.sol\":2489:2538  length > _whitelistedCurrencies.length() - cursor */\n      gt\n        /* \"contracts/Manager/CurrencyManager.sol\":2485:2614  if (length > _whitelistedCurrencies.length() - cursor) {... */\n      iszero\n      tag_59\n      jumpi\n        /* \"contracts/Manager/CurrencyManager.sol\":2597:2603  cursor */\n      dup5\n        /* \"contracts/Manager/CurrencyManager.sol\":2563:2594  _whitelistedCurrencies.length() */\n      tag_60\n        /* \"contracts/Manager/CurrencyManager.sol\":2563:2585  _whitelistedCurrencies */\n      0x01\n        /* \"contracts/Manager/CurrencyManager.sol\":2563:2592  _whitelistedCurrencies.length */\n      tag_45\n        /* \"contracts/Manager/CurrencyManager.sol\":2563:2594  _whitelistedCurrencies.length() */\n      jump\t// in\n    tag_60:\n        /* \"contracts/Manager/CurrencyManager.sol\":2563:2603  _whitelistedCurrencies.length() - cursor */\n      tag_61\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_61:\n        /* \"contracts/Manager/CurrencyManager.sol\":2554:2603  length = _whitelistedCurrencies.length() - cursor */\n      swap1\n      pop\n        /* \"contracts/Manager/CurrencyManager.sol\":2485:2614  if (length > _whitelistedCurrencies.length() - cursor) {... */\n    tag_59:\n        /* \"contracts/Manager/CurrencyManager.sol\":2624:2662  address[] memory whitelistedCurrencies */\n      0x00\n        /* \"contracts/Manager/CurrencyManager.sol\":2679:2685  length */\n      dup2\n        /* \"contracts/Manager/CurrencyManager.sol\":2665:2686  new address[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_65\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_65:\n      pop\n        /* \"contracts/Manager/CurrencyManager.sol\":2624:2686  address[] memory whitelistedCurrencies = new address[](length) */\n      swap1\n      pop\n        /* \"contracts/Manager/CurrencyManager.sol\":2702:2711  uint256 i */\n      0x00\n        /* \"contracts/Manager/CurrencyManager.sol\":2697:2823  for (uint256 i = 0; i < length; i++) {... */\n    tag_66:\n        /* \"contracts/Manager/CurrencyManager.sol\":2721:2727  length */\n      dup3\n        /* \"contracts/Manager/CurrencyManager.sol\":2717:2718  i */\n      dup2\n        /* \"contracts/Manager/CurrencyManager.sol\":2717:2727  i < length */\n      lt\n        /* \"contracts/Manager/CurrencyManager.sol\":2697:2823  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/Manager/CurrencyManager.sol\":2775:2812  _whitelistedCurrencies.at(cursor + i) */\n      tag_69\n        /* \"contracts/Manager/CurrencyManager.sol\":2801:2811  cursor + i */\n      tag_70\n        /* \"contracts/Manager/CurrencyManager.sol\":2810:2811  i */\n      dup3\n        /* \"contracts/Manager/CurrencyManager.sol\":2801:2807  cursor */\n      dup10\n        /* \"contracts/Manager/CurrencyManager.sol\":2801:2811  cursor + i */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/Manager/CurrencyManager.sol\":2775:2797  _whitelistedCurrencies */\n      0x01\n      swap1\n        /* \"contracts/Manager/CurrencyManager.sol\":2775:2800  _whitelistedCurrencies.at */\n      tag_72\n        /* \"contracts/Manager/CurrencyManager.sol\":2775:2812  _whitelistedCurrencies.at(cursor + i) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/Manager/CurrencyManager.sol\":2748:2769  whitelistedCurrencies */\n      dup3\n        /* \"contracts/Manager/CurrencyManager.sol\":2770:2771  i */\n      dup3\n        /* \"contracts/Manager/CurrencyManager.sol\":2748:2772  whitelistedCurrencies[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_74\n      jumpi\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/Manager/CurrencyManager.sol\":2748:2812  whitelistedCurrencies[i] = _whitelistedCurrencies.at(cursor + i) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n        /* \"contracts/Manager/CurrencyManager.sol\":2748:2772  whitelistedCurrencies[i] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"contracts/Manager/CurrencyManager.sol\":2748:2812  whitelistedCurrencies[i] = _whitelistedCurrencies.at(cursor + i) */\n      mstore\n        /* \"contracts/Manager/CurrencyManager.sol\":2729:2732  i++ */\n      dup1\n      tag_76\n      dup2\n      tag_77\n      jump\t// in\n    tag_76:\n      swap2\n      pop\n      pop\n        /* \"contracts/Manager/CurrencyManager.sol\":2697:2823  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_66)\n    tag_67:\n      pop\n        /* \"contracts/Manager/CurrencyManager.sol\":2841:2862  whitelistedCurrencies */\n      dup1\n        /* \"contracts/Manager/CurrencyManager.sol\":2864:2879  cursor + length */\n      tag_78\n        /* \"contracts/Manager/CurrencyManager.sol\":2873:2879  length */\n      dup4\n        /* \"contracts/Manager/CurrencyManager.sol\":2864:2870  cursor */\n      dup9\n        /* \"contracts/Manager/CurrencyManager.sol\":2864:2879  cursor + length */\n      tag_71\n      jump\t// in\n    tag_78:\n        /* \"contracts/Manager/CurrencyManager.sol\":2833:2880  return (whitelistedCurrencies, cursor + length) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/CurrencyManager.sol\":2299:2887  function viewWhitelistedCurrencies(uint256 cursor, uint256 size)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Manager/CurrencyManager.sol\":754:1056  function addCurrency(address currency) external override onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/Manager/CurrencyManager.sol\":892:933  _whitelistedCurrencies.contains(currency) */\n      tag_82\n        /* \"contracts/Manager/CurrencyManager.sol\":892:914  _whitelistedCurrencies */\n      0x01\n        /* \"contracts/Manager/CurrencyManager.sol\":924:932  currency */\n      dup3\n        /* \"contracts/Manager/CurrencyManager.sol\":892:923  _whitelistedCurrencies.contains */\n      tag_48\n        /* \"contracts/Manager/CurrencyManager.sol\":892:933  _whitelistedCurrencies.contains(currency) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/Manager/CurrencyManager.sol\":891:933  !_whitelistedCurrencies.contains(currency) */\n      iszero\n        /* \"contracts/Manager/CurrencyManager.sol\":883:958  require(!_whitelistedCurrencies.contains(currency), \" Already whitelisted\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3177:3179   */\n      0x20\n        /* \"contracts/Manager/CurrencyManager.sol\":883:958  require(!_whitelistedCurrencies.contains(currency), \" Already whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3159:3180   */\n      mstore\n        /* \"#utility.yul\":3216:3218   */\n      0x14\n        /* \"#utility.yul\":3196:3214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3189:3219   */\n      mstore\n        /* \"#utility.yul\":3255:3277   */\n      0x20416c72656164792077686974656c6973746564000000000000000000000000\n        /* \"#utility.yul\":3235:3253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3228:3278   */\n      mstore\n        /* \"#utility.yul\":3295:3313   */\n      0x64\n      add\n        /* \"contracts/Manager/CurrencyManager.sol\":883:958  require(!_whitelistedCurrencies.contains(currency), \" Already whitelisted\") */\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts/Manager/CurrencyManager.sol\":968:1004  _whitelistedCurrencies.add(currency) */\n      tag_86\n        /* \"contracts/Manager/CurrencyManager.sol\":968:990  _whitelistedCurrencies */\n      0x01\n        /* \"contracts/Manager/CurrencyManager.sol\":995:1003  currency */\n      dup3\n        /* \"contracts/Manager/CurrencyManager.sol\":968:994  _whitelistedCurrencies.add */\n      tag_87\n        /* \"contracts/Manager/CurrencyManager.sol\":968:1004  _whitelistedCurrencies.add(currency) */\n      jump\t// in\n    tag_86:\n      pop\n        /* \"contracts/Manager/CurrencyManager.sol\":1020:1049  CurrencyWhitelisted(currency) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      swap1\n      0x3cbf62b327efb2d06d36e16c10a2f5c00cf0568e2b805bd56969b15d27361078\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/CurrencyManager.sol\":754:1056  function addCurrency(address currency) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/CurrencyManager.sol\":1195:1496  function removeCurrency(address currency) external override onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/Manager/CurrencyManager.sol\":1337:1378  _whitelistedCurrencies.contains(currency) */\n      tag_92\n        /* \"contracts/Manager/CurrencyManager.sol\":1337:1359  _whitelistedCurrencies */\n      0x01\n        /* \"contracts/Manager/CurrencyManager.sol\":1369:1377  currency */\n      dup3\n        /* \"contracts/Manager/CurrencyManager.sol\":1337:1368  _whitelistedCurrencies.contains */\n      tag_48\n        /* \"contracts/Manager/CurrencyManager.sol\":1337:1378  _whitelistedCurrencies.contains(currency) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Manager/CurrencyManager.sol\":1329:1399  require(_whitelistedCurrencies.contains(currency), \" Not whitelisted\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3526:3528   */\n      0x20\n        /* \"contracts/Manager/CurrencyManager.sol\":1329:1399  require(_whitelistedCurrencies.contains(currency), \" Not whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3508:3529   */\n      mstore\n        /* \"#utility.yul\":3565:3567   */\n      0x10\n        /* \"#utility.yul\":3545:3563   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3538:3568   */\n      mstore\n        /* \"#utility.yul\":3604:3622   */\n      0x204e6f742077686974656c697374656400000000000000000000000000000000\n        /* \"#utility.yul\":3584:3602   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3577:3623   */\n      mstore\n        /* \"#utility.yul\":3640:3658   */\n      0x64\n      add\n        /* \"contracts/Manager/CurrencyManager.sol\":1329:1399  require(_whitelistedCurrencies.contains(currency), \" Not whitelisted\") */\n      tag_84\n        /* \"#utility.yul\":3324:3664   */\n      jump\n        /* \"contracts/Manager/CurrencyManager.sol\":1329:1399  require(_whitelistedCurrencies.contains(currency), \" Not whitelisted\") */\n    tag_93:\n        /* \"contracts/Manager/CurrencyManager.sol\":1409:1448  _whitelistedCurrencies.remove(currency) */\n      tag_96\n        /* \"contracts/Manager/CurrencyManager.sol\":1409:1431  _whitelistedCurrencies */\n      0x01\n        /* \"contracts/Manager/CurrencyManager.sol\":1439:1447  currency */\n      dup3\n        /* \"contracts/Manager/CurrencyManager.sol\":1409:1438  _whitelistedCurrencies.remove */\n      tag_97\n        /* \"contracts/Manager/CurrencyManager.sol\":1409:1448  _whitelistedCurrencies.remove(currency) */\n      jump\t// in\n    tag_96:\n      pop\n        /* \"contracts/Manager/CurrencyManager.sol\":1464:1489  CurrencyRemoved(currency) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      swap1\n      0xa40d69111be14f29022626d38310e47cc2d7f4cb728961509c2f65a4bee08c5b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/CurrencyManager.sol\":1195:1496  function removeCurrency(address currency) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3871:3873   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3853:3874   */\n      mstore\n        /* \"#utility.yul\":3910:3912   */\n      0x26\n        /* \"#utility.yul\":3890:3908   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3883:3913   */\n      mstore\n        /* \"#utility.yul\":3949:3983   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3929:3947   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3922:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4028   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4000:4018   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3993:4029   */\n      mstore\n        /* \"#utility.yul\":4046:4065   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_84\n        /* \"#utility.yul\":3669:4071   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8829:8944  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8892:8899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8918:8937  _length(set._inner) */\n      tag_47\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8926:8929  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4444:4462  set._values.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4362:4469  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8583:8748  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8716:8739  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8663:8667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4262  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4274  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8686:8741  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8679:8741  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8583:8748  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4278:4280   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4260:4281   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4297:4315   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4290:4320   */\n      mstore\n        /* \"#utility.yul\":4356:4390   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4336:4354   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4329:4391   */\n      mstore\n        /* \"#utility.yul\":4408:4426   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_84\n        /* \"#utility.yul\":4076:4432   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9286:9442  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9360:9367  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9410:9432  _at(set._inner, index) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9414:9417  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9426:9431  index */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9410:9413  _at */\n      tag_121\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9410:9432  _at(set._inner, index) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8028:8178  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8098:8102  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8171  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8126:8129  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8146:8169  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8125  _add */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8171  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8346:8502  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8419:8423  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8442:8495  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8450:8453  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8470:8493  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8442:8449  _remove */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8442:8495  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4811:4929  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4878:4885  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:4907  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:4915  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4916:4921  index */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:4922  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_133\n      tag_75\n      jump\t// in\n    tag_133:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4897:4922  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4811:4929  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2113:2517  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2176:2180  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4262  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n      tag_137\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2245  set._values */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2414:2432  set._values.length */\n      dup5\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2404  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2432  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2446:2457  return true */\n      jump(tag_47)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n    tag_137:\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2495:2500  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2488:2500  return false */\n      jump(tag_47)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2685:4073  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2751:2755  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2888:2900  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2922:2937  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3291:3312  uint256 toDeleteIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_142\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3328:3329  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3315:3325  valueIndex */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_58\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3363:3381  set._values.length */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3291:3329  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3343:3360  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_143\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3384:3385  1 */\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_58\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3343:3385  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3417:3430  toDeleteIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3404:3413  lastIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3404:3430  lastIndex != toDeleteIndex */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3450:3467  bytes32 lastValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3470:3473  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3470:3481  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3482:3491  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3470:3492  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_146\n      jumpi\n      tag_146\n      tag_75\n      jump\t// in\n    tag_146:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3450:3492  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3621:3630  lastValue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3595  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3603  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3604:3617  toDeleteIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3618  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_149\n      tag_75\n      jump\t// in\n    tag_149:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3630  set._values[toDeleteIndex] = lastValue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3716  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3740  set._indexes[lastValue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3876:3879  set */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup1\n      tag_152\n      jumpi\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3971  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3980  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3981:3986  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3961:3987  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4009:4013  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4002:4013  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_47)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4051:4056  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4044:4056  return false */\n      swap2\n      pop\n      pop\n      jump(tag_47)\n        /* \"#utility.yul\":196:505   */\n    tag_18:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_160:\n        /* \"#utility.yul\":363:372   */\n      dup2\n        /* \"#utility.yul\":350:373   */\n      calldataload\n        /* \"#utility.yul\":413:455   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":406:411   */\n      dup2\n        /* \"#utility.yul\":402:456   */\n      and\n        /* \"#utility.yul\":395:400   */\n      dup2\n        /* \"#utility.yul\":392:457   */\n      eq\n        /* \"#utility.yul\":382:475   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":471:472   */\n      0x00\n        /* \"#utility.yul\":468:469   */\n      dup1\n        /* \"#utility.yul\":461:473   */\n      revert\n        /* \"#utility.yul\":702:950   */\n    tag_26:\n        /* \"#utility.yul\":770:776   */\n      0x00\n        /* \"#utility.yul\":778:784   */\n      dup1\n        /* \"#utility.yul\":831:833   */\n      0x40\n        /* \"#utility.yul\":819:828   */\n      dup4\n        /* \"#utility.yul\":810:817   */\n      dup6\n        /* \"#utility.yul\":806:829   */\n      sub\n        /* \"#utility.yul\":802:834   */\n      slt\n        /* \"#utility.yul\":799:851   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":844:845   */\n      dup1\n        /* \"#utility.yul\":837:849   */\n      revert\n        /* \"#utility.yul\":799:851   */\n    tag_164:\n      pop\n      pop\n        /* \"#utility.yul\":870:893   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":940:942   */\n      0x20\n        /* \"#utility.yul\":925:943   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":912:944   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":702:950   */\n      jump\t// out\n        /* \"#utility.yul\":955:1709   */\n    tag_29:\n        /* \"#utility.yul\":1173:1175   */\n      0x40\n        /* \"#utility.yul\":1185:1206   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1255:1268   */\n      dup4\n      mload\n        /* \"#utility.yul\":1158:1176   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1277:1299   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1125:1129   */\n      0x00\n      swap1\n        /* \"#utility.yul\":1352:1356   */\n      0x20\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x60\n        /* \"#utility.yul\":1315:1333   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1379:1394   */\n      dup3\n      dup8\n      add\n        /* \"#utility.yul\":1125:1129   */\n      dup5\n        /* \"#utility.yul\":1422:1640   */\n    tag_166:\n        /* \"#utility.yul\":1436:1442   */\n      dup3\n        /* \"#utility.yul\":1433:1434   */\n      dup2\n        /* \"#utility.yul\":1430:1443   */\n      lt\n        /* \"#utility.yul\":1422:1640   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":1501:1514   */\n      dup2\n      mload\n        /* \"#utility.yul\":1516:1558   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1497:1559   */\n      and\n        /* \"#utility.yul\":1485:1560   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1580:1592   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1615:1630   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1458:1459   */\n      0x01\n        /* \"#utility.yul\":1451:1460   */\n      add\n        /* \"#utility.yul\":1422:1640   */\n      jump(tag_166)\n    tag_168:\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1676:1694   */\n      swap3\n      add\n        /* \"#utility.yul\":1669:1703   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1657:1660   */\n      swap3\n        /* \"#utility.yul\":955:1709   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1945:2129   */\n    tag_156:\n        /* \"#utility.yul\":1997:2074   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1994:1995   */\n      0x00\n        /* \"#utility.yul\":1987:2075   */\n      mstore\n        /* \"#utility.yul\":2094:2098   */\n      0x11\n        /* \"#utility.yul\":2091:2092   */\n      0x04\n        /* \"#utility.yul\":2084:2099   */\n      mstore\n        /* \"#utility.yul\":2118:2122   */\n      0x24\n        /* \"#utility.yul\":2115:2116   */\n      0x00\n        /* \"#utility.yul\":2108:2123   */\n      revert\n        /* \"#utility.yul\":2134:2262   */\n    tag_58:\n        /* \"#utility.yul\":2201:2210   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2222:2233   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2219:2256   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":2236:2254   */\n      tag_47\n      tag_156\n      jump\t// in\n        /* \"#utility.yul\":2267:2451   */\n    tag_64:\n        /* \"#utility.yul\":2319:2396   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2316:2317   */\n      0x00\n        /* \"#utility.yul\":2309:2397   */\n      mstore\n        /* \"#utility.yul\":2416:2420   */\n      0x41\n        /* \"#utility.yul\":2413:2414   */\n      0x04\n        /* \"#utility.yul\":2406:2421   */\n      mstore\n        /* \"#utility.yul\":2440:2444   */\n      0x24\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2430:2445   */\n      revert\n        /* \"#utility.yul\":2456:2581   */\n    tag_71:\n        /* \"#utility.yul\":2521:2530   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2542:2552   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2539:2575   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":2555:2573   */\n      tag_47\n      tag_156\n      jump\t// in\n        /* \"#utility.yul\":2586:2770   */\n    tag_75:\n        /* \"#utility.yul\":2638:2715   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2635:2636   */\n      0x00\n        /* \"#utility.yul\":2628:2716   */\n      mstore\n        /* \"#utility.yul\":2735:2739   */\n      0x32\n        /* \"#utility.yul\":2732:2733   */\n      0x04\n        /* \"#utility.yul\":2725:2740   */\n      mstore\n        /* \"#utility.yul\":2759:2763   */\n      0x24\n        /* \"#utility.yul\":2756:2757   */\n      0x00\n        /* \"#utility.yul\":2749:2764   */\n      revert\n        /* \"#utility.yul\":2775:2970   */\n    tag_77:\n        /* \"#utility.yul\":2814:2817   */\n      0x00\n        /* \"#utility.yul\":2845:2911   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2838:2843   */\n      dup3\n        /* \"#utility.yul\":2835:2912   */\n      sub\n        /* \"#utility.yul\":2832:2935   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2915:2933   */\n      tag_181\n      tag_156\n      jump\t// in\n    tag_181:\n      pop\n        /* \"#utility.yul\":2962:2963   */\n      0x01\n        /* \"#utility.yul\":2951:2964   */\n      add\n      swap1\n        /* \"#utility.yul\":2775:2970   */\n      jump\t// out\n        /* \"#utility.yul\":4437:4621   */\n    tag_153:\n        /* \"#utility.yul\":4489:4566   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4486:4487   */\n      0x00\n        /* \"#utility.yul\":4479:4567   */\n      mstore\n        /* \"#utility.yul\":4586:4590   */\n      0x31\n        /* \"#utility.yul\":4583:4584   */\n      0x04\n        /* \"#utility.yul\":4576:4591   */\n      mstore\n        /* \"#utility.yul\":4610:4614   */\n      0x24\n        /* \"#utility.yul\":4607:4608   */\n      0x00\n        /* \"#utility.yul\":4600:4615   */\n      revert\n\n    auxdata: 0xa26469706673582212204e3a19e0394da9da2cc869e3362e5d3eb6b2f915c71b1a2512298edf121f03f564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 31,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109d48061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638ab234b61161005b5780638ab234b6146100f65780638da5cb5b14610109578063c5d3a10714610131578063f2fde38b1461014457600080fd5b80631facfd9c1461008d57806343b938c5146100a8578063715018a6146100cb57806385f39b0a146100d5575b600080fd5b610095610157565b6040519081526020015b60405180910390f35b6100bb6100b63660046107ce565b610168565b604051901515815260200161009f565b6100d361017b565b005b6100e86100e3366004610804565b61018f565b60405161009f929190610826565b6100d36101043660046107ce565b610291565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009f565b6100d361013f3660046107ce565b610360565b6100d36101523660046107ce565b610429565b600061016360016104e0565b905090565b60006101756001836104ea565b92915050565b61018361051c565b61018d600061059d565b565b60606000828461019f60016104e0565b6101a991906108b3565b8111156101c857846101bb60016104e0565b6101c591906108b3565b90505b60008167ffffffffffffffff8111156101e3576101e36108c6565b60405190808252806020026020018201604052801561020c578160200160208202803683370190505b50905060005b828110156102785761022f61022782896108f5565b600190610612565b82828151811061024157610241610908565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061027081610937565b915050610212565b508061028483886108f5565b9350935050509250929050565b61029961051c565b6102a46001826104ea565b15610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f20416c72656164792077686974656c697374656400000000000000000000000060448201526064015b60405180910390fd5b61031b60018261061e565b5060405173ffffffffffffffffffffffffffffffffffffffff8216907f3cbf62b327efb2d06d36e16c10a2f5c00cf0568e2b805bd56969b15d2736107890600090a250565b61036861051c565b6103736001826104ea565b6103d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f204e6f742077686974656c6973746564000000000000000000000000000000006044820152606401610307565b6103e4600182610640565b5060405173ffffffffffffffffffffffffffffffffffffffff8216907fa40d69111be14f29022626d38310e47cc2d7f4cb728961509c2f65a4bee08c5b90600090a250565b61043161051c565b73ffffffffffffffffffffffffffffffffffffffff81166104d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610307565b6104dd8161059d565b50565b6000610175825490565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205415155b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610307565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006105158383610662565b60006105158373ffffffffffffffffffffffffffffffffffffffff841661068c565b60006105158373ffffffffffffffffffffffffffffffffffffffff84166106db565b600082600001828154811061067957610679610908565b9060005260206000200154905092915050565b60008181526001830160205260408120546106d357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610175565b506000610175565b600081815260018301602052604081205480156107c45760006106ff6001836108b3565b8554909150600090610713906001906108b3565b905081811461077857600086600001828154811061073357610733610908565b906000526020600020015490508087600001848154811061075657610756610908565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806107895761078961096f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610175565b6000915050610175565b6000602082840312156107e057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461051557600080fd5b6000806040838503121561081757600080fd5b50508035926020909101359150565b604080825283519082018190526000906020906060840190828701845b8281101561087557815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610843565b50505092019290925292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561017557610175610884565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8082018082111561017557610175610884565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361096857610968610884565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212204e3a19e0394da9da2cc869e3362e5d3eb6b2f915c71b1a2512298edf121f03f564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9D4 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AB234B6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8AB234B6 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xC5D3A107 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FACFD9C EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x43B938C5 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x85F39B0A EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP3 SWAP2 SWAP1 PUSH2 0x826 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163 PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175 PUSH1 0x1 DUP4 PUSH2 0x4EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x183 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x18D PUSH1 0x0 PUSH2 0x59D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 DUP5 PUSH2 0x19F PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1C8 JUMPI DUP5 PUSH2 0x1BB PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E3 JUMPI PUSH2 0x1E3 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH2 0x22F PUSH2 0x227 DUP3 DUP10 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x612 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x241 JUMPI PUSH2 0x241 PUSH2 0x908 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x270 DUP2 PUSH2 0x937 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x212 JUMP JUMPDEST POP DUP1 PUSH2 0x284 DUP4 DUP9 PUSH2 0x8F5 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x299 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x2A4 PUSH1 0x1 DUP3 PUSH2 0x4EA JUMP JUMPDEST ISZERO PUSH2 0x310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x20416C72656164792077686974656C6973746564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31B PUSH1 0x1 DUP3 PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0x3CBF62B327EFB2D06D36E16C10A2F5C00CF0568E2B805BD56969B15D27361078 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x373 PUSH1 0x1 DUP3 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F742077686974656C697374656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x307 JUMP JUMPDEST PUSH2 0x3E4 PUSH1 0x1 DUP3 PUSH2 0x640 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xA40D69111BE14F29022626D38310E47CC2D7F4CB728961509C2F65A4BEE08C5B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x431 PUSH2 0x51C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x307 JUMP JUMPDEST PUSH2 0x4DD DUP2 PUSH2 0x59D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x307 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 DUP4 DUP4 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x68C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x679 JUMPI PUSH2 0x679 PUSH2 0x908 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x6D3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x175 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 PUSH2 0x6FF PUSH1 0x1 DUP4 PUSH2 0x8B3 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x713 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x778 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x908 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x756 JUMPI PUSH2 0x756 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x789 JUMPI PUSH2 0x789 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x875 JUMPI DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x843 JUMP JUMPDEST POP POP POP SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x175 JUMPI PUSH2 0x175 PUSH2 0x884 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x175 JUMPI PUSH2 0x175 PUSH2 0x884 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x968 JUMPI PUSH2 0x968 PUSH2 0x884 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E GASPRICE NOT 0xE0 CODECOPY 0x4D 0xA9 0xDA 0x2C 0xC8 PUSH10 0xE3362E5D3EB6B2F915C7 SHL BYTE 0x25 SLT 0x29 DUP15 0xDF SLT 0x1F SUB CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "337:2552:3:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:1;936:18:0;:32::i;:::-;337:2552:3;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;337:2552:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_add_187": {
									"entryPoint": 1676,
									"id": 187,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_at_321": {
									"entryPoint": 1634,
									"id": 321,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 1308,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_contains_290": {
									"entryPoint": null,
									"id": 290,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_length_304": {
									"entryPoint": null,
									"id": 304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_remove_271": {
									"entryPoint": 1755,
									"id": 271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1437,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addCurrency_788": {
									"entryPoint": 657,
									"id": 788,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_473": {
									"entryPoint": 1566,
									"id": 473,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@at_569": {
									"entryPoint": 1554,
									"id": 569,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_527": {
									"entryPoint": 1258,
									"id": 527,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isCurrencyWhitelisted_829": {
									"entryPoint": 360,
									"id": 829,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_542": {
									"entryPoint": 1248,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeCurrency_815": {
									"entryPoint": 864,
									"id": 815,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_500": {
									"entryPoint": 1600,
									"id": 500,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 379,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1065,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@viewCountWhitelistedCurrencies_840": {
									"entryPoint": 343,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@viewWhitelistedCurrencies_915": {
									"entryPoint": 399,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a76b93b4b29a436a4be7397c68505b53b10049682aa4117e31cbf64590e6034__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baba8383d14e5963d6c4dfa27cafa8794b1832e1eb2c782a567aa722199e05ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4623:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:239:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:5"
															},
															"nodeType": "YulIf",
															"src": "276:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "337:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "363:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "350:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "341:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "459:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "468:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "461:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "461:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "461:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "395:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "406:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "413:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "402:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "402:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "392:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "392:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "385:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "385:73:5"
															},
															"nodeType": "YulIf",
															"src": "382:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "484:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "494:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:5",
														"type": ""
													}
												],
												"src": "196:309:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "605:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "615:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "627:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "623:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "623:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "615:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "657:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "682:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "675:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "675:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "668:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "650:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "650:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "574:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "585:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "596:4:5",
														"type": ""
													}
												],
												"src": "510:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "789:161:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "835:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "844:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "847:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "837:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "837:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "837:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "810:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "819:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "806:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "806:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "831:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "802:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "802:32:5"
															},
															"nodeType": "YulIf",
															"src": "799:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "860:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "883:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "870:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "860:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "902:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "929:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "940:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "925:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "925:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "912:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "902:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "747:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "758:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "770:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "778:6:5",
														"type": ""
													}
												],
												"src": "702:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1134:575:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1144:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1162:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1173:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1158:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1158:18:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1148:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1192:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1203:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1185:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1185:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1215:17:5",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1226:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1219:3:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1241:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1261:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1255:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1245:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1292:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1277:22:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1308:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1342:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1352:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1346:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1365:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1383:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1391:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1379:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1379:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1369:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1403:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1412:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1407:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1471:169:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1492:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1507:6:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1501:5:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1501:13:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1516:42:5",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1497:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1497:62:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1485:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1485:75:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1485:75:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1573:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1584:3:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1589:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1580:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1580:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1573:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1605:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1619:6:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1627:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1615:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1615:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1605:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1433:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1436:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1430:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1430:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1444:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1446:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1455:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1451:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1446:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1426:3:5",
																"statements": []
															},
															"src": "1422:218:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1649:11:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1657:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1649:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1680:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1691:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1676:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1696:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1669:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1095:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1106:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1114:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1125:4:5",
														"type": ""
													}
												],
												"src": "955:754:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:125:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1825:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1837:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1825:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1867:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1882:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1890:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1878:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1878:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:74:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1860:74:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1784:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1795:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1806:4:5",
														"type": ""
													}
												],
												"src": "1714:226:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1977:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1994:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1987:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1987:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1987:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2091:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2094:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2084:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2084:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2108:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1945:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2183:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2193:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2205:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2208:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2201:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2193:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2234:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2236:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2236:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2236:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2225:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2231:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2222:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:11:5"
															},
															"nodeType": "YulIf",
															"src": "2219:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2165:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2168:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2174:4:5",
														"type": ""
													}
												],
												"src": "2134:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2299:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2316:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2309:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2309:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2416:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2406:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2406:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2440:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2267:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2504:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2514:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2525:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2528:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2514:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2553:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2555:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2555:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2555:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2545:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2548:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2542:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:10:5"
															},
															"nodeType": "YulIf",
															"src": "2539:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2487:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2490:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2496:3:5",
														"type": ""
													}
												],
												"src": "2456:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2618:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2635:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2628:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2628:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2732:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2735:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2725:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2756:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2759:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2749:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2586:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2822:148:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2913:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2915:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2915:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2838:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2835:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:77:5"
															},
															"nodeType": "YulIf",
															"src": "2832:103:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2944:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2955:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2962:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2951:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2944:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2804:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2814:3:5",
														"type": ""
													}
												],
												"src": "2775:195:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3149:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3166:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3177:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3159:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3159:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3159:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3200:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3211:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3196:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3216:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3189:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3189:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3189:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3239:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3250:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3235:18:5"
																	},
																	{
																		"hexValue": "20416c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3255:22:5",
																		"type": "",
																		"value": " Already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3228:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3287:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3299:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3310:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3287:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a76b93b4b29a436a4be7397c68505b53b10049682aa4117e31cbf64590e6034__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3126:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3140:4:5",
														"type": ""
													}
												],
												"src": "2975:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3515:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3526:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3508:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3508:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3560:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3565:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3538:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3538:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3588:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3599:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3584:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3584:18:5"
																	},
																	{
																		"hexValue": "204e6f742077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3604:18:5",
																		"type": "",
																		"value": " Not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3577:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3577:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3577:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3632:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3644:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3655:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3640:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3632:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baba8383d14e5963d6c4dfa27cafa8794b1832e1eb2c782a567aa722199e05ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3475:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3489:4:5",
														"type": ""
													}
												],
												"src": "3324:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3843:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3860:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3871:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3853:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3853:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3853:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3894:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3905:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3890:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3890:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3910:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3883:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3883:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3933:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3944:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3929:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3929:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3949:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3922:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3922:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4020:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4038:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4050:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4061:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4046:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4038:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3820:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3834:4:5",
														"type": ""
													}
												],
												"src": "3669:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4250:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4267:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4278:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4301:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4312:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4297:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4317:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4290:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4290:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4340:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4351:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4336:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4336:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4356:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4329:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4329:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4400:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4412:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4408:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4400:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4227:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4241:4:5",
														"type": ""
													}
												],
												"src": "4076:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4469:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4486:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4489:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4479:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4479:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:4:5",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4576:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4576:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4610:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4600:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4600:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4600:15:5"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "4437:184:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, _1), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_4a76b93b4b29a436a4be7397c68505b53b10049682aa4117e31cbf64590e6034__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \" Already whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baba8383d14e5963d6c4dfa27cafa8794b1832e1eb2c782a567aa722199e05ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \" Not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638ab234b61161005b5780638ab234b6146100f65780638da5cb5b14610109578063c5d3a10714610131578063f2fde38b1461014457600080fd5b80631facfd9c1461008d57806343b938c5146100a8578063715018a6146100cb57806385f39b0a146100d5575b600080fd5b610095610157565b6040519081526020015b60405180910390f35b6100bb6100b63660046107ce565b610168565b604051901515815260200161009f565b6100d361017b565b005b6100e86100e3366004610804565b61018f565b60405161009f929190610826565b6100d36101043660046107ce565b610291565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009f565b6100d361013f3660046107ce565b610360565b6100d36101523660046107ce565b610429565b600061016360016104e0565b905090565b60006101756001836104ea565b92915050565b61018361051c565b61018d600061059d565b565b60606000828461019f60016104e0565b6101a991906108b3565b8111156101c857846101bb60016104e0565b6101c591906108b3565b90505b60008167ffffffffffffffff8111156101e3576101e36108c6565b60405190808252806020026020018201604052801561020c578160200160208202803683370190505b50905060005b828110156102785761022f61022782896108f5565b600190610612565b82828151811061024157610241610908565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061027081610937565b915050610212565b508061028483886108f5565b9350935050509250929050565b61029961051c565b6102a46001826104ea565b15610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f20416c72656164792077686974656c697374656400000000000000000000000060448201526064015b60405180910390fd5b61031b60018261061e565b5060405173ffffffffffffffffffffffffffffffffffffffff8216907f3cbf62b327efb2d06d36e16c10a2f5c00cf0568e2b805bd56969b15d2736107890600090a250565b61036861051c565b6103736001826104ea565b6103d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f204e6f742077686974656c6973746564000000000000000000000000000000006044820152606401610307565b6103e4600182610640565b5060405173ffffffffffffffffffffffffffffffffffffffff8216907fa40d69111be14f29022626d38310e47cc2d7f4cb728961509c2f65a4bee08c5b90600090a250565b61043161051c565b73ffffffffffffffffffffffffffffffffffffffff81166104d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610307565b6104dd8161059d565b50565b6000610175825490565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205415155b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610307565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006105158383610662565b60006105158373ffffffffffffffffffffffffffffffffffffffff841661068c565b60006105158373ffffffffffffffffffffffffffffffffffffffff84166106db565b600082600001828154811061067957610679610908565b9060005260206000200154905092915050565b60008181526001830160205260408120546106d357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610175565b506000610175565b600081815260018301602052604081205480156107c45760006106ff6001836108b3565b8554909150600090610713906001906108b3565b905081811461077857600086600001828154811061073357610733610908565b906000526020600020015490508087600001848154811061075657610756610908565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806107895761078961096f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610175565b6000915050610175565b6000602082840312156107e057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461051557600080fd5b6000806040838503121561081757600080fd5b50508035926020909101359150565b604080825283519082018190526000906020906060840190828701845b8281101561087557815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610843565b50505092019290925292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561017557610175610884565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8082018082111561017557610175610884565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361096857610968610884565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212204e3a19e0394da9da2cc869e3362e5d3eb6b2f915c71b1a2512298edf121f03f564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AB234B6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8AB234B6 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xC5D3A107 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FACFD9C EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x43B938C5 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x85F39B0A EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP3 SWAP2 SWAP1 PUSH2 0x826 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163 PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175 PUSH1 0x1 DUP4 PUSH2 0x4EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x183 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x18D PUSH1 0x0 PUSH2 0x59D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 DUP5 PUSH2 0x19F PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1C8 JUMPI DUP5 PUSH2 0x1BB PUSH1 0x1 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E3 JUMPI PUSH2 0x1E3 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH2 0x22F PUSH2 0x227 DUP3 DUP10 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x612 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x241 JUMPI PUSH2 0x241 PUSH2 0x908 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x270 DUP2 PUSH2 0x937 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x212 JUMP JUMPDEST POP DUP1 PUSH2 0x284 DUP4 DUP9 PUSH2 0x8F5 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x299 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x2A4 PUSH1 0x1 DUP3 PUSH2 0x4EA JUMP JUMPDEST ISZERO PUSH2 0x310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x20416C72656164792077686974656C6973746564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31B PUSH1 0x1 DUP3 PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0x3CBF62B327EFB2D06D36E16C10A2F5C00CF0568E2B805BD56969B15D27361078 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x373 PUSH1 0x1 DUP3 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F742077686974656C697374656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x307 JUMP JUMPDEST PUSH2 0x3E4 PUSH1 0x1 DUP3 PUSH2 0x640 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xA40D69111BE14F29022626D38310E47CC2D7F4CB728961509C2F65A4BEE08C5B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x431 PUSH2 0x51C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x307 JUMP JUMPDEST PUSH2 0x4DD DUP2 PUSH2 0x59D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x307 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 DUP4 DUP4 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x68C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x679 JUMPI PUSH2 0x679 PUSH2 0x908 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x6D3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x175 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 PUSH2 0x6FF PUSH1 0x1 DUP4 PUSH2 0x8B3 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x713 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x778 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x908 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x756 JUMPI PUSH2 0x756 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x789 JUMPI PUSH2 0x789 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x875 JUMPI DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x843 JUMP JUMPDEST POP POP POP SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x175 JUMPI PUSH2 0x175 PUSH2 0x884 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x175 JUMPI PUSH2 0x175 PUSH2 0x884 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x968 JUMPI PUSH2 0x968 PUSH2 0x884 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E GASPRICE NOT 0xE0 CODECOPY 0x4D 0xA9 0xDA 0x2C 0xC8 PUSH10 0xE3362E5D3EB6B2F915C7 SHL BYTE 0x25 SLT 0x29 DUP15 0xDF SLT 0x1F SUB CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "337:2552:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1966:138;;;:::i;:::-;;;160:25:5;;;148:2;133:18;1966:138:3;;;;;;;;1661:152;;;;;;:::i;:::-;;:::i;:::-;;;675:14:5;;668:22;650:41;;638:2;623:18;1661:152:3;510:187:5;1831:101:0;;;:::i;:::-;;2299:588:3;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;754:302::-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;1201:85;;1273:6;;;;1860:74:5;;1848:2;1833:18;1201:85:0;1714:226:5;1195:301:3;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1966:138:3:-;2040:7;2066:31;:22;:29;:31::i;:::-;2059:38;;1966:138;:::o;1661:152::-;1742:4;1765:41;:22;1797:8;1765:31;:41::i;:::-;1758:48;1661:152;-1:-1:-1;;1661:152:3:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2299:588:3:-;2412:16;2430:7;2470:4;2532:6;2498:31;:22;:29;:31::i;:::-;:40;;;;:::i;:::-;2489:6;:49;2485:129;;;2597:6;2563:31;:22;:29;:31::i;:::-;:40;;;;:::i;:::-;2554:49;;2485:129;2624:38;2679:6;2665:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2665:21:3;;2624:62;;2702:9;2697:126;2721:6;2717:1;:10;2697:126;;;2775:37;2801:10;2810:1;2801:6;:10;:::i;:::-;2775:22;;:25;:37::i;:::-;2748:21;2770:1;2748:24;;;;;;;;:::i;:::-;:64;;;;:24;;;;;;;;;;;:64;2729:3;;;;:::i;:::-;;;;2697:126;;;-1:-1:-1;2841:21:3;2864:15;2873:6;2864;:15;:::i;:::-;2833:47;;;;;;2299:588;;;;;:::o;754:302::-;1094:13:0;:11;:13::i;:::-;892:41:3::1;:22;924:8:::0;892:31:::1;:41::i;:::-;891:42;883:75;;;::::0;::::1;::::0;;3177:2:5;883:75:3::1;::::0;::::1;3159:21:5::0;3216:2;3196:18;;;3189:30;3255:22;3235:18;;;3228:50;3295:18;;883:75:3::1;;;;;;;;;968:36;:22;995:8:::0;968:26:::1;:36::i;:::-;-1:-1:-1::0;1020:29:3::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;754:302:::0;:::o;1195:301::-;1094:13:0;:11;:13::i;:::-;1337:41:3::1;:22;1369:8:::0;1337:31:::1;:41::i;:::-;1329:70;;;::::0;::::1;::::0;;3526:2:5;1329:70:3::1;::::0;::::1;3508:21:5::0;3565:2;3545:18;;;3538:30;3604:18;3584;;;3577:46;3640:18;;1329:70:3::1;3324:340:5::0;1329:70:3::1;1409:39;:22;1439:8:::0;1409:29:::1;:39::i;:::-;-1:-1:-1::0;1464:25:3::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;1195:301:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;3871:2:5;2161:73:0::1;::::0;::::1;3853:21:5::0;3910:2;3890:18;;;3883:30;3949:34;3929:18;;;3922:62;4020:8;4000:18;;;3993:36;4046:19;;2161:73:0::1;3669:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;8829:115:2:-;8892:7;8918:19;8926:3;4444:18;;4362:107;8583:165;8716:23;;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;8679:62;8583:165;-1:-1:-1;;;8583:165:2:o;1359:130:0:-;1247:7;1273:6;1422:23;1273:6;719:10:1;1422:23:0;1414:68;;;;;;;4278:2:5;1414:68:0;;;4260:21:5;;;4297:18;;;4290:30;4356:34;4336:18;;;4329:62;4408:18;;1414:68:0;4076:356:5;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;9286:156:2:-;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;8028:150::-;8098:4;8121:50;8126:3;8146:23;;;8121:4;:50::i;8346:156::-;8419:4;8442:53;8450:3;8470:23;;;8442:7;:53::i;4811:118::-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:2;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:2;2488:12;;2685:1388;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:2;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;196:309:5;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;363:9;350:23;413:42;406:5;402:54;395:5;392:65;382:93;;471:1;468;461:12;702:248;770:6;778;831:2;819:9;810:7;806:23;802:32;799:52;;;847:1;844;837:12;799:52;-1:-1:-1;;870:23:5;;;940:2;925:18;;;912:32;;-1:-1:-1;702:248:5:o;955:754::-;1173:2;1185:21;;;1255:13;;1158:18;;;1277:22;;;1125:4;;1352;;1330:2;1315:18;;;1379:15;;;1125:4;1422:218;1436:6;1433:1;1430:13;1422:218;;;1501:13;;1516:42;1497:62;1485:75;;1580:12;;;;1615:15;;;;1458:1;1451:9;1422:218;;;-1:-1:-1;;;1676:18:5;;1669:34;;;;1657:3;955:754;-1:-1:-1;;955:754:5:o;1945:184::-;1997:77;1994:1;1987:88;2094:4;2091:1;2084:15;2118:4;2115:1;2108:15;2134:128;2201:9;;;2222:11;;;2219:37;;;2236:18;;:::i;2267:184::-;2319:77;2316:1;2309:88;2416:4;2413:1;2406:15;2440:4;2437:1;2430:15;2456:125;2521:9;;;2542:10;;;2539:36;;;2555:18;;:::i;2586:184::-;2638:77;2635:1;2628:88;2735:4;2732:1;2725:15;2759:4;2756:1;2749:15;2775:195;2814:3;2845:66;2838:5;2835:77;2832:103;;2915:18;;:::i;:::-;-1:-1:-1;2962:1:5;2951:13;;2775:195::o;4437:184::-;4489:77;4486:1;4479:88;4586:4;4583:1;4576:15;4610:4;4607:1;4600:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "503200",
								"executionCost": "26378",
								"totalCost": "529578"
							},
							"external": {
								"addCurrency(address)": "infinite",
								"isCurrencyWhitelisted(address)": "infinite",
								"owner()": "2311",
								"removeCurrency(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28301",
								"viewCountWhitelistedCurrencies()": "2360",
								"viewWhitelistedCurrencies(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 337,
									"end": 2889,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 2889,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e3a19e0394da9da2cc869e3362e5d3eb6b2f915c71b1a2512298edf121f03f564736f6c63430008110033",
									".code": [
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "8AB234B6"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "8AB234B6"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "C5D3A107"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "1FACFD9C"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "43B938C5"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "85F39B0A"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 337,
											"end": 2889,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1966,
											"end": 2104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1661,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1661,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 675,
											"end": 689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 675,
											"end": 689,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 668,
											"end": 690,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 650,
											"end": 691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 650,
											"end": 691,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 638,
											"end": 640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 623,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 510,
											"end": 697,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2299,
											"end": 2887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2299,
											"end": 2887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2299,
											"end": 2887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 754,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 754,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 1934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1714,
											"end": 1940,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1195,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1195,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2066,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2066,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2066,
											"end": 2097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2097,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2066,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1765,
											"end": 1787,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1765,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1765,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1806,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2412,
											"end": 2428,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2430,
											"end": 2437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2474,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2498,
											"end": 2520,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2498,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2498,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2529,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2498,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2498,
											"end": 2538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2498,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2538,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2498,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2538,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2614,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2485,
											"end": 2614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2563,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2563,
											"end": 2603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2563,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2603,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2563,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2554,
											"end": 2603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2554,
											"end": 2603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2614,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2485,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2665,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2823,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2697,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2727,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2823,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2697,
											"end": 2823,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2775,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2801,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2801,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2811,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2801,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2775,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2775,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2775,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2775,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2775,
											"end": 2812,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2775,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2769,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2748,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2748,
											"end": 2812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2812,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2772,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2812,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2729,
											"end": 2732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2729,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2732,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2729,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2697,
											"end": 2823,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2823,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2697,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2864,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2873,
											"end": 2879,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2864,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2864,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2864,
											"end": 2879,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2864,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2880,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2880,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 892,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 924,
											"end": 932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 892,
											"end": 923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 892,
											"end": 933,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 892,
											"end": 933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 892,
											"end": 933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 891,
											"end": 933,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 958,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3179,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 958,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3180,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3218,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3189,
											"end": 3219,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3277,
											"name": "PUSH",
											"source": 5,
											"value": "20416C72656164792077686974656C6973746564000000000000000000000000"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3278,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 883,
											"end": 958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 968,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 968,
											"end": 990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 968,
											"end": 994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 968,
											"end": 1004,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 968,
											"end": 1004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 968,
											"end": 1004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1020,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1020,
											"end": 1049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3CBF62B327EFB2D06D36E16C10A2F5C00CF0568E2B805BD56969B15D27361078"
										},
										{
											"begin": 1020,
											"end": 1049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1049,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1049,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 754,
											"end": 1056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 754,
											"end": 1056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1337,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1369,
											"end": 1377,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1337,
											"end": 1378,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1337,
											"end": 1378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1329,
											"end": 1399,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1329,
											"end": 1399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1399,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH",
											"source": 5,
											"value": "204E6F742077686974656C697374656400000000000000000000000000000000"
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3623,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3324,
											"end": 3664,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1329,
											"end": 1399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1409,
											"end": 1431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1439,
											"end": 1447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1409,
											"end": 1448,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1448,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1409,
											"end": 1448,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1464,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1489,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1489,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1489,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A40D69111BE14F29022626D38310E47CC2D7F4CB728961509C2F65A4BEE08C5B"
										},
										{
											"begin": 1464,
											"end": 1489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1489,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1489,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3873,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3853,
											"end": 3874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3913,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4028,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4029,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4046,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4046,
											"end": 4065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3669,
											"end": 4071,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8829,
											"end": 8944,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 8829,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8892,
											"end": 8899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8918,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 8926,
											"end": 8929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4469,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8583,
											"end": 8748,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 8583,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8716,
											"end": 8739,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8716,
											"end": 8739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8716,
											"end": 8739,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8663,
											"end": 8667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8686,
											"end": 8741,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8686,
											"end": 8741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8679,
											"end": 8741,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8583,
											"end": 8748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8583,
											"end": 8748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4260,
											"end": 4281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4356,
											"end": 4390,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4329,
											"end": 4391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4076,
											"end": 4432,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9442,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 9286,
											"end": 9442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9360,
											"end": 9367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 9414,
											"end": 9417,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9410,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9410,
											"end": 9432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8028,
											"end": 8178,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 8028,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8121,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8126,
											"end": 8129,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8121,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8121,
											"end": 8171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8502,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 8346,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8419,
											"end": 8423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8450,
											"end": 8453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8470,
											"end": 8493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8470,
											"end": 8493,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8470,
											"end": 8493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8442,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8442,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4916,
											"end": 4921,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4904,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4922,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3315,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3363,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3430,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3473,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3470,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3595,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3592,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3876,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3986,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4051,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 196,
											"end": 505,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 196,
											"end": 505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 363,
											"end": 372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 350,
											"end": 373,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 413,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 456,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 395,
											"end": 400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 392,
											"end": 457,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 382,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 382,
											"end": 475,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 471,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 461,
											"end": 473,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 702,
											"end": 950,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 702,
											"end": 950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 770,
											"end": 776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 810,
											"end": 817,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 806,
											"end": 829,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 802,
											"end": 834,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 799,
											"end": 851,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 799,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 799,
											"end": 851,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 837,
											"end": 849,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 799,
											"end": 851,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 799,
											"end": 851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 870,
											"end": 893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 870,
											"end": 893,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 870,
											"end": 893,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 940,
											"end": 942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 925,
											"end": 943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 925,
											"end": 943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 944,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 944,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 702,
											"end": 950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1709,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 955,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1206,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1206,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1268,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1268,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1299,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1394,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1129,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1640,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1422,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1442,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1640,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1422,
											"end": 1640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1558,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1497,
											"end": 1559,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1560,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1560,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1592,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1630,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1451,
											"end": 1460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1422,
											"end": 1640,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1640,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1422,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1676,
											"end": 1694,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1703,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1703,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1703,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1660,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1709,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 1709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1994,
											"end": 1995,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2123,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2262,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2134,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2233,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2256,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2219,
											"end": 2256,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2236,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2236,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2451,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2267,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2316,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2397,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2413,
											"end": 2414,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2421,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2581,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2456,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2575,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2539,
											"end": 2575,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2555,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2555,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2770,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2586,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2635,
											"end": 2636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2716,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2732,
											"end": 2733,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2763,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2970,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2775,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2838,
											"end": 2843,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2912,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2832,
											"end": 2935,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2915,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2951,
											"end": 2964,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 4621,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4437,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4486,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4590,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4583,
											"end": 4584,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4614,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4607,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4615,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"contracts/Manager/CurrencyManager.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addCurrency(address)": "8ab234b6",
							"isCurrencyWhitelisted(address)": "43b938c5",
							"owner()": "8da5cb5b",
							"removeCurrency(address)": "c5d3a107",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"viewCountWhitelistedCurrencies()": "1facfd9c",
							"viewWhitelistedCurrencies(uint256,uint256)": "85f39b0a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"CurrencyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"CurrencyWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"isCurrencyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCountWhitelistedCurrencies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"viewWhitelistedCurrencies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/CurrencyManager.sol\":\"CurrencyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/Manager/CurrencyManager.sol\":{\"keccak256\":\"0xc1927ad211cf5458d15070b58c4f60485c7417d4531acb314df91457960d7ffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdc1167f4564fa68bc9311b0955ef7324e95bdcf3d592f4515b1b65acb5ddeab\",\"dweb:/ipfs/QmTLSipYD34a6coRx96zhY2yG1ASrwjKZryqpjHNh6fYoG\"]},\"contracts/Manager/interface/TheCurrencyManager.sol\":{\"keccak256\":\"0x6f05161aa87f4a4c8f10bda2cdab7a3120b13a02a085f48f94d8317bdf0459c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ea4ebb036220ea423c2b939a139f04d1a9f4fa931affc4c0a061118722003e\",\"dweb:/ipfs/QmPKBksf6UfQ4cLik934jnKobDmy72FNFnBmGSDBQwxzcz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/CurrencyManager.sol:CurrencyManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 752,
								"contract": "contracts/Manager/CurrencyManager.sol:CurrencyManager",
								"label": "_whitelistedCurrencies",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(AddressSet)446_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)446_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 445,
										"contract": "contracts/Manager/CurrencyManager.sol:CurrencyManager",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)145_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)145_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 140,
										"contract": "contracts/Manager/CurrencyManager.sol:CurrencyManager",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 144,
										"contract": "contracts/Manager/CurrencyManager.sol:CurrencyManager",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheCurrencyManager.sol": {
				"TheCurrencyManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "addCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "isCurrencyWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "removeCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCountWhitelistedCurrencies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cursor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"name": "viewWhitelistedCurrencies",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addCurrency(address)": "8ab234b6",
							"isCurrencyWhitelisted(address)": "43b938c5",
							"removeCurrency(address)": "c5d3a107",
							"viewCountWhitelistedCurrencies()": "1facfd9c",
							"viewWhitelistedCurrencies(uint256,uint256)": "85f39b0a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"isCurrencyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCountWhitelistedCurrencies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"viewWhitelistedCurrencies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheCurrencyManager.sol\":\"TheCurrencyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheCurrencyManager.sol\":{\"keccak256\":\"0x6f05161aa87f4a4c8f10bda2cdab7a3120b13a02a085f48f94d8317bdf0459c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ea4ebb036220ea423c2b939a139f04d1a9f4fa931affc4c0a061118722003e\",\"dweb:/ipfs/QmPKBksf6UfQ4cLik934jnKobDmy72FNFnBmGSDBQwxzcz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							733
						]
					},
					"id": 734,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "140:1087:2",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 733,
							"linearizedBaseContracts": [
								733
							],
							"name": "EnumerableSet",
							"nameLocation": "1236:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 145,
									"members": [
										{
											"constant": false,
											"id": 140,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1760:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "1750:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 138,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 139,
												"nodeType": "ArrayTypeName",
												"src": "1750:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1928:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "1900:36:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 143,
												"keyType": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1900:27:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1703:3:2",
									"nodeType": "StructDefinition",
									"scope": 733,
									"src": "1696:247:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "2182:335:2",
										"statements": [
											{
												"condition": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2196:22:2",
													"subExpression": {
														"arguments": [
															{
																"id": 157,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2207:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 158,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "2212:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 156,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "2197:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2197:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 184,
													"nodeType": "Block",
													"src": "2474:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 155,
															"id": 183,
															"nodeType": "Return",
															"src": "2488:12:2"
														}
													]
												},
												"id": 185,
												"nodeType": "IfStatement",
												"src": "2192:319:2",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "2220:248:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 166,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2251:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "2234:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 164,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2238:7:2",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 140,
																		"src": "2234:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2246:4:2",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2234:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2234:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 168,
															"nodeType": "ExpressionStatement",
															"src": "2234:23:2"
														},
														{
															"expression": {
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 169,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "2392:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2396:8:2",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 144,
																		"src": "2392:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 173,
																	"indexExpression": {
																		"id": 171,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2405:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2392:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 174,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "2414:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 175,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2418:7:2",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 140,
																		"src": "2414:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2426:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2414:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2392:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 178,
															"nodeType": "ExpressionStatement",
															"src": "2392:40:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2453:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 155,
															"id": 180,
															"nodeType": "Return",
															"src": "2446:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "1949:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2122:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2139:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2127:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 148,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 147,
														"name": "Set",
														"nameLocations": [
															"2127:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "2127:3:2"
													},
													"referencedDeclaration": 145,
													"src": "2127:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2152:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:32:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2176:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:6:2"
									},
									"scope": 733,
									"src": "2113:404:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "2757:1316:2",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2875:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "2867:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2867:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 200,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2888:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2892:8:2",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "2888:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 203,
													"indexExpression": {
														"id": 202,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2901:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2888:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2867:40:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 205,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "2922:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2936:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2922:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 268,
													"nodeType": "Block",
													"src": "4030:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4051:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 197,
															"id": 267,
															"nodeType": "Return",
															"src": "4044:12:2"
														}
													]
												},
												"id": 269,
												"nodeType": "IfStatement",
												"src": "2918:1149:2",
												"trueBody": {
													"id": 265,
													"nodeType": "Block",
													"src": "2939:1085:2",
													"statements": [
														{
															"assignments": [
																209
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 209,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3299:13:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 265,
																	"src": "3291:21:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 208,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3291:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 213,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "3315:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3328:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3315:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3291:38:2"
														},
														{
															"assignments": [
																215
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 215,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3351:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 265,
																	"src": "3343:17:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 214,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3343:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 221,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 216,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "3363:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3367:7:2",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 140,
																		"src": "3363:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3375:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3363:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3363:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3343:42:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 222,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3404:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 223,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "3417:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3404:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 249,
															"nodeType": "IfStatement",
															"src": "3400:398:2",
															"trueBody": {
																"id": 248,
																"nodeType": "Block",
																"src": "3432:366:2",
																"statements": [
																	{
																		"assignments": [
																			226
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 226,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3458:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 248,
																				"src": "3450:17:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 225,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3450:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 231,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 227,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 191,
																					"src": "3470:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 228,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3474:7:2",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 140,
																				"src": "3470:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 230,
																			"indexExpression": {
																				"id": 229,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "3482:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3470:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3450:42:2"
																	},
																	{
																		"expression": {
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 232,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 191,
																						"src": "3592:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 235,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3596:7:2",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 140,
																					"src": "3592:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 236,
																				"indexExpression": {
																					"id": 234,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "3604:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3592:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 237,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "3621:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3592:38:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 239,
																		"nodeType": "ExpressionStatement",
																		"src": "3592:38:2"
																	},
																	{
																		"expression": {
																			"id": 246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 240,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 191,
																						"src": "3704:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 243,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3708:8:2",
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 144,
																					"src": "3704:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 244,
																				"indexExpression": {
																					"id": 242,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 226,
																					"src": "3717:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3704:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 245,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "3730:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3704:36:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 247,
																		"nodeType": "ExpressionStatement",
																		"src": "3704:36:2"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 250,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "3876:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3880:7:2",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 140,
																		"src": "3876:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3888:3:2",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3876:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3876:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 256,
															"nodeType": "ExpressionStatement",
															"src": "3876:17:2"
														},
														{
															"expression": {
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3961:26:2",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 257,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "3968:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 258,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3972:8:2",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 144,
																		"src": "3968:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 260,
																	"indexExpression": {
																		"id": 259,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "3981:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3968:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 262,
															"nodeType": "ExpressionStatement",
															"src": "3961:26:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4009:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 197,
															"id": 264,
															"nodeType": "Return",
															"src": "4002:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2523:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2694:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2714:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2702:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 190,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 189,
														"name": "Set",
														"nameLocations": [
															"2702:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "2702:3:2"
													},
													"referencedDeclaration": 145,
													"src": "2702:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:32:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2751:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2751:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:6:2"
									},
									"scope": 733,
									"src": "2685:1388:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "4233:48:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 282,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "4250:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4254:8:2",
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "4250:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 285,
														"indexExpression": {
															"id": 284,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "4263:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4250:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4273:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4250:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 281,
												"id": 288,
												"nodeType": "Return",
												"src": "4243:31:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4079:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4163:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4185:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4173:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 274,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 273,
														"name": "Set",
														"nameLocations": [
															"4173:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "4173:3:2"
													},
													"referencedDeclaration": 145,
													"src": "4173:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4190:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:32:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "4227:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4227:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:6:2"
									},
									"scope": 733,
									"src": "4154:127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "4427:42:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 299,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4444:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4448:7:2",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "4444:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4456:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4444:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 298,
												"id": 302,
												"nodeType": "Return",
												"src": "4437:25:2"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "4287:70:2",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4371:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4391:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4379:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 292,
														"name": "Set",
														"nameLocations": [
															"4379:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "4379:3:2"
													},
													"referencedDeclaration": 145,
													"src": "4379:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:17:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4418:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:9:2"
									},
									"scope": 733,
									"src": "4362:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "4887:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 315,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4904:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4908:7:2",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "4904:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 318,
													"indexExpression": {
														"id": 317,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "4916:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4904:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 314,
												"id": 319,
												"nodeType": "Return",
												"src": "4897:25:2"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "4475:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4820:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4836:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4824:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "Set",
														"nameLocations": [
															"4824:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "4824:3:2"
													},
													"referencedDeclaration": 145,
													"src": "4824:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4849:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4841:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4841:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:32:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:2"
									},
									"scope": 733,
									"src": "4811:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "5543:35:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 331,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "5560:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5564:7:2",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 140,
													"src": "5560:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 330,
												"id": 333,
												"nodeType": "Return",
												"src": "5553:18:2"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "4935:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5478:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5498:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "5486:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 324,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 323,
														"name": "Set",
														"nameLocations": [
															"5486:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "5486:3:2"
													},
													"referencedDeclaration": 145,
													"src": "5486:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5485:17:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "5525:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 327,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5525:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 328,
													"nodeType": "ArrayTypeName",
													"src": "5525:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5524:18:2"
									},
									"scope": 733,
									"src": "5469:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 339,
									"members": [
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5635:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 339,
											"src": "5631:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 337,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 336,
													"name": "Set",
													"nameLocations": [
														"5631:3:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 145,
													"src": "5631:3:2"
												},
												"referencedDeclaration": 145,
												"src": "5631:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5610:10:2",
									"nodeType": "StructDefinition",
									"scope": 733,
									"src": "5603:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "5894:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 351,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5916:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5920:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "5916:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 353,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5928:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 350,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "5911:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5911:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 349,
												"id": 355,
												"nodeType": "Return",
												"src": "5904:30:2"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "5654:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5827:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5850:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5831:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 342,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 341,
														"name": "Bytes32Set",
														"nameLocations": [
															"5831:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "5831:10:2"
													},
													"referencedDeclaration": 339,
													"src": "5831:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5855:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5830:39:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5888:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5888:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:6:2"
									},
									"scope": 733,
									"src": "5818:123:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "6188:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 369,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "6213:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6217:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "6213:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6225:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 368,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "6205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6205:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 367,
												"id": 373,
												"nodeType": "Return",
												"src": "6198:33:2"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "5947:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6118:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6144:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6125:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 359,
														"name": "Bytes32Set",
														"nameLocations": [
															"6125:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "6125:10:2"
													},
													"referencedDeclaration": 339,
													"src": "6125:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6157:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6149:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 362,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6124:39:2"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6182:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6182:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:6:2"
									},
									"scope": 733,
									"src": "6109:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6405:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 387,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "6432:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6436:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "6432:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 389,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "6444:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 386,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "6422:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6422:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 385,
												"id": 391,
												"nodeType": "Return",
												"src": "6415:35:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "6244:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6328:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6356:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6337:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 377,
														"name": "Bytes32Set",
														"nameLocations": [
															"6337:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "6337:10:2"
													},
													"referencedDeclaration": 339,
													"src": "6337:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6369:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6361:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6361:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6336:39:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6399:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6399:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:6:2"
									},
									"scope": 733,
									"src": "6319:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "6610:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 403,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "6635:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6639:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "6635:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 402,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "6627:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6627:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 406,
												"nodeType": "Return",
												"src": "6620:26:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6463:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6547:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6573:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "6554:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 395,
														"name": "Bytes32Set",
														"nameLocations": [
															"6554:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "6554:10:2"
													},
													"referencedDeclaration": 339,
													"src": "6554:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:24:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "6601:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6600:9:2"
									},
									"scope": 733,
									"src": "6538:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "7078:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 420,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "7099:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7103:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "7099:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 422,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7111:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "7095:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7095:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "7088:29:2"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "6659:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7004:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7026:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "7007:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 410,
														"name": "Bytes32Set",
														"nameLocations": [
															"7007:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "7007:10:2"
													},
													"referencedDeclaration": 339,
													"src": "7007:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7039:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "7031:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7031:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7006:39:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "7069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 416,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:9:2"
									},
									"scope": 733,
									"src": "6995:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "7745:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 437,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "7770:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7774:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "7770:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 436,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "7762:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7762:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 435,
												"id": 440,
												"nodeType": "Return",
												"src": "7755:26:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "7130:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7673:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7699:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "7680:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 428,
														"name": "Bytes32Set",
														"nameLocations": [
															"7680:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 339,
														"src": "7680:10:2"
													},
													"referencedDeclaration": 339,
													"src": "7680:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$339_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7679:24:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "7727:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7727:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "7727:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7726:18:2"
									},
									"scope": 733,
									"src": "7664:124:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 446,
									"members": [
										{
											"constant": false,
											"id": 445,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "7845:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 446,
											"src": "7841:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 444,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 443,
													"name": "Set",
													"nameLocations": [
														"7841:3:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 145,
													"src": "7841:3:2"
												},
												"referencedDeclaration": 145,
												"src": "7841:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "7820:10:2",
									"nodeType": "StructDefinition",
									"scope": 733,
									"src": "7813:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "8104:74:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 458,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "8126:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8130:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "8126:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 466,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8162:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8154:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 464,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8154:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8154:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8146:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 462,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8146:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8146:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8138:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 460,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8138:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8138:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 457,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "8121:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8121:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 456,
												"id": 471,
												"nodeType": "Return",
												"src": "8114:57:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "7864:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8037:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8060:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8041:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 449,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 448,
														"name": "AddressSet",
														"nameLocations": [
															"8041:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "8041:10:2"
													},
													"referencedDeclaration": 446,
													"src": "8041:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8073:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8065:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8065:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8040:39:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8098:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8098:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8097:6:2"
									},
									"scope": 733,
									"src": "8028:150:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "8425:77:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 485,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "8450:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8454:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "8450:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 493,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 479,
																					"src": "8486:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8478:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 491,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8478:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8478:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8470:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 489,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8470:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8470:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8462:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 487,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8462:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8462:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 484,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "8442:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8442:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 483,
												"id": 498,
												"nodeType": "Return",
												"src": "8435:60:2"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "8184:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8355:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8381:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "8362:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "AddressSet",
														"nameLocations": [
															"8362:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "8362:10:2"
													},
													"referencedDeclaration": 446,
													"src": "8362:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8394:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "8386:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8361:39:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "8419:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8419:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8418:6:2"
									},
									"scope": 733,
									"src": "8346:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "8669:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 512,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "8696:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8700:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "8696:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 520,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 506,
																					"src": "8732:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8724:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 518,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8724:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8724:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8716:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 516,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8716:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8716:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8708:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 514,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8708:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8708:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 511,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "8686:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8686:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 510,
												"id": 525,
												"nodeType": "Return",
												"src": "8679:62:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "8508:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8592:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8620:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8601:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 502,
														"name": "AddressSet",
														"nameLocations": [
															"8601:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "8601:10:2"
													},
													"referencedDeclaration": 446,
													"src": "8601:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8633:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8625:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:39:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "8663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:6:2"
									},
									"scope": 733,
									"src": "8583:165:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8901:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 537,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "8926:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8930:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "8926:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 536,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "8918:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 535,
												"id": 540,
												"nodeType": "Return",
												"src": "8911:26:2"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "8754:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "8838:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8864:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8845:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 529,
														"name": "AddressSet",
														"nameLocations": [
															"8845:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "8845:10:2"
													},
													"referencedDeclaration": 446,
													"src": "8845:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8844:24:2"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8891:9:2"
									},
									"scope": 733,
									"src": "8829:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "9369:73:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 560,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 546,
																						"src": "9414:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 561,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9418:6:2",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 445,
																					"src": "9414:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$145_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 562,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 548,
																					"src": "9426:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$145_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 321,
																				"src": "9410:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9410:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9402:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 557,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9402:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9402:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9394:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 555,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9394:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9394:40:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9386:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 553,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9386:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 552,
												"id": 567,
												"nodeType": "Return",
												"src": "9379:56:2"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8950:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9295:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9317:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "9298:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 544,
														"name": "AddressSet",
														"nameLocations": [
															"9298:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "9298:10:2"
													},
													"referencedDeclaration": 446,
													"src": "9298:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9330:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "9322:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9297:39:2"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "9360:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9360:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9359:9:2"
									},
									"scope": 733,
									"src": "9286:156:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "10063:219:2",
										"statements": [
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10090:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "10073:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 581,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10073:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 582,
															"nodeType": "ArrayTypeName",
															"src": "10073:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 585,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "10106:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10110:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 445,
															"src": "10106:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 584,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "10098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10098:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10073:44:2"
											},
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10144:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "10127:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 591,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10127:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 592,
															"nodeType": "ArrayTypeName",
															"src": "10127:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"nodeType": "VariableDeclarationStatement",
												"src": "10127:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10213:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10227:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10237:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "10227:6:2",
														"valueSize": 1
													},
													{
														"declaration": 583,
														"isOffset": false,
														"isSlot": false,
														"src": "10237:5:2",
														"valueSize": 1
													}
												],
												"id": 595,
												"nodeType": "InlineAssembly",
												"src": "10204:48:2"
											},
											{
												"expression": {
													"id": 596,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 593,
													"src": "10269:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 578,
												"id": 597,
												"nodeType": "Return",
												"src": "10262:13:2"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "9448:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "9991:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10017:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "9998:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 571,
														"name": "AddressSet",
														"nameLocations": [
															"9998:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 446,
														"src": "9998:10:2"
													},
													"referencedDeclaration": 446,
													"src": "9998:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9997:24:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "10045:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 575,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10045:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 576,
													"nodeType": "ArrayTypeName",
													"src": "10045:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10044:18:2"
									},
									"scope": 733,
									"src": "9982:300:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 603,
									"members": [
										{
											"constant": false,
											"id": 602,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10333:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 603,
											"src": "10329:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 601,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 600,
													"name": "Set",
													"nameLocations": [
														"10329:3:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 145,
													"src": "10329:3:2"
												},
												"referencedDeclaration": 145,
												"src": "10329:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$145_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10311:7:2",
									"nodeType": "StructDefinition",
									"scope": 733,
									"src": "10304:42:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "10589:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 615,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "10611:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10615:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "10611:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 619,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10631:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10623:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 617,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10623:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10623:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 614,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "10606:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10606:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 613,
												"id": 622,
												"nodeType": "Return",
												"src": "10599:39:2"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "10352:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10525:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10545:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10529:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "UintSet",
														"nameLocations": [
															"10529:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "10529:7:2"
													},
													"referencedDeclaration": 603,
													"src": "10529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10558:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10550:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10550:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10528:36:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10583:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10583:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10582:6:2"
									},
									"scope": 733,
									"src": "10516:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "10889:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 636,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "10914:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10918:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "10914:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 640,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "10934:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10926:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 638,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10926:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10926:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 635,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "10906:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10906:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 634,
												"id": 643,
												"nodeType": "Return",
												"src": "10899:42:2"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "10651:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "10822:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10845:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10829:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 627,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 626,
														"name": "UintSet",
														"nameLocations": [
															"10829:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "10829:7:2"
													},
													"referencedDeclaration": 603,
													"src": "10829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10858:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10850:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10850:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10828:36:2"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10883:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10883:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10882:6:2"
									},
									"scope": 733,
									"src": "10813:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "11112:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 657,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "11139:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11143:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "11139:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "11159:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11151:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 659,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11151:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11151:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 656,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "11129:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11129:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 655,
												"id": 664,
												"nodeType": "Return",
												"src": "11122:44:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "10954:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11038:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11063:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "11047:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 648,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 647,
														"name": "UintSet",
														"nameLocations": [
															"11047:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "11047:7:2"
													},
													"referencedDeclaration": 603,
													"src": "11047:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11076:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "11068:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11068:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11046:36:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "11106:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 653,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11106:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11105:6:2"
									},
									"scope": 733,
									"src": "11029:144:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "11323:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 676,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "11348:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11352:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "11348:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 675,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "11340:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11340:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 674,
												"id": 679,
												"nodeType": "Return",
												"src": "11333:26:2"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "11179:70:2",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11263:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11286:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11270:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 669,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 668,
														"name": "UintSet",
														"nameLocations": [
															"11270:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "11270:7:2"
													},
													"referencedDeclaration": 603,
													"src": "11270:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11269:21:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11314:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:9:2"
									},
									"scope": 733,
									"src": "11254:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "11788:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 695,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "11817:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11821:6:2",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 602,
																	"src": "11817:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$145_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 697,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "11829:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$145_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 694,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "11813:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11813:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11805:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11805:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 691,
												"id": 700,
												"nodeType": "Return",
												"src": "11798:38:2"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "11372:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11717:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11736:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "11720:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 684,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 683,
														"name": "UintSet",
														"nameLocations": [
															"11720:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "11720:7:2"
													},
													"referencedDeclaration": 603,
													"src": "11720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11749:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "11741:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11719:36:2"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "11779:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11778:9:2"
									},
									"scope": 733,
									"src": "11708:135:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "12461:219:2",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12488:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "12471:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 714,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12471:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 715,
															"nodeType": "ArrayTypeName",
															"src": "12471:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 718,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "12504:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12508:6:2",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 602,
															"src": "12504:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$145_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 717,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "12496:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$145_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12496:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12471:44:2"
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12542:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "12525:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 724,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ArrayTypeName",
															"src": "12525:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 727,
												"nodeType": "VariableDeclarationStatement",
												"src": "12525:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12611:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12625:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12635:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 726,
														"isOffset": false,
														"isSlot": false,
														"src": "12625:6:2",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "12635:5:2",
														"valueSize": 1
													}
												],
												"id": 728,
												"nodeType": "InlineAssembly",
												"src": "12602:48:2"
											},
											{
												"expression": {
													"id": 729,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 726,
													"src": "12667:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 711,
												"id": 730,
												"nodeType": "Return",
												"src": "12660:13:2"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "11849:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12392:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12415:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "12399:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 705,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 704,
														"name": "UintSet",
														"nameLocations": [
															"12399:7:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 603,
														"src": "12399:7:2"
													},
													"referencedDeclaration": 603,
													"src": "12399:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$603_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12398:21:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "12443:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 708,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12443:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 709,
													"nodeType": "ArrayTypeName",
													"src": "12443:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12442:18:2"
									},
									"scope": 733,
									"src": "12383:297:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 734,
							"src": "1228:11454:2",
							"usedErrors": []
						}
					],
					"src": "115:12568:2"
				},
				"id": 2
			},
			"contracts/Manager/CurrencyManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/CurrencyManager.sol",
					"exportedSymbols": {
						"CurrencyManager": [
							916
						],
						"EnumerableSet": [
							733
						],
						"Ownable": [
							112
						],
						"TheCurrencyManager": [
							953
						]
					},
					"id": 917,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 917,
							"sourceUnit": 113,
							"src": "57:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 736,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "65:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 917,
							"sourceUnit": 734,
							"src": "125:86:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 738,
										"name": "EnumerableSet",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 733,
										"src": "133:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheCurrencyManager.sol",
							"file": "./interface/TheCurrencyManager.sol",
							"id": 741,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 917,
							"sourceUnit": 954,
							"src": "213:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 740,
										"name": "TheCurrencyManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 953,
										"src": "221:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 742,
										"name": "TheCurrencyManager",
										"nameLocations": [
											"365:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 953,
										"src": "365:18:3"
									},
									"id": 743,
									"nodeType": "InheritanceSpecifier",
									"src": "365:18:3"
								},
								{
									"baseName": {
										"id": 744,
										"name": "Ownable",
										"nameLocations": [
											"385:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "385:7:3"
									},
									"id": 745,
									"nodeType": "InheritanceSpecifier",
									"src": "385:7:3"
								}
							],
							"canonicalName": "CurrencyManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								112,
								134,
								953
							],
							"name": "CurrencyManager",
							"nameLocation": "346:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 749,
									"libraryName": {
										"id": 746,
										"name": "EnumerableSet",
										"nameLocations": [
											"405:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 733,
										"src": "405:13:3"
									},
									"nodeType": "UsingForDirective",
									"src": "399:49:3",
									"typeName": {
										"id": 748,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 747,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"423:13:3",
												"437:10:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 446,
											"src": "423:24:3"
										},
										"referencedDeclaration": 446,
										"src": "423:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 752,
									"mutability": "mutable",
									"name": "_whitelistedCurrencies",
									"nameLocation": "487:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "454:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$446_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 751,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 750,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"454:13:3",
												"468:10:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 446,
											"src": "454:24:3"
										},
										"referencedDeclaration": 446,
										"src": "454:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$446_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "a40d69111be14f29022626d38310e47cc2d7f4cb728961509c2f65a4bee08c5b",
									"id": 756,
									"name": "CurrencyRemoved",
									"nameLocation": "522:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"indexed": true,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "554:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "538:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:26:3"
									},
									"src": "516:48:3"
								},
								{
									"anonymous": false,
									"eventSelector": "3cbf62b327efb2d06d36e16c10a2f5c00cf0568e2b805bd56969b15d27361078",
									"id": 760,
									"name": "CurrencyWhitelisted",
									"nameLocation": "575:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"indexed": true,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "611:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "595:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:26:3"
									},
									"src": "569:52:3"
								},
								{
									"baseFunctions": [
										923
									],
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "821:235:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "891:42:3",
															"subExpression": {
																"arguments": [
																	{
																		"id": 771,
																		"name": "currency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "924:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 769,
																		"name": "_whitelistedCurrencies",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "892:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "915:8:3",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 527,
																	"src": "892:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "892:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20416c72656164792077686974656c6973746564",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "935:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a76b93b4b29a436a4be7397c68505b53b10049682aa4117e31cbf64590e6034",
																"typeString": "literal_string \" Already whitelisted\""
															},
															"value": " Already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a76b93b4b29a436a4be7397c68505b53b10049682aa4117e31cbf64590e6034",
																"typeString": "literal_string \" Already whitelisted\""
															}
														],
														"id": 768,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "883:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "883:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "883:75:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "995:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 777,
															"name": "_whitelistedCurrencies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "968:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "991:3:3",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 473,
														"src": "968:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "968:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "968:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 784,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "1040:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 783,
														"name": "CurrencyWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "1020:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "EmitStatement",
												"src": "1015:34:3"
											}
										]
									},
									"functionSelector": "8ab234b6",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 766,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 765,
												"name": "onlyOwner",
												"nameLocations": [
													"811:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "811:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "811:9:3"
										}
									],
									"name": "addCurrency",
									"nameLocation": "763:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 764,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "802:8:3"
									},
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "774:18:3"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "821:0:3"
									},
									"scope": 916,
									"src": "754:302:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										928
									],
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "1265:231:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 799,
																	"name": "currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "1369:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 797,
																	"name": "_whitelistedCurrencies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "1337:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1360:8:3",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 527,
																"src": "1337:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f742077686974656c6973746564",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1380:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baba8383d14e5963d6c4dfa27cafa8794b1832e1eb2c782a567aa722199e05ed",
																"typeString": "literal_string \" Not whitelisted\""
															},
															"value": " Not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baba8383d14e5963d6c4dfa27cafa8794b1832e1eb2c782a567aa722199e05ed",
																"typeString": "literal_string \" Not whitelisted\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1329:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "1329:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 807,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "1439:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 804,
															"name": "_whitelistedCurrencies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "1409:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1432:6:3",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "1409:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "1409:39:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 811,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "1480:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 810,
														"name": "CurrencyRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "1464:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1464:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "EmitStatement",
												"src": "1459:30:3"
											}
										]
									},
									"functionSelector": "c5d3a107",
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 794,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 793,
												"name": "onlyOwner",
												"nameLocations": [
													"1255:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1255:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1255:9:3"
										}
									],
									"name": "removeCurrency",
									"nameLocation": "1204:14:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 792,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1246:8:3"
									},
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1227:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1219:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:18:3"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1265:0:3"
									},
									"scope": 916,
									"src": "1195:301:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										935
									],
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "1748:65:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 825,
															"name": "currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "1797:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 823,
															"name": "_whitelistedCurrencies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "1765:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1788:8:3",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "1765:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1765:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 822,
												"id": 827,
												"nodeType": "Return",
												"src": "1758:48:3"
											}
										]
									},
									"functionSelector": "43b938c5",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCurrencyWhitelisted",
									"nameLocation": "1670:21:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 819,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1724:8:3"
									},
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1700:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1692:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:18:3"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1742:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1742:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:6:3"
									},
									"scope": 916,
									"src": "1661:152:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "2049:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 835,
															"name": "_whitelistedCurrencies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "2066:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2089:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 542,
														"src": "2066:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2066:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 834,
												"id": 838,
												"nodeType": "Return",
												"src": "2059:38:3"
											}
										]
									},
									"functionSelector": "1facfd9c",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewCountWhitelistedCurrencies",
									"nameLocation": "1975:30:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 831,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2022:8:3"
									},
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:2:3"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2040:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:9:3"
									},
									"scope": 916,
									"src": "1966:138:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										947
									],
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2443:444:3",
										"statements": [
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2461:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "2453:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2453:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"id": 855,
													"name": "size",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 844,
													"src": "2470:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2453:21:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 857,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2489:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 858,
																	"name": "_whitelistedCurrencies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "2498:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2521:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 542,
																"src": "2498:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2498:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 861,
															"name": "cursor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "2532:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2498:40:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2489:49:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "2485:129:3",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "2540:74:3",
													"statements": [
														{
															"expression": {
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 864,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "2554:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 865,
																				"name": "_whitelistedCurrencies",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "2563:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																					"typeString": "struct EnumerableSet.AddressSet storage ref"
																				}
																			},
																			"id": 866,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2586:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 542,
																			"src": "2563:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																				"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
																			}
																		},
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2563:31:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 868,
																		"name": "cursor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "2597:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2563:40:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2554:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 871,
															"nodeType": "ExpressionStatement",
															"src": "2554:49:3"
														}
													]
												}
											},
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "whitelistedCurrencies",
														"nameLocation": "2641:21:3",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "2624:38:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2624:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 877,
															"nodeType": "ArrayTypeName",
															"src": "2624:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 884,
												"initialValue": {
													"arguments": [
														{
															"id": 882,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "2679:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2665:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2669:7:3",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 880,
															"nodeType": "ArrayTypeName",
															"src": "2669:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2665:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2624:62:3"
											},
											{
												"body": {
													"id": 906,
													"nodeType": "Block",
													"src": "2734:89:3",
													"statements": [
														{
															"expression": {
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 895,
																		"name": "whitelistedCurrencies",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "2748:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 897,
																	"indexExpression": {
																		"id": 896,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "2770:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2748:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 900,
																				"name": "cursor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 842,
																				"src": "2801:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 901,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 886,
																				"src": "2810:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2801:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 898,
																			"name": "_whitelistedCurrencies",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 752,
																			"src": "2775:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$446_storage",
																				"typeString": "struct EnumerableSet.AddressSet storage ref"
																			}
																		},
																		"id": 899,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2798:2:3",
																		"memberName": "at",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 569,
																		"src": "2775:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$446_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$446_storage_ptr_$",
																			"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
																		}
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2775:37:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2748:64:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "2748:64:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "2717:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 890,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2721:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"initializationExpression": {
													"assignments": [
														886
													],
													"declarations": [
														{
															"constant": false,
															"id": 886,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2710:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 907,
															"src": "2702:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 885,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2702:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 888,
													"initialValue": {
														"hexValue": "30",
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2714:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2702:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2729:3:3",
														"subExpression": {
															"id": 892,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "2729:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 894,
													"nodeType": "ExpressionStatement",
													"src": "2729:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2697:126:3"
											},
											{
												"expression": {
													"components": [
														{
															"id": 908,
															"name": "whitelistedCurrencies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "2841:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "cursor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "2864:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 910,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2873:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2864:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 912,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2840:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$",
														"typeString": "tuple(address[] memory,uint256)"
													}
												},
												"functionReturnParameters": 852,
												"id": 913,
												"nodeType": "Return",
												"src": "2833:47:3"
											}
										]
									},
									"functionSelector": "85f39b0a",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewWhitelistedCurrencies",
									"nameLocation": "2308:25:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 846,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2390:8:3"
									},
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "cursor",
												"nameLocation": "2342:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2334:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2334:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "2358:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2350:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:30:3"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2412:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 847,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 848,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2430:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2411:27:3"
									},
									"scope": 916,
									"src": "2299:588:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 917,
							"src": "337:2552:3",
							"usedErrors": []
						}
					],
					"src": "32:2858:3"
				},
				"id": 3
			},
			"contracts/Manager/interface/TheCurrencyManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheCurrencyManager.sol",
					"exportedSymbols": {
						"TheCurrencyManager": [
							953
						]
					},
					"id": 954,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 918,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheCurrencyManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 953,
							"linearizedBaseContracts": [
								953
							],
							"name": "TheCurrencyManager",
							"nameLocation": "67:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8ab234b6",
									"id": 923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCurrency",
									"nameLocation": "101:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "121:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "113:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:18:4"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:0:4"
									},
									"scope": 953,
									"src": "92:48:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5d3a107",
									"id": 928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeCurrency",
									"nameLocation": "155:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "178:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "170:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:18:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:0:4"
									},
									"scope": 953,
									"src": "146:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "43b938c5",
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCurrencyWhitelisted",
									"nameLocation": "212:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "242:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "234:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:18:4"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "275:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "275:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:6:4"
									},
									"scope": 953,
									"src": "203:78:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f39b0a",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewWhitelistedCurrencies",
									"nameLocation": "296:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "cursor",
												"nameLocation": "330:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "322:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "346:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "338:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:30:4"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "375:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 941,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "375:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 942,
													"nodeType": "ArrayTypeName",
													"src": "375:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "393:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:27:4"
									},
									"scope": 953,
									"src": "287:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1facfd9c",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewCountWhitelistedCurrencies",
									"nameLocation": "417:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:4"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "473:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:9:4"
									},
									"scope": 953,
									"src": "408:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 954,
							"src": "57:427:4",
							"usedErrors": []
						}
					],
					"src": "32:453:4"
				},
				"id": 4
			}
		}
	}
}