{
	"id": "ef535028c23bc0d6716cdb7b085823cc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/execution/StrategySpriceHana.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {OrderTypes} from \"../../libraries/OrderTypes.sol\";\nimport {TheExStrategy} from \"./interface/TheExecutionStrategy.sol\";\n\n/**\n * @title StrategyStandardSaleForFixedPrice\n * @notice Strategy that executes an order at a fixed price that\n * can be taken either by a bid or an ask.\n */\ncontract StrategyFixedPrice is TheExStrategy {\n    uint256 public immutable PROTOCOL_FEE;\n    address public FREE_ADDRESS;\n\n    /**\n     * @notice Constructor\n     * @param _protocolFee protocol fee (200 --> 2%, 400 --> 4%)\n     */\n    constructor(uint256 _protocolFee) {\n        PROTOCOL_FEE = _protocolFee;\n    }\n\n    //\n    // tion canExecuteTakerAsk\n    //  @Description: Check price information\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external\n        view\n        override\n        returns (\n            bool,\n            uint256,\n            uint256\n        )\n    {\n        // Confirm all information are matched and valid within the time period for fixed price    return (\n            return (((makerBid.price == takerAsk.price) &&\n                (makerBid.tokenId == takerAsk.tokenId) &&\n                (makerBid.startTime <= block.timestamp) &&\n                (makerBid.endTime >= block.timestamp)&&\n                makerBid.collection ==FREE_ADDRESS),\n            makerBid.tokenId,\n            makerBid.amount\n        );\n    }\n\n    //\n    // tion canExecuteTakerBid\n    //  @Description: Check strategy\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external\n        view\n        override\n        returns (\n            bool,\n            uint256,\n            uint256\n        )\n    {\n        //Confirm all information are matched and valid within the time period for fixed price\n        return (\n            ((makerAsk.price == takerBid.price) &&\n                (makerAsk.tokenId == takerBid.tokenId) &&\n                (makerAsk.startTime <= block.timestamp) &&\n                (makerAsk.endTime >= block.timestamp)),\n            makerAsk.tokenId,\n            makerAsk.amount\n        );\n    }\n\n    //\n    // function viewProtocolFee\n    //  @Description: Return platform transaction fee\n    //  @return external\n    //\n    function viewProtocolFee() external view override returns (uint256) {\n        return PROTOCOL_FEE;\n    }\n}\n"
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {OrderTypes} from \"../../../libraries/OrderTypes.sol\";\n\ninterface TheExStrategy {\n    function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function viewProtocolFee() external view returns (uint256);\n}\n"
			},
			"contracts/libraries/OrderTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n//—————————————————————————————————Order Structure—————————————————————————————————\nlibrary OrderTypes {\n    // keccak256(\"MakerOrder(bool isOrderAsk,address signer,address collection,uint256 price,uint256 tokenId,uint256 amount,address strategy,address currency,uint256 nonce,uint256 startTime,uint256 endTime,uint256 minPercentageToAsk,bytes params)\")\n    bytes32 internal constant MAKER_ORDER_HASH = 0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028;\n\n    struct MakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address signer; // signer of the maker order\n        address collection; // collection address\n        uint256 price; // price (used as )\n        uint256 tokenId; // id of the token\n        uint256 amount; // amount of tokens to sell/purchase (must be 1 for ERC721, 1+ for ERC1155)\n        address strategy; // strategy for trade execution (e.g., DutchAuction, StandardSaleForFixedPrice)\n        address currency; // currency (e.g., WETH)\n        uint256 nonce; // order nonce (must be unique unless new maker order is meant to override existing one e.g., lower ask price)\n        uint256 startTime; // startTime in timestamp\n        uint256 endTime; // endTime in timestamp\n        uint256 minPercentageToAsk; // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // additional parameters\n        uint8 v; // v: parameter (27 or 28)\n        bytes32 r; // r: parameter\n        bytes32 s; // s: parameter\n    }\n\n    struct TakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address taker; // msg.sender\n        uint256 price; // final price for the purchase\n        uint256 tokenId;\n        uint256 minPercentageToAsk; // // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // other params (e.g., tokenId)\n    }\n\n\n    function hash(MakerOrder memory makerOrder) internal pure returns (bytes32) {\n        return\n        keccak256(\n            abi.encode(\n                MAKER_ORDER_HASH,\n                makerOrder.isOrderAsk,\n                makerOrder.signer,\n                makerOrder.collection,\n                makerOrder.price,\n                makerOrder.tokenId,\n                makerOrder.amount,\n                makerOrder.strategy,\n                makerOrder.currency,\n                makerOrder.nonce,\n                makerOrder.startTime,\n                makerOrder.endTime,\n                makerOrder.minPercentageToAsk,\n                keccak256(makerOrder.params)\n            )\n        );\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Manager/execution/StrategySpriceHana.sol": {
				"StrategyFixedPrice": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_protocolFee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FREE_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PROTOCOL_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "canExecuteBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "canExecuteSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_protocolFee": "protocol fee (200 --> 2%, 400 --> 4%)"
								}
							}
						},
						"title": "StrategyStandardSaleForFixedPrice",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":345:2647  contract StrategyFixedPrice is TheExStrategy {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":581:659  constructor(uint256 _protocolFee) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":625:652  PROTOCOL_FEE = _protocolFee */\n  0x80\n  mstore\n    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":345:2647  contract StrategyFixedPrice is TheExStrategy {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":345:2647  contract StrategyFixedPrice is TheExStrategy {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":345:2647  contract StrategyFixedPrice is TheExStrategy {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x05362ef4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0b4501fd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2a75ffee\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9dd1cda6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd310677d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":439:466  address public FREE_ADDRESS */\n    tag_3:\n      sload(0x00)\n      tag_8\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_8:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":439:466  address public FREE_ADDRESS */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":396:433  uint256 public immutable PROTOCOL_FEE */\n    tag_4:\n      tag_12\n      immutable(\"0x1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac\")\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":368:393   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":356:358   */\n      0x20\n        /* \"#utility.yul\":341:359   */\n      add\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":396:433  uint256 public immutable PROTOCOL_FEE */\n      tag_10\n        /* \"#utility.yul\":222:399   */\n      jump\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":855:1567  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_5:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1307:1321   */\n      swap4\n      iszero\n        /* \"#utility.yul\":1300:1322   */\n      iszero\n        /* \"#utility.yul\":1282:1323   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1354:1356   */\n      0x20\n        /* \"#utility.yul\":1339:1357   */\n      dup5\n      add\n        /* \"#utility.yul\":1332:1366   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1382:1400   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1375:1409   */\n      mstore\n        /* \"#utility.yul\":1270:1272   */\n      0x60\n        /* \"#utility.yul\":1255:1273   */\n      add\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":855:1567  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n      tag_10\n        /* \"#utility.yul\":1086:1415   */\n      jump\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2541:2645  function viewProtocolFee() external view override returns (uint256) {... */\n    tag_6:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2626:2638  PROTOCOL_FEE */\n      immutable(\"0x1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac\")\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2541:2645  function viewProtocolFee() external view override returns (uint256) {... */\n      jump(tag_12)\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1754:2410  function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_7:\n      tag_16\n      tag_26\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":855:1567  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_19:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1037:1041  bool */\n      0x00\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1055:1062  uint256 */\n      dup1\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1076:1083  uint256 */\n      0x00\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1248:1256  takerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1248:1262  takerAsk.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1230:1238  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1230:1244  makerBid.price */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1230:1262  makerBid.price == takerAsk.price */\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1229:1321  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_30\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1304:1312  takerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1304:1320  takerAsk.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1284:1292  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1284:1300  makerBid.tokenId */\n      0x80\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1284:1320  makerBid.tokenId == takerAsk.tokenId */\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1229:1321  (makerBid.price == takerAsk.price) &&... */\n    tag_30:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1229:1380  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_31\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1364:1379  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1342:1350  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1342:1360  makerBid.startTime */\n      0x0120\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1342:1379  makerBid.startTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1229:1380  (makerBid.price == takerAsk.price) &&... */\n    tag_31:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1229:1437  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_32\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1421:1436  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1401:1409  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1401:1417  makerBid.endTime */\n      0x0140\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1401:1436  makerBid.endTime >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1229:1437  (makerBid.price == takerAsk.price) &&... */\n    tag_32:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1229:1490  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_33\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1478:1490  FREE_ADDRESS */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1456:1475  makerBid.collection */\n      tag_34\n      0x60\n      dup7\n      add\n      0x40\n      dup8\n      add\n      tag_35\n      jump\t// in\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1456:1490  makerBid.collection ==FREE_ADDRESS */\n      and\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1229:1490  (makerBid.price == takerAsk.price) &&... */\n    tag_33:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1220:1560  return (((makerBid.price == takerAsk.price) &&... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1505:1521  makerBid.tokenId */\n      0x80\n      dup3\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1535:1550  makerBid.amount */\n      0xa0\n      dup4\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":855:1567  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1754:2410  function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_27:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1937:1941  bool */\n      0x00\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1955:1962  uint256 */\n      dup1\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1976:1983  uint256 */\n      0x00\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2144:2152  takerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2144:2158  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2126:2134  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2126:2140  makerAsk.price */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2126:2158  makerAsk.price == takerBid.price */\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2125:2217  (makerAsk.price == takerBid.price) &&... */\n      dup1\n      iszero\n      tag_38\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2200:2208  takerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2200:2216  takerBid.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2180:2188  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2180:2196  makerAsk.tokenId */\n      0x80\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2180:2216  makerAsk.tokenId == takerBid.tokenId */\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2125:2217  (makerAsk.price == takerBid.price) &&... */\n    tag_38:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2125:2276  (makerAsk.price == takerBid.price) &&... */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2260:2275  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2238:2246  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2238:2256  makerAsk.startTime */\n      0x0120\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2238:2275  makerAsk.startTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2125:2276  (makerAsk.price == takerBid.price) &&... */\n    tag_39:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2125:2333  (makerAsk.price == takerBid.price) &&... */\n      dup1\n      iszero\n      tag_33\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2317:2332  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2297:2305  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2297:2313  makerAsk.endTime */\n      0x0140\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2297:2332  makerAsk.endTime >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2103:2403  return (... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2348:2364  makerAsk.tokenId */\n      0x80\n      dup3\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2378:2393  makerAsk.amount */\n      0xa0\n      dup4\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1754:2410  function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":404:1081   */\n    tag_18:\n        /* \"#utility.yul\":530:536   */\n      0x00\n        /* \"#utility.yul\":538:544   */\n      dup1\n        /* \"#utility.yul\":591:593   */\n      0x40\n        /* \"#utility.yul\":579:588   */\n      dup4\n        /* \"#utility.yul\":570:577   */\n      dup6\n        /* \"#utility.yul\":566:589   */\n      sub\n        /* \"#utility.yul\":562:594   */\n      slt\n        /* \"#utility.yul\":559:611   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":607:608   */\n      0x00\n        /* \"#utility.yul\":604:605   */\n      dup1\n        /* \"#utility.yul\":597:609   */\n      revert\n        /* \"#utility.yul\":559:611   */\n    tag_45:\n        /* \"#utility.yul\":647:656   */\n      dup3\n        /* \"#utility.yul\":634:657   */\n      calldataload\n        /* \"#utility.yul\":676:694   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":717:719   */\n      dup1\n        /* \"#utility.yul\":709:715   */\n      dup3\n        /* \"#utility.yul\":706:720   */\n      gt\n        /* \"#utility.yul\":703:737   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":730:731   */\n      dup1\n        /* \"#utility.yul\":723:735   */\n      revert\n        /* \"#utility.yul\":703:737   */\n    tag_46:\n        /* \"#utility.yul\":756:778   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":812:815   */\n      0xc0\n        /* \"#utility.yul\":794:810   */\n      dup3\n      dup8\n      sub\n        /* \"#utility.yul\":790:816   */\n      slt\n        /* \"#utility.yul\":787:833   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":829:830   */\n      0x00\n        /* \"#utility.yul\":826:827   */\n      dup1\n        /* \"#utility.yul\":819:831   */\n      revert\n        /* \"#utility.yul\":787:833   */\n    tag_47:\n        /* \"#utility.yul\":852:854   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":907:909   */\n      0x20\n        /* \"#utility.yul\":892:910   */\n      dup5\n      add\n        /* \"#utility.yul\":879:911   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":923:939   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":920:956   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":952:953   */\n      0x00\n        /* \"#utility.yul\":949:950   */\n      dup1\n        /* \"#utility.yul\":942:954   */\n      revert\n        /* \"#utility.yul\":920:956   */\n    tag_48:\n      pop\n        /* \"#utility.yul\":975:999   */\n      dup4\n      add\n        /* \"#utility.yul\":1033:1036   */\n      0x0200\n        /* \"#utility.yul\":1015:1031   */\n      dup2\n      dup7\n      sub\n        /* \"#utility.yul\":1011:1037   */\n      slt\n        /* \"#utility.yul\":1008:1054   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1050:1051   */\n      0x00\n        /* \"#utility.yul\":1047:1048   */\n      dup1\n        /* \"#utility.yul\":1040:1052   */\n      revert\n        /* \"#utility.yul\":1008:1054   */\n    tag_49:\n        /* \"#utility.yul\":1073:1075   */\n      dup1\n        /* \"#utility.yul\":1063:1075   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":404:1081   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1706   */\n    tag_35:\n        /* \"#utility.yul\":1479:1485   */\n      0x00\n        /* \"#utility.yul\":1532:1534   */\n      0x20\n        /* \"#utility.yul\":1520:1529   */\n      dup3\n        /* \"#utility.yul\":1511:1518   */\n      dup5\n        /* \"#utility.yul\":1507:1530   */\n      sub\n        /* \"#utility.yul\":1503:1535   */\n      slt\n        /* \"#utility.yul\":1500:1552   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":1548:1549   */\n      0x00\n        /* \"#utility.yul\":1545:1546   */\n      dup1\n        /* \"#utility.yul\":1538:1550   */\n      revert\n        /* \"#utility.yul\":1500:1552   */\n    tag_52:\n        /* \"#utility.yul\":1574:1597   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1626:1657   */\n      dup2\n      and\n        /* \"#utility.yul\":1616:1658   */\n      dup2\n      eq\n        /* \"#utility.yul\":1606:1676   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1672:1673   */\n      0x00\n        /* \"#utility.yul\":1669:1670   */\n      dup1\n        /* \"#utility.yul\":1662:1674   */\n      revert\n        /* \"#utility.yul\":1606:1676   */\n    tag_53:\n        /* \"#utility.yul\":1695:1700   */\n      swap4\n        /* \"#utility.yul\":1420:1706   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220485b896a976e8053abb46cf83d525844ec88e3065f6826c3404d7b24643d6e3464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 55,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:200:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:3"
															},
															"nodeType": "YulIf",
															"src": "105:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:3",
														"type": ""
													}
												],
												"src": "14:184:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161035538038061035583398101604081905261002f91610037565b608052610050565b60006020828403121561004957600080fd5b5051919050565b6080516102e5610070600039600081816091015260f301526102e56000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806305362ef41461005c5780630b4501fd1461008c5780632a75ffee146100c15780639dd1cda6146100f1578063d310677d14610117575b600080fd5b60005461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610083565b6100d46100cf36600461020b565b61012a565b604080519315158452602084019290925290820152606001610083565b7f00000000000000000000000000000000000000000000000000000000000000006100b3565b6100d461012536600461020b565b6101b2565b60008060008460400135846060013514801561014d575084606001358460800135145b801561015e57504284610120013511155b801561016f57504284610140013510155b801561019d57506000546001600160a01b0316610192606086016040870161027f565b6001600160a01b0316145b92505050608082013560a08301359250925092565b6000806000846040013584606001351480156101d5575084606001358460800135145b80156101e657504284610120013511155b801561019d575042846101400135101592505050608082013560a08301359250925092565b6000806040838503121561021e57600080fd5b823567ffffffffffffffff8082111561023657600080fd5b9084019060c0828703121561024a57600080fd5b9092506020840135908082111561026057600080fd5b508301610200818603121561027457600080fd5b809150509250929050565b60006020828403121561029157600080fd5b81356001600160a01b03811681146102a857600080fd5b939250505056fea2646970667358221220485b896a976e8053abb46cf83d525844ec88e3065f6826c3404d7b24643d6e3464736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x355 CODESIZE SUB DUP1 PUSH2 0x355 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x37 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH2 0x50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2E5 PUSH2 0x70 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x91 ADD MSTORE PUSH1 0xF3 ADD MSTORE PUSH2 0x2E5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5362EF4 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0xB4501FD EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x2A75FFEE EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x9DD1CDA6 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xD310677D EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x20B JUMP JUMPDEST PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x83 JUMP JUMPDEST PUSH32 0x0 PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x14D JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x15E JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16F JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x19D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 PUSH1 0x60 DUP7 ADD PUSH1 0x40 DUP8 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x1D5 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1E6 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x19D JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE JUMPDEST DUP10 PUSH11 0x976E8053ABB46CF83D5258 DIFFICULTY 0xEC DUP9 0xE3 MOD 0x5F PUSH9 0x26C3404D7B24643D6E CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "345:2302:0:-:0;;;581:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;625:27;;345:2302;;14:184:3;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:3;;14:184;-1:-1:-1;14:184:3:o;:::-;345:2302:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@FREE_ADDRESS_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PROTOCOL_FEE_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@canExecuteBuy_79": {
									"entryPoint": 298,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@canExecuteSell_130": {
									"entryPoint": 434,
									"id": 130,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@viewProtocolFee_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_TakerOrder_$231_calldata_ptrt_struct$_MakerOrder_$218_calldata_ptr": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1708:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "323:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "333:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "356:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "333:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "375:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "368:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "368:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "368:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "292:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "303:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "314:4:3",
														"type": ""
													}
												],
												"src": "222:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "549:532:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "604:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "607:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "597:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "570:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "579:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "566:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "566:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "591:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "562:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:32:3"
															},
															"nodeType": "YulIf",
															"src": "559:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "620:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "634:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:23:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "624:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "666:28:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "676:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "670:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "721:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "733:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "723:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "723:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "723:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "709:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "717:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "706:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:14:3"
															},
															"nodeType": "YulIf",
															"src": "703:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "746:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "760:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "750:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "826:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "829:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "819:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "798:7:3"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "807:2:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "794:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "812:3:3",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "790:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "790:26:3"
															},
															"nodeType": "YulIf",
															"src": "787:46:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "842:12:3",
															"value": {
																"name": "_2",
																"nodeType": "YulIdentifier",
																"src": "852:2:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "842:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "863:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "896:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "907:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "892:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "879:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:32:3"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "867:8:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "926:8:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "936:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "923:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:16:3"
															},
															"nodeType": "YulIf",
															"src": "920:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "979:9:3"
																	},
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "990:8:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "975:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "975:24:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "969:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1038:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1040:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1040:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:3"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1028:2:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1033:3:3",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:26:3"
															},
															"nodeType": "YulIf",
															"src": "1008:46:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1063:12:3",
															"value": {
																"name": "_3",
																"nodeType": "YulIdentifier",
																"src": "1073:2:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_TakerOrder_$231_calldata_ptrt_struct$_MakerOrder_$218_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "507:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "518:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "530:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "538:6:3",
														"type": ""
													}
												],
												"src": "404:677:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1237:178:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1247:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1259:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1270:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1255:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1247:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1289:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1314:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1307:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1307:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1300:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1300:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1282:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1282:41:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1343:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1354:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1339:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1339:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1359:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1332:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1386:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1397:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1382:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1382:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1402:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1375:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1375:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1375:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1190:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1201:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1209:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1217:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1228:4:3",
														"type": ""
													}
												],
												"src": "1086:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1490:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1536:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1545:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1548:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1538:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1538:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1538:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1511:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1520:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1507:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1507:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1532:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1503:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1503:32:3"
															},
															"nodeType": "YulIf",
															"src": "1500:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1561:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1587:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1574:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1565:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1660:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1669:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1672:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1662:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1662:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1630:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1645:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1650:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1641:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1641:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1654:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1637:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1637:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1626:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1626:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1616:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1616:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1609:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:50:3"
															},
															"nodeType": "YulIf",
															"src": "1606:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1685:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1695:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1456:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1467:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1479:6:3",
														"type": ""
													}
												],
												"src": "1420:286:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_TakerOrder_$231_calldata_ptrt_struct$_MakerOrder_$218_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 192) { revert(0, 0) }\n        value0 := _2\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if slt(sub(dataEnd, _3), 512) { revert(0, 0) }\n        value1 := _3\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"10": [
									{
										"length": 32,
										"start": 145
									},
									{
										"length": 32,
										"start": 243
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806305362ef41461005c5780630b4501fd1461008c5780632a75ffee146100c15780639dd1cda6146100f1578063d310677d14610117575b600080fd5b60005461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610083565b6100d46100cf36600461020b565b61012a565b604080519315158452602084019290925290820152606001610083565b7f00000000000000000000000000000000000000000000000000000000000000006100b3565b6100d461012536600461020b565b6101b2565b60008060008460400135846060013514801561014d575084606001358460800135145b801561015e57504284610120013511155b801561016f57504284610140013510155b801561019d57506000546001600160a01b0316610192606086016040870161027f565b6001600160a01b0316145b92505050608082013560a08301359250925092565b6000806000846040013584606001351480156101d5575084606001358460800135145b80156101e657504284610120013511155b801561019d575042846101400135101592505050608082013560a08301359250925092565b6000806040838503121561021e57600080fd5b823567ffffffffffffffff8082111561023657600080fd5b9084019060c0828703121561024a57600080fd5b9092506020840135908082111561026057600080fd5b508301610200818603121561027457600080fd5b809150509250929050565b60006020828403121561029157600080fd5b81356001600160a01b03811681146102a857600080fd5b939250505056fea2646970667358221220485b896a976e8053abb46cf83d525844ec88e3065f6826c3404d7b24643d6e3464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5362EF4 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0xB4501FD EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x2A75FFEE EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x9DD1CDA6 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xD310677D EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x20B JUMP JUMPDEST PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x83 JUMP JUMPDEST PUSH32 0x0 PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x14D JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x15E JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16F JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x19D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 PUSH1 0x60 DUP7 ADD PUSH1 0x40 DUP8 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x1D5 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1E6 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x19D JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE JUMPDEST DUP10 PUSH11 0x976E8053ABB46CF83D5258 DIFFICULTY 0xEC DUP9 0xE3 MOD 0x5F PUSH9 0x26C3404D7B24643D6E CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "345:2302:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:27;;;;;-1:-1:-1;;;;;439:27:0;;;;;;-1:-1:-1;;;;;178:32:3;;;160:51;;148:2;133:18;439:27:0;;;;;;;;396:37;;;;;;;;368:25:3;;;356:2;341:18;396:37:0;222:177:3;855:712:0;;;;;;:::i;:::-;;:::i;:::-;;;;1307:14:3;;1300:22;1282:41;;1354:2;1339:18;;1332:34;;;;1382:18;;;1375:34;1270:2;1255:18;855:712:0;1086:329:3;2541:104:0;2626:12;2541:104;;1754:656;;;;;;:::i;:::-;;:::i;855:712::-;1037:4;1055:7;1076;1248:8;:14;;;1230:8;:14;;;:32;1229:92;;;;;1304:8;:16;;;1284:8;:16;;;:36;1229:92;:151;;;;;1364:15;1342:8;:18;;;:37;;1229:151;:208;;;;;1421:15;1401:8;:16;;;:35;;1229:208;:261;;;;-1:-1:-1;1478:12:0;;-1:-1:-1;;;;;1478:12:0;1456:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1456:34:0;;1229:261;1220:340;-1:-1:-1;;;1505:16:0;;;;1535:15;;;;855:712;;;;;:::o;1754:656::-;1937:4;1955:7;1976;2144:8;:14;;;2126:8;:14;;;:32;2125:92;;;;;2200:8;:16;;;2180:8;:16;;;:36;2125:92;:151;;;;;2260:15;2238:8;:18;;;:37;;2125:151;:208;;;;;2317:15;2297:8;:16;;;:35;;2103:300;-1:-1:-1;;;2348:16:0;;;;2378:15;;;;1754:656;;;;;:::o;404:677:3:-;530:6;538;591:2;579:9;570:7;566:23;562:32;559:52;;;607:1;604;597:12;559:52;647:9;634:23;676:18;717:2;709:6;706:14;703:34;;;733:1;730;723:12;703:34;756:22;;;;812:3;794:16;;;790:26;787:46;;;829:1;826;819:12;787:46;852:2;;-1:-1:-1;907:2:3;892:18;;879:32;;923:16;;;920:36;;;952:1;949;942:12;920:36;-1:-1:-1;975:24:3;;1033:3;1015:16;;;1011:26;1008:46;;;1050:1;1047;1040:12;1008:46;1073:2;1063:12;;;404:677;;;;;:::o;1420:286::-;1479:6;1532:2;1520:9;1511:7;1507:23;1503:32;1500:52;;;1548:1;1545;1538:12;1500:52;1574:23;;-1:-1:-1;;;;;1626:31:3;;1616:42;;1606:70;;1672:1;1669;1662:12;1606:70;1695:5;1420:286;-1:-1:-1;;;1420:286:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "148200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"FREE_ADDRESS()": "2304",
								"PROTOCOL_FEE()": "infinite",
								"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "3044",
								"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "787",
								"viewProtocolFee()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 581,
									"end": 659,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 659,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 581,
									"end": 659,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 659,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 659,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 581,
									"end": 659,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 581,
									"end": 659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 659,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 581,
									"end": 659,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 625,
									"end": 652,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 625,
									"end": 652,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 2647,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220485b896a976e8053abb46cf83d525844ec88e3065f6826c3404d7b24643d6e3464736f6c63430008110033",
									".code": [
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "5362EF4"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "B4501FD"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "2A75FFEE"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "9DD1CDA6"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "D310677D"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 439,
											"end": 466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 466,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 466,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 396,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 222,
											"end": 399,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 855,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 855,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1321,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1321,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1323,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1357,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1357,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 1272,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1255,
											"end": 1273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1086,
											"end": 1415,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2645,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2541,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2541,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2541,
											"end": 2645,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1754,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1754,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1262,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1230,
											"end": 1238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1230,
											"end": 1262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1229,
											"end": 1321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1312,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1304,
											"end": 1320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1320,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1284,
											"end": 1292,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1284,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1284,
											"end": 1300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1284,
											"end": 1300,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1284,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1321,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1229,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1229,
											"end": 1380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1379,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1229,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1229,
											"end": 1437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1436,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1409,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1417,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1401,
											"end": 1417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1417,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1436,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1229,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1490,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1229,
											"end": 1490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1478,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1478,
											"end": 1490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1456,
											"end": 1475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1456,
											"end": 1490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1490,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1229,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1560,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1505,
											"end": 1521,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1505,
											"end": 1521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1521,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 855,
											"end": 1567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1937,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2158,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2140,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2126,
											"end": 2140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2140,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2125,
											"end": 2217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2196,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2180,
											"end": 2196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2196,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2217,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2125,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2125,
											"end": 2276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2275,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2246,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2238,
											"end": 2256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2256,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2275,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2276,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2125,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2125,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2332,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2348,
											"end": 2364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2364,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2393,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 2378,
											"end": 2393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2393,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 404,
											"end": 1081,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 404,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 530,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 588,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 570,
											"end": 577,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 566,
											"end": 589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 562,
											"end": 594,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 559,
											"end": 611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 559,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 559,
											"end": 611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 607,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 605,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 609,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 559,
											"end": 611,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 559,
											"end": 611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 634,
											"end": 657,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 694,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 719,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 706,
											"end": 720,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 703,
											"end": 737,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 703,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 703,
											"end": 737,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 731,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 735,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 703,
											"end": 737,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 703,
											"end": 737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 756,
											"end": 778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 756,
											"end": 778,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 756,
											"end": 778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 756,
											"end": 778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 812,
											"end": 815,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 794,
											"end": 810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 794,
											"end": 810,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 794,
											"end": 810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 790,
											"end": 816,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 787,
											"end": 833,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 787,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 787,
											"end": 833,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 829,
											"end": 830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 819,
											"end": 831,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 787,
											"end": 833,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 787,
											"end": 833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 852,
											"end": 854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 852,
											"end": 854,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 907,
											"end": 909,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 910,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 892,
											"end": 910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 911,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 879,
											"end": 911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 923,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 923,
											"end": 939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 923,
											"end": 939,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 920,
											"end": 956,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 920,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 920,
											"end": 956,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 952,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 942,
											"end": 954,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 920,
											"end": 956,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 920,
											"end": 956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 975,
											"end": 999,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 975,
											"end": 999,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1033,
											"end": 1036,
											"name": "PUSH",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1015,
											"end": 1031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1031,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1031,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1037,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1040,
											"end": 1052,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1008,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1075,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 404,
											"end": 1081,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 404,
											"end": 1081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 404,
											"end": 1081,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 404,
											"end": 1081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 404,
											"end": 1081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 404,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1706,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1420,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1518,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1535,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1657,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1658,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1606,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1676,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1606,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1700,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1706,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1420,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/Manager/execution/StrategySpriceHana.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/libraries/OrderTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"FREE_ADDRESS()": "05362ef4",
							"PROTOCOL_FEE()": "0b4501fd",
							"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "2a75ffee",
							"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "d310677d",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FREE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"canExecuteBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"canExecuteSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_protocolFee\":\"protocol fee (200 --> 2%, 400 --> 4%)\"}}},\"title\":\"StrategyStandardSaleForFixedPrice\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"}},\"notice\":\"Strategy that executes an order at a fixed price that can be taken either by a bid or an ask.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/execution/StrategySpriceHana.sol\":\"StrategyFixedPrice\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/execution/StrategySpriceHana.sol\":{\"keccak256\":\"0xda54f98bed08e4f4e31a1d33e227a690127bb2f3ec80736ab3d9dcc0e3493874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319de8512bd9319688465ddb519e10209209426167b5e7bcdce827bed519b4e8\",\"dweb:/ipfs/QmRtYyC5wR75j6yxguQ5SsmULMkFpy4g3nqL12gk46xYJN\"]},\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "contracts/Manager/execution/StrategySpriceHana.sol:StrategyFixedPrice",
								"label": "FREE_ADDRESS",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor"
							}
						},
						"notice": "Strategy that executes an order at a fixed price that can be taken either by a bid or an ask.",
						"version": 1
					}
				}
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"TheExStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "canExecuteBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "canExecuteSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "2a75ffee",
							"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "d310677d",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"canExecuteBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"canExecuteSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":\"TheExStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/OrderTypes.sol": {
				"OrderTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAE 0xE3 LOG2 STOP SWAP8 INVALID 0xC3 0xD7 0x27 LOG4 0xAC 0x2F 0xAF 0xE0 0x23 0xDD 0xD1 OR PUSH19 0xFBF882AC4BCB4DF06EB4AF1864736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;273:2505:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAE 0xE3 LOG2 STOP SWAP8 INVALID 0xC3 0xD7 0x27 LOG4 0xAC 0x2F 0xAF 0xE0 0x23 0xDD 0xD1 OR PUSH19 0xFBF882AC4BCB4DF06EB4AF1864736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"hash(struct OrderTypes.MakerOrder memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
									".code": [
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/Manager/execution/StrategySpriceHana.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/libraries/OrderTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/OrderTypes.sol\":\"OrderTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Manager/execution/StrategySpriceHana.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/execution/StrategySpriceHana.sol",
					"exportedSymbols": {
						"OrderTypes": [
							276
						],
						"StrategyFixedPrice": [
							140
						],
						"TheExStrategy": [
							180
						]
					},
					"id": 141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../libraries/OrderTypes.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 141,
							"sourceUnit": 277,
							"src": "57:58:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 276,
										"src": "65:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
							"file": "./interface/TheExecutionStrategy.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 141,
							"sourceUnit": 181,
							"src": "116:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "TheExStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 180,
										"src": "124:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "TheExStrategy",
										"nameLocations": [
											"376:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 180,
										"src": "376:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "376:13:0"
								}
							],
							"canonicalName": "StrategyFixedPrice",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "185:159:0",
								"text": " @title StrategyStandardSaleForFixedPrice\n @notice Strategy that executes an order at a fixed price that\n can be taken either by a bid or an ask."
							},
							"fullyImplemented": true,
							"id": 140,
							"linearizedBaseContracts": [
								140,
								180
							],
							"name": "StrategyFixedPrice",
							"nameLocation": "354:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0b4501fd",
									"id": 10,
									"mutability": "immutable",
									"name": "PROTOCOL_FEE",
									"nameLocation": "421:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "396:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "396:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05362ef4",
									"id": 12,
									"mutability": "mutable",
									"name": "FREE_ADDRESS",
									"nameLocation": "454:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "439:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "439:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "615:44:0",
										"statements": [
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 18,
														"name": "PROTOCOL_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "625:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 19,
														"name": "_protocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "640:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "625:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "625:27:0"
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "473:103:0",
										"text": " @notice Constructor\n @param _protocolFee protocol fee (200 --> 2%, 400 --> 4%)"
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "_protocolFee",
												"nameLocation": "601:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "593:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:22:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:0:0"
									},
									"scope": 140,
									"src": "581:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										159
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "1098:469:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 70,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 58,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 51,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 43,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 39,
																									"name": "makerBid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 29,
																									"src": "1230:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																										"typeString": "struct OrderTypes.MakerOrder calldata"
																									}
																								},
																								"id": 40,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1239:5:0",
																								"memberName": "price",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 193,
																								"src": "1230:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"expression": {
																									"id": 41,
																									"name": "takerAsk",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 26,
																									"src": "1248:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TakerOrder_$231_calldata_ptr",
																										"typeString": "struct OrderTypes.TakerOrder calldata"
																									}
																								},
																								"id": 42,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1257:5:0",
																								"memberName": "price",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 224,
																								"src": "1248:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1230:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 44,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1229:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 49,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 45,
																									"name": "makerBid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 29,
																									"src": "1284:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																										"typeString": "struct OrderTypes.MakerOrder calldata"
																									}
																								},
																								"id": 46,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1293:7:0",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 195,
																								"src": "1284:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"expression": {
																									"id": 47,
																									"name": "takerAsk",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 26,
																									"src": "1304:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TakerOrder_$231_calldata_ptr",
																										"typeString": "struct OrderTypes.TakerOrder calldata"
																									}
																								},
																								"id": 48,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1313:7:0",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 226,
																								"src": "1304:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1284:36:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 50,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1283:38:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "1229:92:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 56,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 52,
																								"name": "makerBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 29,
																								"src": "1342:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																									"typeString": "struct OrderTypes.MakerOrder calldata"
																								}
																							},
																							"id": 53,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1351:9:0",
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 205,
																							"src": "1342:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"expression": {
																								"id": 54,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "1364:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 55,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1370:9:0",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "1364:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1342:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 57,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1341:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "1229:151:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 63,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 59,
																							"name": "makerBid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 29,
																							"src": "1401:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																								"typeString": "struct OrderTypes.MakerOrder calldata"
																							}
																						},
																						"id": 60,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1410:7:0",
																						"memberName": "endTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 207,
																						"src": "1401:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"expression": {
																							"id": 61,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "1421:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 62,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1427:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "1421:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1401:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 64,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1400:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1229:208:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 66,
																				"name": "makerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "1456:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																					"typeString": "struct OrderTypes.MakerOrder calldata"
																				}
																			},
																			"id": 67,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1465:10:0",
																			"memberName": "collection",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 191,
																			"src": "1456:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 68,
																			"name": "FREE_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1478:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1456:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1229:261:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 71,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1228:263:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 72,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1505:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1514:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 195,
															"src": "1505:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 74,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1535:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1544:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 197,
															"src": "1535:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 76,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1227:333:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"functionReturnParameters": 38,
												"id": 77,
												"nodeType": "Return",
												"src": "1220:340:0"
											}
										]
									},
									"functionSelector": "2a75ffee",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteBuy",
									"nameLocation": "864:13:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 31,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "998:8:0"
									},
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "909:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "878:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$231_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 25,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 24,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"878:10:0",
															"889:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 231,
														"src": "878:21:0"
													},
													"referencedDeclaration": 231,
													"src": "878:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$231_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "950:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "919:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 28,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 27,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"919:10:0",
															"930:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "919:21:0"
													},
													"referencedDeclaration": 218,
													"src": "919:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$218_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:82:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1037:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 32,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1037:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:70:0"
									},
									"scope": 140,
									"src": "855:712:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										174
									],
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1998:412:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 99,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 95,
																								"name": "makerAsk",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 85,
																								"src": "2126:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																									"typeString": "struct OrderTypes.MakerOrder calldata"
																								}
																							},
																							"id": 96,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2135:5:0",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 193,
																							"src": "2126:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 97,
																								"name": "takerBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 82,
																								"src": "2144:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TakerOrder_$231_calldata_ptr",
																									"typeString": "struct OrderTypes.TakerOrder calldata"
																								}
																							},
																							"id": 98,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2153:5:0",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 224,
																							"src": "2144:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2126:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 100,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2125:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 105,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 101,
																								"name": "makerAsk",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 85,
																								"src": "2180:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																									"typeString": "struct OrderTypes.MakerOrder calldata"
																								}
																							},
																							"id": 102,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2189:7:0",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 195,
																							"src": "2180:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 103,
																								"name": "takerBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 82,
																								"src": "2200:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TakerOrder_$231_calldata_ptr",
																									"typeString": "struct OrderTypes.TakerOrder calldata"
																								}
																							},
																							"id": 104,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2209:7:0",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 226,
																							"src": "2200:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2180:36:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 106,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2179:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2125:92:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 108,
																							"name": "makerAsk",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 85,
																							"src": "2238:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																								"typeString": "struct OrderTypes.MakerOrder calldata"
																							}
																						},
																						"id": 109,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2247:9:0",
																						"memberName": "startTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 205,
																						"src": "2238:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"id": 110,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "2260:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 111,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2266:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "2260:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2238:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 113,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2237:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2125:151:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 115,
																						"name": "makerAsk",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 85,
																						"src": "2297:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																							"typeString": "struct OrderTypes.MakerOrder calldata"
																						}
																					},
																					"id": 116,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2306:7:0",
																					"memberName": "endTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 207,
																					"src": "2297:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"expression": {
																						"id": 117,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "2317:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 118,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2323:9:0",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "2317:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2297:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 120,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2296:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2125:208:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 122,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2124:210:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 123,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2348:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2357:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 195,
															"src": "2348:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 125,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2378:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2387:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 197,
															"src": "2378:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 127,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2110:293:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"functionReturnParameters": 94,
												"id": 128,
												"nodeType": "Return",
												"src": "2103:300:0"
											}
										]
									},
									"functionSelector": "d310677d",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteSell",
									"nameLocation": "1763:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 87,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1898:8:0"
									},
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "1809:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1778:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$231_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 81,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 80,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"1778:10:0",
															"1789:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 231,
														"src": "1778:21:0"
													},
													"referencedDeclaration": 231,
													"src": "1778:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$231_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "1850:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1819:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 84,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 83,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"1819:10:0",
															"1830:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "1819:21:0"
													},
													"referencedDeclaration": 218,
													"src": "1819:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$218_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1777:82:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1937:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1976:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:70:0"
									},
									"scope": 140,
									"src": "1754:656:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										179
									],
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "2609:36:0",
										"statements": [
											{
												"expression": {
													"id": 136,
													"name": "PROTOCOL_FEE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2626:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 137,
												"nodeType": "Return",
												"src": "2619:19:0"
											}
										]
									},
									"functionSelector": "9dd1cda6",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "2550:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 132,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2582:8:0"
									},
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2565:2:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2600:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2599:9:0"
									},
									"scope": 140,
									"src": "2541:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 141,
							"src": "345:2302:0",
							"usedErrors": []
						}
					],
					"src": "32:2616:0"
				},
				"id": 0
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
					"exportedSymbols": {
						"OrderTypes": [
							276
						],
						"TheExStrategy": [
							180
						]
					},
					"id": 181,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 142,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../../libraries/OrderTypes.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 181,
							"sourceUnit": 277,
							"src": "57:61:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 276,
										"src": "65:10:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheExStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 180,
							"linearizedBaseContracts": [
								180
							],
							"name": "TheExStrategy",
							"nameLocation": "130:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2a75ffee",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteBuy",
									"nameLocation": "159:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "204:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "173:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$231_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 146,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 145,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"173:10:1",
															"184:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 231,
														"src": "173:21:1"
													},
													"referencedDeclaration": 231,
													"src": "173:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$231_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "245:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "214:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 149,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 148,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"214:10:1",
															"225:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "214:21:1"
													},
													"referencedDeclaration": 218,
													"src": "214:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$218_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:82:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "315:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "315:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "333:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "354:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:70:1"
									},
									"scope": 180,
									"src": "150:222:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d310677d",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteSell",
									"nameLocation": "387:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "433:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "402:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$231_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 160,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"402:10:1",
															"413:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 231,
														"src": "402:21:1"
													},
													"referencedDeclaration": 231,
													"src": "402:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$231_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "474:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "443:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$218_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"443:10:1",
															"454:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "443:21:1"
													},
													"referencedDeclaration": 218,
													"src": "443:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$218_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:82:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "544:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "562:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "583:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:70:1"
									},
									"scope": 180,
									"src": "378:223:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dd1cda6",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "616:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "657:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:1"
									},
									"scope": 180,
									"src": "607:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 181,
							"src": "120:548:1",
							"usedErrors": []
						}
					],
					"src": "32:637:1"
				},
				"id": 1
			},
			"contracts/libraries/OrderTypes.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/OrderTypes.sol",
					"exportedSymbols": {
						"OrderTypes": [
							276
						]
					},
					"id": 277,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 182,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OrderTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 276,
							"linearizedBaseContracts": [
								276
							],
							"name": "OrderTypes",
							"nameLocation": "281:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 185,
									"mutability": "constant",
									"name": "MAKER_ORDER_HASH",
									"nameLocation": "573:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 276,
									"src": "547:111:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 183,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834303236316164653533326661316432633732393364663330616161646239623363363136666165353235613062353664336434313163383431613835303238",
										"id": 184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "592:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_29015347937064319049656096072445641795799588500519861140121276013747802492968_by_1",
											"typeString": "int_const 2901...(69 digits omitted)...2968"
										},
										"value": "0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "OrderTypes.MakerOrder",
									"id": 218,
									"members": [
										{
											"constant": false,
											"id": 187,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "698:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "693:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "693:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 189,
											"mutability": "mutable",
											"name": "signer",
											"nameLocation": "758:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "750:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 188,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "750:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 191,
											"mutability": "mutable",
											"name": "collection",
											"nameLocation": "811:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "803:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 190,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "803:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 193,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "861:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "853:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 192,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "853:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 195,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "904:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "896:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 194,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 197,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "948:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "940:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 196,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "940:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 199,
											"mutability": "mutable",
											"name": "strategy",
											"nameLocation": "1048:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1040:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 198,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1040:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "1154:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1146:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 200,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1146:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 203,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1205:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1197:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 202,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1197:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 205,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1339:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1331:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 207,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "1392:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1384:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 206,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1384:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 209,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1441:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1433:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 208,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1433:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 211,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "1551:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1545:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 210,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1545:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 213,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "1598:1:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1592:7:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 212,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1592:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 215,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "1644:1:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1636:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 214,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1636:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 217,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "1679:1:2",
											"nodeType": "VariableDeclaration",
											"scope": 218,
											"src": "1671:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 216,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1671:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MakerOrder",
									"nameLocation": "672:10:2",
									"nodeType": "StructDefinition",
									"scope": 276,
									"src": "665:1038:2",
									"visibility": "public"
								},
								{
									"canonicalName": "OrderTypes.TakerOrder",
									"id": 231,
									"members": [
										{
											"constant": false,
											"id": 220,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "1742:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 231,
											"src": "1737:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 219,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1737:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 222,
											"mutability": "mutable",
											"name": "taker",
											"nameLocation": "1802:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 231,
											"src": "1794:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 221,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1794:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 224,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1839:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 231,
											"src": "1831:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 223,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1831:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 226,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1894:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 231,
											"src": "1886:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 225,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1886:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 228,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1919:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 231,
											"src": "1911:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 227,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1911:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 230,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "2032:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 231,
											"src": "2026:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 229,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2026:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TakerOrder",
									"nameLocation": "1716:10:2",
									"nodeType": "StructDefinition",
									"scope": 276,
									"src": "1709:368:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2160:616:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 242,
																	"name": "MAKER_ORDER_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2236:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 243,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2270:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2281:10:2",
																	"memberName": "isOrderAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 187,
																	"src": "2270:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"expression": {
																		"id": 245,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2309:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2320:6:2",
																	"memberName": "signer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 189,
																	"src": "2309:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 247,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2344:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2355:10:2",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 191,
																	"src": "2344:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 249,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2383:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2394:5:2",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 193,
																	"src": "2383:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 251,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2417:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2428:7:2",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 195,
																	"src": "2417:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 253,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2453:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2464:6:2",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 197,
																	"src": "2453:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 255,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2488:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 256,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2499:8:2",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2488:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 257,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2525:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2536:8:2",
																	"memberName": "currency",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "2525:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 259,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2562:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 260,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2573:5:2",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 203,
																	"src": "2562:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 261,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2596:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2607:9:2",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 205,
																	"src": "2596:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 263,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2634:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2645:7:2",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 207,
																	"src": "2634:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 265,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2670:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2681:18:2",
																	"memberName": "minPercentageToAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 209,
																	"src": "2670:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 268,
																				"name": "makerOrder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 234,
																				"src": "2727:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
																					"typeString": "struct OrderTypes.MakerOrder memory"
																				}
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2738:6:2",
																			"memberName": "params",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 211,
																			"src": "2727:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 267,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2717:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2717:28:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2208:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2212:6:2",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2208:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2208:551:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 239,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2185:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:584:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 238,
												"id": 273,
												"nodeType": "Return",
												"src": "2170:599:2"
											}
										]
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2093:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "makerOrder",
												"nameLocation": "2116:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2098:28:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$218_memory_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 233,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 232,
														"name": "MakerOrder",
														"nameLocations": [
															"2098:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "2098:10:2"
													},
													"referencedDeclaration": 218,
													"src": "2098:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$218_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:30:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2151:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:9:2"
									},
									"scope": 276,
									"src": "2084:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 277,
							"src": "273:2505:2",
							"usedErrors": []
						}
					],
					"src": "32:2747:2"
				},
				"id": 2
			}
		}
	}
}