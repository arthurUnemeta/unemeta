{
	"id": "c0cffaeab8d210ac100104ab9388fda0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/execution/StrategySpriceHana.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {OrderTypes} from \"../../libraries/OrderTypes.sol\";\nimport {TheExStrategy} from \"./interface/TheExecutionStrategy.sol\";\n\n/**\n * @title StrategyStandardSaleForFixedPrice\n * @notice Strategy that executes an order at a fixed price that\n * can be taken either by a bid or an ask.\n */\ncontract StrategyFixedPrice is TheExStrategy {\n    uint256 public immutable PROTOCOL_FEE;\n\n    /**\n     * @notice Constructor\n     * @param _protocolFee protocol fee (200 --> 2%, 400 --> 4%)\n     */\n    constructor(uint256 _protocolFee) {\n        PROTOCOL_FEE = _protocolFee;\n    }\n\n    //\n    // tion canExecuteTakerAsk\n    //  @Description: Check price information\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external\n        view\n        override\n        returns (\n            bool,\n            uint256,\n            uint256\n        )\n    {\n        // Confirm all information are matched and valid within the time period for fixed price    return (\n            return (((makerBid.price == takerAsk.price) &&\n                (makerBid.tokenId == takerAsk.tokenId) &&\n                (makerBid.startTime <= block.timestamp) &&\n                (makerBid.endTime >= block.timestamp)&&\n                makerBid.collection ==address(9)),\n            makerBid.tokenId,\n            makerBid.amount\n        );\n    }\n\n    //\n    // tion canExecuteTakerBid\n    //  @Description: Check strategy\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external\n        view\n        override\n        returns (\n            bool,\n            uint256,\n            uint256\n        )\n    {\n        //Confirm all information are matched and valid within the time period for fixed price\n        return (\n            ((makerAsk.price == takerBid.price) &&\n                (makerAsk.tokenId == takerBid.tokenId) &&\n                (makerAsk.startTime <= block.timestamp) &&\n                (makerAsk.endTime >= block.timestamp)),\n            makerAsk.tokenId,\n            makerAsk.amount\n        );\n    }\n\n    //\n    // function viewProtocolFee\n    //  @Description: Return platform transaction fee\n    //  @return external\n    //\n    function viewProtocolFee() external view override returns (uint256) {\n        return PROTOCOL_FEE;\n    }\n}\n"
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {OrderTypes} from \"../../../libraries/OrderTypes.sol\";\n\ninterface TheExStrategy {\n    function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function viewProtocolFee() external view returns (uint256);\n}\n"
			},
			"contracts/libraries/OrderTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n//—————————————————————————————————Order Structure—————————————————————————————————\nlibrary OrderTypes {\n    // keccak256(\"MakerOrder(bool isOrderAsk,address signer,address collection,uint256 price,uint256 tokenId,uint256 amount,address strategy,address currency,uint256 nonce,uint256 startTime,uint256 endTime,uint256 minPercentageToAsk,bytes params)\")\n    bytes32 internal constant MAKER_ORDER_HASH = 0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028;\n\n    struct MakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address signer; // signer of the maker order\n        address collection; // collection address\n        uint256 price; // price (used as )\n        uint256 tokenId; // id of the token\n        uint256 amount; // amount of tokens to sell/purchase (must be 1 for ERC721, 1+ for ERC1155)\n        address strategy; // strategy for trade execution (e.g., DutchAuction, StandardSaleForFixedPrice)\n        address currency; // currency (e.g., WETH)\n        uint256 nonce; // order nonce (must be unique unless new maker order is meant to override existing one e.g., lower ask price)\n        uint256 startTime; // startTime in timestamp\n        uint256 endTime; // endTime in timestamp\n        uint256 minPercentageToAsk; // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // additional parameters\n        uint8 v; // v: parameter (27 or 28)\n        bytes32 r; // r: parameter\n        bytes32 s; // s: parameter\n    }\n\n    struct TakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address taker; // msg.sender\n        uint256 price; // final price for the purchase\n        uint256 tokenId;\n        uint256 minPercentageToAsk; // // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // other params (e.g., tokenId)\n    }\n\n\n    function hash(MakerOrder memory makerOrder) internal pure returns (bytes32) {\n        return\n        keccak256(\n            abi.encode(\n                MAKER_ORDER_HASH,\n                makerOrder.isOrderAsk,\n                makerOrder.signer,\n                makerOrder.collection,\n                makerOrder.price,\n                makerOrder.tokenId,\n                makerOrder.amount,\n                makerOrder.strategy,\n                makerOrder.currency,\n                makerOrder.nonce,\n                makerOrder.startTime,\n                makerOrder.endTime,\n                makerOrder.minPercentageToAsk,\n                keccak256(makerOrder.params)\n            )\n        );\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Manager/execution/StrategySpriceHana.sol": {
				"StrategyFixedPrice": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_protocolFee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "PROTOCOL_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "canExecuteBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "canExecuteSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_protocolFee": "protocol fee (200 --> 2%, 400 --> 4%)"
								}
							}
						},
						"title": "StrategyStandardSaleForFixedPrice",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":345:2612  contract StrategyFixedPrice is TheExStrategy {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":548:626  constructor(uint256 _protocolFee) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":592:619  PROTOCOL_FEE = _protocolFee */\n  0x80\n  mstore\n    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":345:2612  contract StrategyFixedPrice is TheExStrategy {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/Manager/execution/StrategySpriceHana.sol\":345:2612  contract StrategyFixedPrice is TheExStrategy {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":345:2612  contract StrategyFixedPrice is TheExStrategy {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0b4501fd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2a75ffee\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9dd1cda6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd310677d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":396:433  uint256 public immutable PROTOCOL_FEE */\n    tag_3:\n      tag_7\n      immutable(\"0x1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac\")\n      dup2\n      jump\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":396:433  uint256 public immutable PROTOCOL_FEE */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":822:1532  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_4:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1099:1113   */\n      swap4\n      iszero\n        /* \"#utility.yul\":1092:1114   */\n      iszero\n        /* \"#utility.yul\":1074:1115   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1146:1148   */\n      0x20\n        /* \"#utility.yul\":1131:1149   */\n      dup5\n      add\n        /* \"#utility.yul\":1124:1158   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1174:1192   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1167:1201   */\n      mstore\n        /* \"#utility.yul\":1062:1064   */\n      0x60\n        /* \"#utility.yul\":1047:1065   */\n      add\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":822:1532  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n      tag_9\n        /* \"#utility.yul\":878:1207   */\n      jump\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2506:2610  function viewProtocolFee() external view override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2591:2603  PROTOCOL_FEE */\n      immutable(\"0x1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac\")\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2506:2610  function viewProtocolFee() external view override returns (uint256) {... */\n      jump(tag_7)\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1719:2375  function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_6:\n      tag_11\n      tag_21\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":822:1532  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_14:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1004:1008  bool */\n      0x00\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1022:1029  uint256 */\n      dup1\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1043:1050  uint256 */\n      0x00\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1215:1223  takerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1215:1229  takerAsk.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1197:1205  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1197:1211  makerBid.price */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1197:1229  makerBid.price == takerAsk.price */\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1196:1288  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_25\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1271:1279  takerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1271:1287  takerAsk.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1251:1259  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1251:1267  makerBid.tokenId */\n      0x80\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1251:1287  makerBid.tokenId == takerAsk.tokenId */\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1196:1288  (makerBid.price == takerAsk.price) &&... */\n    tag_25:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1196:1347  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_26\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1331:1346  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1309:1317  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1309:1327  makerBid.startTime */\n      0x0120\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1309:1346  makerBid.startTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1196:1347  (makerBid.price == takerAsk.price) &&... */\n    tag_26:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1196:1404  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_27\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1388:1403  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1368:1376  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1368:1384  makerBid.endTime */\n      0x0140\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1368:1403  makerBid.endTime >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1196:1404  (makerBid.price == takerAsk.price) &&... */\n    tag_27:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1196:1455  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_28\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1453:1454  9 */\n      0x09\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1423:1442  makerBid.collection */\n      tag_29\n      0x60\n      dup7\n      add\n      0x40\n      dup8\n      add\n      tag_30\n      jump\t// in\n    tag_29:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1423:1455  makerBid.collection ==address(9) */\n      and\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1196:1455  (makerBid.price == takerAsk.price) &&... */\n    tag_28:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1187:1525  return (((makerBid.price == takerAsk.price) &&... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1470:1486  makerBid.tokenId */\n      0x80\n      dup3\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1500:1515  makerBid.amount */\n      0xa0\n      dup4\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":822:1532  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1719:2375  function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_22:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1902:1906  bool */\n      0x00\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1920:1927  uint256 */\n      dup1\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1941:1948  uint256 */\n      0x00\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2109:2117  takerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2109:2123  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2091:2099  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2091:2105  makerAsk.price */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2091:2123  makerAsk.price == takerBid.price */\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2090:2182  (makerAsk.price == takerBid.price) &&... */\n      dup1\n      iszero\n      tag_33\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2165:2173  takerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2165:2181  takerBid.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2145:2153  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2145:2161  makerAsk.tokenId */\n      0x80\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2145:2181  makerAsk.tokenId == takerBid.tokenId */\n      eq\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2090:2182  (makerAsk.price == takerBid.price) &&... */\n    tag_33:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2090:2241  (makerAsk.price == takerBid.price) &&... */\n      dup1\n      iszero\n      tag_34\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2225:2240  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2203:2211  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2203:2221  makerAsk.startTime */\n      0x0120\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2203:2240  makerAsk.startTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2090:2241  (makerAsk.price == takerBid.price) &&... */\n    tag_34:\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2090:2298  (makerAsk.price == takerBid.price) &&... */\n      dup1\n      iszero\n      tag_28\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2282:2297  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2262:2270  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2262:2278  makerAsk.endTime */\n      0x0140\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2262:2297  makerAsk.endTime >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2068:2368  return (... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2313:2329  makerAsk.tokenId */\n      0x80\n      dup3\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":2343:2358  makerAsk.amount */\n      0xa0\n      dup4\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategySpriceHana.sol\":1719:2375  function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":196:873   */\n    tag_13:\n        /* \"#utility.yul\":322:328   */\n      0x00\n        /* \"#utility.yul\":330:336   */\n      dup1\n        /* \"#utility.yul\":383:385   */\n      0x40\n        /* \"#utility.yul\":371:380   */\n      dup4\n        /* \"#utility.yul\":362:369   */\n      dup6\n        /* \"#utility.yul\":358:381   */\n      sub\n        /* \"#utility.yul\":354:386   */\n      slt\n        /* \"#utility.yul\":351:403   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":399:400   */\n      0x00\n        /* \"#utility.yul\":396:397   */\n      dup1\n        /* \"#utility.yul\":389:401   */\n      revert\n        /* \"#utility.yul\":351:403   */\n    tag_39:\n        /* \"#utility.yul\":439:448   */\n      dup3\n        /* \"#utility.yul\":426:449   */\n      calldataload\n        /* \"#utility.yul\":468:486   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":509:511   */\n      dup1\n        /* \"#utility.yul\":501:507   */\n      dup3\n        /* \"#utility.yul\":498:512   */\n      gt\n        /* \"#utility.yul\":495:529   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":522:523   */\n      dup1\n        /* \"#utility.yul\":515:527   */\n      revert\n        /* \"#utility.yul\":495:529   */\n    tag_40:\n        /* \"#utility.yul\":548:570   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":604:607   */\n      0xc0\n        /* \"#utility.yul\":586:602   */\n      dup3\n      dup8\n      sub\n        /* \"#utility.yul\":582:608   */\n      slt\n        /* \"#utility.yul\":579:625   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":621:622   */\n      0x00\n        /* \"#utility.yul\":618:619   */\n      dup1\n        /* \"#utility.yul\":611:623   */\n      revert\n        /* \"#utility.yul\":579:625   */\n    tag_41:\n        /* \"#utility.yul\":644:646   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":699:701   */\n      0x20\n        /* \"#utility.yul\":684:702   */\n      dup5\n      add\n        /* \"#utility.yul\":671:703   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":715:731   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":712:748   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":744:745   */\n      0x00\n        /* \"#utility.yul\":741:742   */\n      dup1\n        /* \"#utility.yul\":734:746   */\n      revert\n        /* \"#utility.yul\":712:748   */\n    tag_42:\n      pop\n        /* \"#utility.yul\":767:791   */\n      dup4\n      add\n        /* \"#utility.yul\":825:828   */\n      0x0200\n        /* \"#utility.yul\":807:823   */\n      dup2\n      dup7\n      sub\n        /* \"#utility.yul\":803:829   */\n      slt\n        /* \"#utility.yul\":800:846   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":842:843   */\n      0x00\n        /* \"#utility.yul\":839:840   */\n      dup1\n        /* \"#utility.yul\":832:844   */\n      revert\n        /* \"#utility.yul\":800:846   */\n    tag_43:\n        /* \"#utility.yul\":865:867   */\n      dup1\n        /* \"#utility.yul\":855:867   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":196:873   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1212:1498   */\n    tag_30:\n        /* \"#utility.yul\":1271:1277   */\n      0x00\n        /* \"#utility.yul\":1324:1326   */\n      0x20\n        /* \"#utility.yul\":1312:1321   */\n      dup3\n        /* \"#utility.yul\":1303:1310   */\n      dup5\n        /* \"#utility.yul\":1299:1322   */\n      sub\n        /* \"#utility.yul\":1295:1327   */\n      slt\n        /* \"#utility.yul\":1292:1344   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":1340:1341   */\n      0x00\n        /* \"#utility.yul\":1337:1338   */\n      dup1\n        /* \"#utility.yul\":1330:1342   */\n      revert\n        /* \"#utility.yul\":1292:1344   */\n    tag_46:\n        /* \"#utility.yul\":1366:1389   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1418:1449   */\n      dup2\n      and\n        /* \"#utility.yul\":1408:1450   */\n      dup2\n      eq\n        /* \"#utility.yul\":1398:1468   */\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1461:1462   */\n      dup1\n        /* \"#utility.yul\":1454:1466   */\n      revert\n        /* \"#utility.yul\":1398:1468   */\n    tag_47:\n        /* \"#utility.yul\":1487:1492   */\n      swap4\n        /* \"#utility.yul\":1212:1498   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f513a645fa7449006acb18ddea0bf142440ec5aaa8cb8ddeeb697f80d0d9ac7664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 55,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:200:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:3"
															},
															"nodeType": "YulIf",
															"src": "105:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:3",
														"type": ""
													}
												],
												"src": "14:184:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161031538038061031583398101604081905261002f91610037565b608052610050565b60006020828403121561004957600080fd5b5051919050565b6080516102a5610070600039600081816056015260bd01526102a56000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b4501fd146100515780632a75ffee1461008b5780639dd1cda6146100bb578063d310677d146100e1575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61009e6100993660046101cb565b6100f4565b604080519315158452602084019290925290820152606001610082565b7f0000000000000000000000000000000000000000000000000000000000000000610078565b61009e6100ef3660046101cb565b610172565b600080600084604001358460600135148015610117575084606001358460800135145b801561012857504284610120013511155b801561013957504284610140013510155b801561015d57506009610152606086016040870161023f565b6001600160a01b0316145b92505050608082013560a08301359250925092565b600080600084604001358460600135148015610195575084606001358460800135145b80156101a657504284610120013511155b801561015d575042846101400135101592505050608082013560a08301359250925092565b600080604083850312156101de57600080fd5b823567ffffffffffffffff808211156101f657600080fd5b9084019060c0828703121561020a57600080fd5b9092506020840135908082111561022057600080fd5b508301610200818603121561023457600080fd5b809150509250929050565b60006020828403121561025157600080fd5b81356001600160a01b038116811461026857600080fd5b939250505056fea2646970667358221220f513a645fa7449006acb18ddea0bf142440ec5aaa8cb8ddeeb697f80d0d9ac7664736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x315 CODESIZE SUB DUP1 PUSH2 0x315 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x37 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH2 0x50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2A5 PUSH2 0x70 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x56 ADD MSTORE PUSH1 0xBD ADD MSTORE PUSH2 0x2A5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB4501FD EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2A75FFEE EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x9DD1CDA6 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xD310677D EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x82 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x78 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xEF CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x117 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x128 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x139 JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15D JUMPI POP PUSH1 0x9 PUSH2 0x152 PUSH1 0x60 DUP7 ADD PUSH1 0x40 DUP8 ADD PUSH2 0x23F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x195 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1A6 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15D JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SGT 0xA6 GASLIMIT STATICCALL PUSH21 0x49006ACB18DDEA0BF142440EC5AAA8CB8DDEEB697F DUP1 0xD0 0xD9 0xAC PUSH23 0x64736F6C63430008110033000000000000000000000000 ",
							"sourceMap": "345:2267:0:-:0;;;548:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;592:27;;345:2267;;14:184:3;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:3;;14:184;-1:-1:-1;14:184:3:o;:::-;345:2267:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PROTOCOL_FEE_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@canExecuteBuy_80": {
									"entryPoint": 244,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@canExecuteSell_131": {
									"entryPoint": 370,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@viewProtocolFee_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_TakerOrder_$232_calldata_ptrt_struct$_MakerOrder_$219_calldata_ptr": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1500:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "341:532:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "387:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "396:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "399:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "389:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "389:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "389:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "383:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "354:32:3"
															},
															"nodeType": "YulIf",
															"src": "351:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "412:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "439:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "426:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "426:23:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "416:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "458:28:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "468:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "462:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "513:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "515:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "515:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "501:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "509:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "498:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:14:3"
															},
															"nodeType": "YulIf",
															"src": "495:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "538:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "552:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "563:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "548:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "542:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "609:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "618:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "621:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "611:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "611:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "611:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "590:7:3"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "599:2:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "586:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "586:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:3:3",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "582:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:26:3"
															},
															"nodeType": "YulIf",
															"src": "579:46:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "634:12:3",
															"value": {
																"name": "_2",
																"nodeType": "YulIdentifier",
																"src": "644:2:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "634:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "688:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "699:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "684:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "684:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "671:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:32:3"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "659:8:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "732:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "741:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "734:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "734:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "734:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "718:8:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "728:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "715:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "715:16:3"
															},
															"nodeType": "YulIf",
															"src": "712:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "757:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "771:9:3"
																	},
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "782:8:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:24:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "761:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "839:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "842:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "832:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "832:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:3"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "820:2:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:3:3",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:26:3"
															},
															"nodeType": "YulIf",
															"src": "800:46:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "855:12:3",
															"value": {
																"name": "_3",
																"nodeType": "YulIdentifier",
																"src": "865:2:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_TakerOrder_$232_calldata_ptrt_struct$_MakerOrder_$219_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "299:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "310:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "322:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "330:6:3",
														"type": ""
													}
												],
												"src": "196:677:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1029:178:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1039:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1051:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1062:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1047:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1039:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1106:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1099:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1099:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1092:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1092:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1074:41:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1135:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1146:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1151:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1124:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1124:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1178:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1189:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1174:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1174:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1194:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1167:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "982:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "993:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1001:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1009:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1020:4:3",
														"type": ""
													}
												],
												"src": "878:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1282:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1328:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1337:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1340:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1330:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1330:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1330:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1303:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1312:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1299:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1299:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1295:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1295:32:3"
															},
															"nodeType": "YulIf",
															"src": "1292:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1353:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1379:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1357:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1452:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1454:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1454:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1454:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1411:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1422:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1437:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1442:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1433:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1433:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1446:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1429:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1429:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1418:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1418:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1408:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1408:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:50:3"
															},
															"nodeType": "YulIf",
															"src": "1398:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1487:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1248:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1259:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1271:6:3",
														"type": ""
													}
												],
												"src": "1212:286:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_TakerOrder_$232_calldata_ptrt_struct$_MakerOrder_$219_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 192) { revert(0, 0) }\n        value0 := _2\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if slt(sub(dataEnd, _3), 512) { revert(0, 0) }\n        value1 := _3\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"10": [
									{
										"length": 32,
										"start": 86
									},
									{
										"length": 32,
										"start": 189
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b4501fd146100515780632a75ffee1461008b5780639dd1cda6146100bb578063d310677d146100e1575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61009e6100993660046101cb565b6100f4565b604080519315158452602084019290925290820152606001610082565b7f0000000000000000000000000000000000000000000000000000000000000000610078565b61009e6100ef3660046101cb565b610172565b600080600084604001358460600135148015610117575084606001358460800135145b801561012857504284610120013511155b801561013957504284610140013510155b801561015d57506009610152606086016040870161023f565b6001600160a01b0316145b92505050608082013560a08301359250925092565b600080600084604001358460600135148015610195575084606001358460800135145b80156101a657504284610120013511155b801561015d575042846101400135101592505050608082013560a08301359250925092565b600080604083850312156101de57600080fd5b823567ffffffffffffffff808211156101f657600080fd5b9084019060c0828703121561020a57600080fd5b9092506020840135908082111561022057600080fd5b508301610200818603121561023457600080fd5b809150509250929050565b60006020828403121561025157600080fd5b81356001600160a01b038116811461026857600080fd5b939250505056fea2646970667358221220f513a645fa7449006acb18ddea0bf142440ec5aaa8cb8ddeeb697f80d0d9ac7664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB4501FD EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2A75FFEE EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x9DD1CDA6 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xD310677D EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x82 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x78 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xEF CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x117 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x128 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x139 JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15D JUMPI POP PUSH1 0x9 PUSH2 0x152 PUSH1 0x60 DUP7 ADD PUSH1 0x40 DUP8 ADD PUSH2 0x23F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x195 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1A6 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15D JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SGT 0xA6 GASLIMIT STATICCALL PUSH21 0x49006ACB18DDEA0BF142440EC5AAA8CB8DDEEB697F DUP1 0xD0 0xD9 0xAC PUSH23 0x64736F6C63430008110033000000000000000000000000 ",
							"sourceMap": "345:2267:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;396:37;;;;;;;;160:25:3;;;148:2;133:18;396:37:0;;;;;;;;822:710;;;;;;:::i;:::-;;:::i;:::-;;;;1099:14:3;;1092:22;1074:41;;1146:2;1131:18;;1124:34;;;;1174:18;;;1167:34;1062:2;1047:18;822:710:0;878:329:3;2506:104:0;2591:12;2506:104;;1719:656;;;;;;:::i;:::-;;:::i;822:710::-;1004:4;1022:7;1043;1215:8;:14;;;1197:8;:14;;;:32;1196:92;;;;;1271:8;:16;;;1251:8;:16;;;:36;1196:92;:151;;;;;1331:15;1309:8;:18;;;:37;;1196:151;:208;;;;;1388:15;1368:8;:16;;;:35;;1196:208;:259;;;;-1:-1:-1;1453:1:0;1423:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1423:32:0;;1196:259;1187:338;-1:-1:-1;;;1470:16:0;;;;1500:15;;;;822:710;;;;;:::o;1719:656::-;1902:4;1920:7;1941;2109:8;:14;;;2091:8;:14;;;:32;2090:92;;;;;2165:8;:16;;;2145:8;:16;;;:36;2090:92;:151;;;;;2225:15;2203:8;:18;;;:37;;2090:151;:208;;;;;2282:15;2262:8;:16;;;:35;;2068:300;-1:-1:-1;;;2313:16:0;;;;2343:15;;;;1719:656;;;;;:::o;196:677:3:-;322:6;330;383:2;371:9;362:7;358:23;354:32;351:52;;;399:1;396;389:12;351:52;439:9;426:23;468:18;509:2;501:6;498:14;495:34;;;525:1;522;515:12;495:34;548:22;;;;604:3;586:16;;;582:26;579:46;;;621:1;618;611:12;579:46;644:2;;-1:-1:-1;699:2:3;684:18;;671:32;;715:16;;;712:36;;;744:1;741;734:12;712:36;-1:-1:-1;767:24:3;;825:3;807:16;;;803:26;800:46;;;842:1;839;832:12;800:46;865:2;855:12;;;196:677;;;;;:::o;1212:286::-;1271:6;1324:2;1312:9;1303:7;1299:23;1295:32;1292:52;;;1340:1;1337;1330:12;1292:52;1366:23;;-1:-1:-1;;;;;1418:31:3;;1408:42;;1398:70;;1464:1;1461;1454:12;1398:70;1487:5;1212:286;-1:-1:-1;;;1212:286:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "135400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"PROTOCOL_FEE()": "infinite",
								"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "904",
								"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "765",
								"viewProtocolFee()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 548,
									"end": 626,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 548,
									"end": 626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 548,
									"end": 626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 548,
									"end": 626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 548,
									"end": 626,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 548,
									"end": 626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 548,
									"end": 626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 548,
									"end": 626,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 548,
									"end": 626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 592,
									"end": 619,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 592,
									"end": 619,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 2612,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f513a645fa7449006acb18ddea0bf142440ec5aaa8cb8ddeeb697f80d0d9ac7664736f6c63430008110033",
									".code": [
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "B4501FD"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "2A75FFEE"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "9DD1CDA6"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "D310677D"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 2612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 396,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 433,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 822,
											"end": 1532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 822,
											"end": 1532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1113,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1113,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1149,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1158,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1158,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1158,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1201,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1064,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1047,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 878,
											"end": 1207,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2610,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2506,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2506,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2506,
											"end": 2610,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1719,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1719,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1196,
											"end": 1288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1271,
											"end": 1287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1287,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1267,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1251,
											"end": 1267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1267,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1288,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1196,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1196,
											"end": 1347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1317,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1346,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1196,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1196,
											"end": 1404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1384,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1368,
											"end": 1384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1384,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1403,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1404,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1196,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1196,
											"end": 1455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1423,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1423,
											"end": 1455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1455,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1196,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1470,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1470,
											"end": 1486,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1486,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 1500,
											"end": 1515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1515,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2117,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2099,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2182,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2090,
											"end": 2182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2173,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2153,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2145,
											"end": 2161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2161,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2181,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2182,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2090,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2090,
											"end": 2241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2240,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2211,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2240,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2241,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2090,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2090,
											"end": 2298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2297,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2262,
											"end": 2278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2278,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2297,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2358,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 2343,
											"end": 2358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2358,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 873,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 196,
											"end": 873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 322,
											"end": 328,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 336,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 383,
											"end": 385,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 380,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 362,
											"end": 369,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 358,
											"end": 381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 354,
											"end": 386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 351,
											"end": 403,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 351,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 351,
											"end": 403,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 399,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 397,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 401,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 351,
											"end": 403,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 351,
											"end": 403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 426,
											"end": 449,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 509,
											"end": 511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 507,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 498,
											"end": 512,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 495,
											"end": 529,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 495,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 529,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 527,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 495,
											"end": 529,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 548,
											"end": 570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 548,
											"end": 570,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 548,
											"end": 570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 548,
											"end": 570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 604,
											"end": 607,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 586,
											"end": 602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 586,
											"end": 602,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 586,
											"end": 602,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 582,
											"end": 608,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 579,
											"end": 625,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 579,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 579,
											"end": 625,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 621,
											"end": 622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 619,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 611,
											"end": 623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 579,
											"end": 625,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 579,
											"end": 625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 644,
											"end": 646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 644,
											"end": 646,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 671,
											"end": 703,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 671,
											"end": 703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 715,
											"end": 731,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 715,
											"end": 731,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 715,
											"end": 731,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 712,
											"end": 748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 712,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 712,
											"end": 748,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 744,
											"end": 745,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 742,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 746,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 712,
											"end": 748,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 712,
											"end": 748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 767,
											"end": 791,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 767,
											"end": 791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 825,
											"end": 828,
											"name": "PUSH",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 807,
											"end": 823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 807,
											"end": 823,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 807,
											"end": 823,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 803,
											"end": 829,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 800,
											"end": 846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 800,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 800,
											"end": 846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 832,
											"end": 844,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 800,
											"end": 846,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 800,
											"end": 846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 865,
											"end": 867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 855,
											"end": 867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 855,
											"end": 867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 855,
											"end": 867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 196,
											"end": 873,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 196,
											"end": 873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 196,
											"end": 873,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 196,
											"end": 873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 196,
											"end": 873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 196,
											"end": 873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1498,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1212,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1312,
											"end": 1321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1310,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1322,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1295,
											"end": 1327,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1292,
											"end": 1344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1292,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1292,
											"end": 1344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1342,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1292,
											"end": 1344,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1292,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1389,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1449,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1450,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1450,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1398,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1398,
											"end": 1468,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1466,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1398,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1398,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1498,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1212,
											"end": 1498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/Manager/execution/StrategySpriceHana.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/libraries/OrderTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"PROTOCOL_FEE()": "0b4501fd",
							"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "2a75ffee",
							"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "d310677d",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"canExecuteBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"canExecuteSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_protocolFee\":\"protocol fee (200 --> 2%, 400 --> 4%)\"}}},\"title\":\"StrategyStandardSaleForFixedPrice\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"}},\"notice\":\"Strategy that executes an order at a fixed price that can be taken either by a bid or an ask.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/execution/StrategySpriceHana.sol\":\"StrategyFixedPrice\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/execution/StrategySpriceHana.sol\":{\"keccak256\":\"0x6e24e452b9d41ca2daffbbed6def27b64e9f2d94a4daf0fbbb68655c66223292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71d16308c68a72763a94863d513c67de3185b4fc131d9c242c8fa68612769dd6\",\"dweb:/ipfs/QmcanMdLkKJivJViTSgd2VSeJv4QNK6GPoixct6cdqinmk\"]},\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor"
							}
						},
						"notice": "Strategy that executes an order at a fixed price that can be taken either by a bid or an ask.",
						"version": 1
					}
				}
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"TheExStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "canExecuteBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "canExecuteSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "2a75ffee",
							"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "d310677d",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"canExecuteBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"canExecuteSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":\"TheExStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/OrderTypes.sol": {
				"OrderTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAE 0xE3 LOG2 STOP SWAP8 INVALID 0xC3 0xD7 0x27 LOG4 0xAC 0x2F 0xAF 0xE0 0x23 0xDD 0xD1 OR PUSH19 0xFBF882AC4BCB4DF06EB4AF1864736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;273:2505:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAE 0xE3 LOG2 STOP SWAP8 INVALID 0xC3 0xD7 0x27 LOG4 0xAC 0x2F 0xAF 0xE0 0x23 0xDD 0xD1 OR PUSH19 0xFBF882AC4BCB4DF06EB4AF1864736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"hash(struct OrderTypes.MakerOrder memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
									".code": [
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/Manager/execution/StrategySpriceHana.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/libraries/OrderTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/OrderTypes.sol\":\"OrderTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Manager/execution/StrategySpriceHana.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/execution/StrategySpriceHana.sol",
					"exportedSymbols": {
						"OrderTypes": [
							277
						],
						"StrategyFixedPrice": [
							141
						],
						"TheExStrategy": [
							181
						]
					},
					"id": 142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../libraries/OrderTypes.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 142,
							"sourceUnit": 278,
							"src": "57:58:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 277,
										"src": "65:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
							"file": "./interface/TheExecutionStrategy.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 142,
							"sourceUnit": 182,
							"src": "116:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "TheExStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 181,
										"src": "124:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "TheExStrategy",
										"nameLocations": [
											"376:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 181,
										"src": "376:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "376:13:0"
								}
							],
							"canonicalName": "StrategyFixedPrice",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "185:159:0",
								"text": " @title StrategyStandardSaleForFixedPrice\n @notice Strategy that executes an order at a fixed price that\n can be taken either by a bid or an ask."
							},
							"fullyImplemented": true,
							"id": 141,
							"linearizedBaseContracts": [
								141,
								181
							],
							"name": "StrategyFixedPrice",
							"nameLocation": "354:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0b4501fd",
									"id": 10,
									"mutability": "immutable",
									"name": "PROTOCOL_FEE",
									"nameLocation": "421:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "396:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "396:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "582:44:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "PROTOCOL_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "592:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 17,
														"name": "_protocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "607:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "592:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "592:27:0"
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "440:103:0",
										"text": " @notice Constructor\n @param _protocolFee protocol fee (200 --> 2%, 400 --> 4%)"
									},
									"id": 21,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "_protocolFee",
												"nameLocation": "568:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "560:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:0:0"
									},
									"scope": 141,
									"src": "548:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										160
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1065:467:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 56,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 49,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 41,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 37,
																									"name": "makerBid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 27,
																									"src": "1197:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																										"typeString": "struct OrderTypes.MakerOrder calldata"
																									}
																								},
																								"id": 38,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1206:5:0",
																								"memberName": "price",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 194,
																								"src": "1197:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"expression": {
																									"id": 39,
																									"name": "takerAsk",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 24,
																									"src": "1215:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TakerOrder_$232_calldata_ptr",
																										"typeString": "struct OrderTypes.TakerOrder calldata"
																									}
																								},
																								"id": 40,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1224:5:0",
																								"memberName": "price",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 225,
																								"src": "1215:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1197:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 42,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1196:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 47,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 43,
																									"name": "makerBid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 27,
																									"src": "1251:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																										"typeString": "struct OrderTypes.MakerOrder calldata"
																									}
																								},
																								"id": 44,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1260:7:0",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "1251:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"expression": {
																									"id": 45,
																									"name": "takerAsk",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 24,
																									"src": "1271:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TakerOrder_$232_calldata_ptr",
																										"typeString": "struct OrderTypes.TakerOrder calldata"
																									}
																								},
																								"id": 46,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1280:7:0",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 227,
																								"src": "1271:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1251:36:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 48,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1250:38:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "1196:92:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 54,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 50,
																								"name": "makerBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 27,
																								"src": "1309:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																									"typeString": "struct OrderTypes.MakerOrder calldata"
																								}
																							},
																							"id": 51,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1318:9:0",
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 206,
																							"src": "1309:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"expression": {
																								"id": 52,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "1331:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 53,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1337:9:0",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "1331:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1309:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 55,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1308:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "1196:151:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 61,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 57,
																							"name": "makerBid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 27,
																							"src": "1368:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																								"typeString": "struct OrderTypes.MakerOrder calldata"
																							}
																						},
																						"id": 58,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1377:7:0",
																						"memberName": "endTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 208,
																						"src": "1368:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"expression": {
																							"id": 59,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "1388:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 60,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1394:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "1388:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1368:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 62,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1367:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1196:208:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 64,
																				"name": "makerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "1423:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																					"typeString": "struct OrderTypes.MakerOrder calldata"
																				}
																			},
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1432:10:0",
																			"memberName": "collection",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 192,
																			"src": "1423:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "39",
																					"id": 68,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1453:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_9_by_1",
																						"typeString": "int_const 9"
																					},
																					"value": "9"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_9_by_1",
																						"typeString": "int_const 9"
																					}
																				],
																				"id": 67,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1445:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 66,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1445:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1445:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1423:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1196:259:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 72,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1195:261:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 73,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1470:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1479:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "1470:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 75,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1500:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1509:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 198,
															"src": "1500:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 77,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1194:331:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"functionReturnParameters": 36,
												"id": 78,
												"nodeType": "Return",
												"src": "1187:338:0"
											}
										]
									},
									"functionSelector": "2a75ffee",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteBuy",
									"nameLocation": "831:13:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 29,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "965:8:0"
									},
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "876:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "845:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$232_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 23,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 22,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"845:10:0",
															"856:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "845:21:0"
													},
													"referencedDeclaration": 232,
													"src": "845:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$232_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "917:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "886:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 26,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 25,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"886:10:0",
															"897:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 219,
														"src": "886:21:0"
													},
													"referencedDeclaration": 219,
													"src": "886:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$219_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:82:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1004:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1022:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:70:0"
									},
									"scope": 141,
									"src": "822:710:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										175
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1963:412:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 96,
																								"name": "makerAsk",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 86,
																								"src": "2091:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																									"typeString": "struct OrderTypes.MakerOrder calldata"
																								}
																							},
																							"id": 97,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2100:5:0",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 194,
																							"src": "2091:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 98,
																								"name": "takerBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 83,
																								"src": "2109:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TakerOrder_$232_calldata_ptr",
																									"typeString": "struct OrderTypes.TakerOrder calldata"
																								}
																							},
																							"id": 99,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2118:5:0",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 225,
																							"src": "2109:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2091:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 101,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2090:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 106,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 102,
																								"name": "makerAsk",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 86,
																								"src": "2145:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																									"typeString": "struct OrderTypes.MakerOrder calldata"
																								}
																							},
																							"id": 103,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2154:7:0",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 196,
																							"src": "2145:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 104,
																								"name": "takerBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 83,
																								"src": "2165:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TakerOrder_$232_calldata_ptr",
																									"typeString": "struct OrderTypes.TakerOrder calldata"
																								}
																							},
																							"id": 105,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2174:7:0",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 227,
																							"src": "2165:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2145:36:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 107,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2144:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2090:92:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 113,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 109,
																							"name": "makerAsk",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 86,
																							"src": "2203:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																								"typeString": "struct OrderTypes.MakerOrder calldata"
																							}
																						},
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2212:9:0",
																						"memberName": "startTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 206,
																						"src": "2203:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"id": 111,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "2225:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 112,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2231:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "2225:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2203:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2202:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2090:151:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 116,
																						"name": "makerAsk",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 86,
																						"src": "2262:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																							"typeString": "struct OrderTypes.MakerOrder calldata"
																						}
																					},
																					"id": 117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2271:7:0",
																					"memberName": "endTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 208,
																					"src": "2262:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"expression": {
																						"id": 118,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "2282:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 119,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2288:9:0",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "2282:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2262:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 121,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2261:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2090:208:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 123,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2089:210:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 124,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2313:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2322:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "2313:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 126,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2343:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2352:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 198,
															"src": "2343:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 128,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2075:293:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"functionReturnParameters": 95,
												"id": 129,
												"nodeType": "Return",
												"src": "2068:300:0"
											}
										]
									},
									"functionSelector": "d310677d",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteSell",
									"nameLocation": "1728:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 88,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1863:8:0"
									},
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "1774:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1743:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$232_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 82,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 81,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"1743:10:0",
															"1754:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1743:21:0"
													},
													"referencedDeclaration": 232,
													"src": "1743:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$232_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "1815:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1784:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 85,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 84,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"1784:10:0",
															"1795:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 219,
														"src": "1784:21:0"
													},
													"referencedDeclaration": 219,
													"src": "1784:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$219_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:82:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1902:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1902:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1920:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1941:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:70:0"
									},
									"scope": 141,
									"src": "1719:656:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										180
									],
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "2574:36:0",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "PROTOCOL_FEE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2591:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "2584:19:0"
											}
										]
									},
									"functionSelector": "9dd1cda6",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "2515:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2547:8:0"
									},
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2530:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2565:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:9:0"
									},
									"scope": 141,
									"src": "2506:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 142,
							"src": "345:2267:0",
							"usedErrors": []
						}
					],
					"src": "32:2581:0"
				},
				"id": 0
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
					"exportedSymbols": {
						"OrderTypes": [
							277
						],
						"TheExStrategy": [
							181
						]
					},
					"id": 182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../../libraries/OrderTypes.sol",
							"id": 145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 182,
							"sourceUnit": 278,
							"src": "57:61:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 144,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 277,
										"src": "65:10:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheExStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 181,
							"linearizedBaseContracts": [
								181
							],
							"name": "TheExStrategy",
							"nameLocation": "130:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2a75ffee",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteBuy",
									"nameLocation": "159:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "204:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "173:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$232_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 146,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"173:10:1",
															"184:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "173:21:1"
													},
													"referencedDeclaration": 232,
													"src": "173:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$232_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "245:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "214:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 149,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"214:10:1",
															"225:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 219,
														"src": "214:21:1"
													},
													"referencedDeclaration": 219,
													"src": "214:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$219_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:82:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "315:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "315:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "333:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "354:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:70:1"
									},
									"scope": 181,
									"src": "150:222:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d310677d",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteSell",
									"nameLocation": "387:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "433:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "402:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$232_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 161,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"402:10:1",
															"413:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "402:21:1"
													},
													"referencedDeclaration": 232,
													"src": "402:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$232_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "474:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "443:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$219_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 164,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"443:10:1",
															"454:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 219,
														"src": "443:21:1"
													},
													"referencedDeclaration": 219,
													"src": "443:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$219_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:82:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "544:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "562:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "583:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:70:1"
									},
									"scope": 181,
									"src": "378:223:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dd1cda6",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "616:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "657:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:1"
									},
									"scope": 181,
									"src": "607:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 182,
							"src": "120:548:1",
							"usedErrors": []
						}
					],
					"src": "32:637:1"
				},
				"id": 1
			},
			"contracts/libraries/OrderTypes.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/OrderTypes.sol",
					"exportedSymbols": {
						"OrderTypes": [
							277
						]
					},
					"id": 278,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OrderTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 277,
							"linearizedBaseContracts": [
								277
							],
							"name": "OrderTypes",
							"nameLocation": "281:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 186,
									"mutability": "constant",
									"name": "MAKER_ORDER_HASH",
									"nameLocation": "573:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "547:111:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 184,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834303236316164653533326661316432633732393364663330616161646239623363363136666165353235613062353664336434313163383431613835303238",
										"id": 185,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "592:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_29015347937064319049656096072445641795799588500519861140121276013747802492968_by_1",
											"typeString": "int_const 2901...(69 digits omitted)...2968"
										},
										"value": "0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "OrderTypes.MakerOrder",
									"id": 219,
									"members": [
										{
											"constant": false,
											"id": 188,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "698:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "693:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 187,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "693:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 190,
											"mutability": "mutable",
											"name": "signer",
											"nameLocation": "758:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "750:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 189,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "750:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 192,
											"mutability": "mutable",
											"name": "collection",
											"nameLocation": "811:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "803:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 191,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "803:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 194,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "861:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "853:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 193,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "853:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "904:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "896:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 195,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 198,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "948:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "940:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 197,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "940:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 200,
											"mutability": "mutable",
											"name": "strategy",
											"nameLocation": "1048:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1040:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 199,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1040:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 202,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "1154:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1146:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 201,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1146:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1205:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1197:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 203,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1197:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 206,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1339:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1331:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 205,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 208,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "1392:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1384:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 207,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1384:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 210,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1441:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1433:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 209,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1433:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "1551:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1545:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 211,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1545:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "1598:1:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1592:7:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 213,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1592:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "1644:1:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1636:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 215,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1636:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 218,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "1679:1:2",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "1671:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 217,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1671:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MakerOrder",
									"nameLocation": "672:10:2",
									"nodeType": "StructDefinition",
									"scope": 277,
									"src": "665:1038:2",
									"visibility": "public"
								},
								{
									"canonicalName": "OrderTypes.TakerOrder",
									"id": 232,
									"members": [
										{
											"constant": false,
											"id": 221,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "1742:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 232,
											"src": "1737:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 220,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1737:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 223,
											"mutability": "mutable",
											"name": "taker",
											"nameLocation": "1802:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 232,
											"src": "1794:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 222,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1794:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 225,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1839:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 232,
											"src": "1831:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 224,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1831:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 227,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1894:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 232,
											"src": "1886:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 226,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1886:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 229,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1919:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 232,
											"src": "1911:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 228,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1911:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 231,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "2032:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 232,
											"src": "2026:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 230,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2026:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TakerOrder",
									"nameLocation": "1716:10:2",
									"nodeType": "StructDefinition",
									"scope": 277,
									"src": "1709:368:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "2160:616:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "MAKER_ORDER_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "2236:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 244,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2270:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2281:10:2",
																	"memberName": "isOrderAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "2270:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"expression": {
																		"id": 246,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2309:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2320:6:2",
																	"memberName": "signer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "2309:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 248,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2344:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2355:10:2",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "2344:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 250,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2383:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2394:5:2",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 194,
																	"src": "2383:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 252,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2417:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 253,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2428:7:2",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "2417:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 254,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2453:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2464:6:2",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 198,
																	"src": "2453:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 256,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2488:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2499:8:2",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 200,
																	"src": "2488:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 258,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2525:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2536:8:2",
																	"memberName": "currency",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 202,
																	"src": "2525:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 260,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2562:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2573:5:2",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "2562:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 262,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2596:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2607:9:2",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 206,
																	"src": "2596:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 264,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2634:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 265,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2645:7:2",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 208,
																	"src": "2634:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 266,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "2670:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2681:18:2",
																	"memberName": "minPercentageToAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 210,
																	"src": "2670:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 269,
																				"name": "makerOrder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 235,
																				"src": "2727:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
																					"typeString": "struct OrderTypes.MakerOrder memory"
																				}
																			},
																			"id": 270,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2738:6:2",
																			"memberName": "params",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 212,
																			"src": "2727:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 268,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2717:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2717:28:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 241,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2208:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2212:6:2",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2208:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2208:551:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 240,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2185:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:584:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 239,
												"id": 274,
												"nodeType": "Return",
												"src": "2170:599:2"
											}
										]
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2093:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "makerOrder",
												"nameLocation": "2116:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2098:28:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$219_memory_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 233,
														"name": "MakerOrder",
														"nameLocations": [
															"2098:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 219,
														"src": "2098:10:2"
													},
													"referencedDeclaration": 219,
													"src": "2098:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$219_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:30:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2151:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:9:2"
									},
									"scope": 277,
									"src": "2084:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 278,
							"src": "273:2505:2",
							"usedErrors": []
						}
					],
					"src": "32:2747:2"
				},
				"id": 2
			}
		}
	}
}