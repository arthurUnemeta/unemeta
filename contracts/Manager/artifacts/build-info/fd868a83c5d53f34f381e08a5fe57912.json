{
	"id": "fd868a83c5d53f34f381e08a5fe57912",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/UnemetaMarket.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {IERC20, SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport {TheCurrencyManager} from \"./interface/TheCurrencyManager.sol\";\nimport {TheExManager} from \"./interface/TheExManager.sol\";\nimport {TheExStrategy} from \"./execution/interface/TheExecutionStrategy.sol\";\nimport {TheRoyaltyManager} from \"./interface/TheRoyaltyFeeManager.sol\";\nimport {TheUnemetaExchange} from \"./interface/TheUnemetaExchange.sol\";\nimport {TheTransferManager} from \"./interface/TheTransferManager.sol\";\nimport {TheTransferSelector} from \"./trans/interface/TheTransFerSelector.sol\";\nimport {IWETH} from \"./interface/IWETH.sol\";\n\nimport {OrderTypes} from \"../libraries/OrderTypes.sol\";\nimport {SignatureChecker} from \"../libraries/SignatureChecker.sol\";\n\n\n//UnemetaExchange\ncontract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {\n    // Load safe erc20\n    using SafeERC20 for IERC20;\n    using OrderTypes for OrderTypes.MakerOrder;\n    using OrderTypes for OrderTypes.TakerOrder;\n\n    //Cancel all orders\n    event CancelAllOrders(address indexed user, uint256 newMinNonce);\n    // Cancel some orders\n    event CancelMultipleOrders(address indexed user, uint256[] orderNonces);\n    // New currency manager address\n    event NewCurrencyManager(address indexed currencyManager);\n    // New execution manager address\n    event NewExecutionManager(address indexed executionManager);\n    // new platform transaction fee receipient address\n    event NewProtocolFeeRecipient(address indexed protocolFeeRecipient);\n    // New royalty fee receipient address\n    event NewRoyaltyFeeManager(address indexed royaltyFeeManager);\n    // New NFT transfer selector\n    event NewTransferSelectorNFT(address indexed transferSelectorNFT);\n\n    // Defaulty wetg address\n    address public immutable WETH;\n    // Defualt eip712 domain hash\n    address public protocolFeeRecipient;\n\n\n    TheCurrencyManager public currencyManager;\n    TheExManager public executionManager;\n    TheRoyaltyManager public royaltyFeeManager;\n    TheTransferSelector public transferSelectorNFT;\n\n\n    // Users' minimal nonce map\n    mapping(address => uint256) public userMinOrderNonce;\n    // User proceeds to execution or cancellation\n    mapping(address => mapping(uint256 => bool)) private _theUserOrderExecutedOrCancelled;\n\n    /*Royalty fee payment structure*/\n    event RoyaltyPayment(\n        address indexed collection, //collection address\n        uint256 indexed tokenId, //token id\n        address indexed royaltyRecipient, //recipient wallet address\n        address currency, //currency\n        uint256 amount//amount\n    );\n\n    //Ask price structure\n    event TakerAsk(\n        bytes32 orderHash,\n        uint256 orderNonce,\n        address indexed taker,\n        address indexed maker,\n        address indexed strategy,\n        address currency,\n        address collection,\n        uint256 tokenId,\n        uint256 amount,\n        uint256 price\n    );\n\n    //Bid price structure\n    event TakerBid(\n        bytes32 orderHash,\n        uint256 orderNonce,\n        address indexed taker,\n        address indexed maker,\n        address indexed strategy,\n        address currency,\n        address collection,\n        uint256 tokenId,\n        uint256 amount,\n        uint256 price\n    );\n\n    //—————————————————————————————————constructor function—————————————————————————————————\n    // Initialize contract using the input parameters\n    // Including currency manager, execution manager, royalty manager, NFT transfer selector, weth address, platform transaction fee receipient\n    constructor(\n        address _currencyManager, //currency manager\n        address _executionManager, //execution manager\n        address _royaltyFeeManager, //royalty fee manager\n        address _WETH, //WETH address\n        address _protocolFeeRecipient// platform transaction fee recipient\n    ) {\n        currencyManager = TheCurrencyManager(_currencyManager);\n        executionManager = TheExManager(_executionManager);\n        royaltyFeeManager = TheRoyaltyManager(_royaltyFeeManager);\n        WETH = _WETH;\n        protocolFeeRecipient = _protocolFeeRecipient;\n    }\n\n\n\n    //\n    // function matchSellerOrdersWETH\n    //  @Description: Match seller order with weth and eth\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function matchSellerOrdersWETH(\n        OrderTypes.TakerOrder calldata takerBid,\n        OrderTypes.MakerOrder calldata makerAsk\n    ) external payable override nonReentrant {\n        require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\");\n        // Confirm using weth\n        require(makerAsk.currency == WETH, \"Currency must be WETH\");\n        require(msg.sender == takerBid.taker, \"Order must be the sender\");\n\n        // if the balance of eth is low then use weth\n        if (takerBid.price > msg.value) {\n            IERC20(WETH).safeTransferFrom(msg.sender, address(this), (takerBid.price - msg.value));\n        } else {\n            require(takerBid.price == msg.value, \"Msg.value is too high\");\n        }\n\n        //deposit weth\n        IWETH(WETH).deposit{value : msg.value}();\n\n        // Confirm users of offer and make\n        bytes32 askHash = makerAsk.hash();\n        _validateOrder(makerAsk, askHash);\n\n        // Confirm execution parameters\n        (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerAsk.strategy)\n        .canExecuteSell(takerBid, makerAsk);\n\n        require(isExecutionValid, \"Strategy should be valid\");\n\n        // Update the random number status of current order to be true, avoid reentrancy\n        _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] = true;\n\n        // transfer fund\n        _transferFeesAndFundsWithWETH(\n            makerAsk.strategy,\n            makerAsk.collection,\n            tokenId,\n            makerAsk.signer,\n            takerBid.price,\n            makerAsk.minPercentageToAsk\n        );\n\n        // transfer nft\n        _transferNonFungibleToken(\n            makerAsk.collection,\n            makerAsk.signer,\n            takerBid.taker,\n            tokenId,\n            amount);\n\n        emit TakerBid(\n            askHash,\n            makerAsk.nonce,\n            takerBid.taker,\n            makerAsk.signer,\n            makerAsk.strategy,\n            makerAsk.currency,\n            makerAsk.collection,\n            tokenId,\n            amount,\n            takerBid.price\n        );\n    }\n\n    //\n    // function matchSellerOrders\n    //  @Description: matchi seller order\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n    external\n    override\n    nonReentrant\n    {\n        //Confirm the listing is valid and not a bid order\n        require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\");\n        // order must be from the bidder\n        require(msg.sender == takerBid.taker, \"Order must be the sender\");\n\n        //  validate signature\n        bytes32 askHash = makerAsk.hash();\n        _validateOrder(makerAsk, askHash);\n\n        //\n        (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerAsk.strategy)\n        .canExecuteSell(takerBid, makerAsk);\n\n        // Confirm valid execution\n        require(isExecutionValid, \"Strategy should be valid\");\n\n        // Update the random number status of current order to be true, avoid reentrancy\n        _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] = true;\n\n        // transfer fund\n        _transferFeesAndFunds(\n            makerAsk.strategy,\n            makerAsk.collection,\n            tokenId,\n            makerAsk.currency,\n            msg.sender,\n            makerAsk.signer,\n            takerBid.price,\n            makerAsk.minPercentageToAsk\n        );\n\n        //transfer nft\n        _transferNonFungibleToken(\n            makerAsk.collection,\n            makerAsk.signer,\n            takerBid.taker,\n            tokenId,\n            amount);\n\n        emit TakerBid(\n            askHash,\n            makerAsk.nonce,\n            takerBid.taker,\n            makerAsk.signer,\n            makerAsk.strategy,\n            makerAsk.currency,\n            makerAsk.collection,\n            tokenId,\n            amount,\n            takerBid.price\n        );\n    }\n\n    //\n    // function matchesBuyerOrder\n    //  @Description: match buyer order\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function matchesBuyerOrder(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n    external\n    override\n    nonReentrant\n    {\n        // validate paramenters of both sides\n        // This step ensures matching seller order to buyer order\n        require((!makerBid.isOrderAsk) && (takerAsk.isOrderAsk), \"Error About Order Side\");\n        // order must be from the seller\n        require(msg.sender == takerAsk.taker, \"Order must be the sender\");\n\n        // confirm bid is signed\n        bytes32 bidHash = makerBid.hash();\n        // confirm bid signature is valid\n        _validateOrder(makerBid, bidHash);\n\n        // confirm trading strategy can be effectively executed\n        (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerBid.strategy)\n        .canExecuteBuy(takerAsk, makerBid);\n\n        require(isExecutionValid, \"Strategy should be valid\");\n\n        // Update the random number status of current order to be true, avoid reentrancy\n        _theUserOrderExecutedOrCancelled[makerBid.signer][makerBid.nonce] = true;\n\n        // transfer nft\n        _transferNonFungibleToken(\n            makerBid.collection,\n            msg.sender,\n            makerBid.signer,\n            tokenId,\n            amount);\n\n        // transfer fund\n        _transferFeesAndFunds(\n            makerBid.strategy,\n            makerBid.collection,\n            tokenId,\n            makerBid.currency,\n            makerBid.signer,\n            takerAsk.taker,\n            takerAsk.price,\n            takerAsk.minPercentageToAsk\n        );\n\n        emit TakerAsk(\n            bidHash,\n            makerBid.nonce,\n            takerAsk.taker,\n            makerBid.signer,\n            makerBid.strategy,\n            makerBid.currency,\n            makerBid.collection,\n            tokenId,\n            amount,\n            takerAsk.price\n        );\n    }\n\n    //\n    // function cancelAllOrdersForSender\n    //  @Description: 取消所有的order\n    //  @param uint256\n    //  @return external\n    //\n    function cancelAllOrdersForSender(uint256 minNonce) external {\n        require(minNonce > userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\");\n        require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\");\n        // maintain a minimal nonce, to confirm the current order has reached the minimal nonce\n        userMinOrderNonce[msg.sender] = minNonce;\n\n        emit CancelAllOrders(msg.sender, minNonce);\n    }\n\n    //\n    // function cancelMultipleMakerOrders\n    //  @Description: cancel multiple orders\n    //  @param uint256[] orderNonces\n    //  @return external\n    //\n    function cancelMultipleMakerOrders(uint256[] calldata NonceList) external {\n        require(NonceList.length > 0, \"Cannot be empty Cancel list\");\n\n        for (uint256 i = 0; i < NonceList.length; i++) {\n            require(NonceList[i] >= userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\");\n            _theUserOrderExecutedOrCancelled[msg.sender][NonceList[i]] = true;\n        }\n\n        emit CancelMultipleOrders(msg.sender, NonceList);\n    }\n    //\n    // function isUserOrderNonceExecutedOrCancelled\n    //  @Description: Check if the current order is cancelled or was previously executed using map\n    //  @param address  user address\n    //  @param uint256  random number status of current order\n    //  @return external\n    //\n    function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {\n        //view viewing does not consume gas\n        return _theUserOrderExecutedOrCancelled[user][orderNonce];\n    }\n\n    //\n    // tion _transferFeesAndFunds\n    //  @Description: using specific erc20 method to transfer fund(platform transaction fee or other fee)\n    //  @param address  _strategy trading strategy address\n    //  @param address  _collection nft contract address\n    //  @param uint256  _tokenId nft if\n    //  @param address  _currency erc20 contract address\n    //  @param address  _seller seller address\n    //  @param address  _buyer buyer address\n    //  @param uint256  _price price\n    //  @param uint256  _minPercentageToAsk minimal percentage accepted by the seller\n    //  @return internal\n    //\n    function _transferFeesAndFunds(\n        address strategy,\n        address collection,\n        uint256 tokenId,\n        address currency,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 minPercentageToAsk\n    ) internal {\n        // initialize final price\n        uint256 finalSellerAmount = amount;\n\n        //2，calculate platform transaction fee\n\n        uint256 protocolFeeAmount = _calculateProtocolFee(strategy, amount);\n        // Confirm strategy is not null, platform transaction fee recipient is not null, platform transaction fee is not 0, before charging platform transaction fee\n        // If current strategy is not null, but platform transaction fee is 0, then pass\n        if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {\n            IERC20(currency).safeTransferFrom(from, protocolFeeRecipient, protocolFeeAmount);\n            finalSellerAmount -= protocolFeeAmount;\n        }\n\n\n        //3。 calculate royalty fee\n\n        (address royaltyFeeRecipient, uint256 royaltyFeeAmount) = royaltyFeeManager\n        .calculateRoyaltyFeeAndGetRecipient(collection, tokenId, amount);\n\n        // Pass only when current royalty recipient exists and royalty fee is 0\n        if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {\n            IERC20(currency).safeTransferFrom(from, royaltyFeeRecipient, royaltyFeeAmount);\n            finalSellerAmount -= royaltyFeeAmount;\n\n            emit RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount);\n        }\n\n        // confirm the final amount is higher than the price set by user\n        require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\");\n\n        //4  transfer final amount\n\n        IERC20(currency).safeTransferFrom(from, to, finalSellerAmount);\n\n    }\n\n\n    //\n    // function _transferFeesAndFundsWithWETH\n    //  @Description: use weth to transfer fee and fund, including different types of fee\n    //  @param address execution strategy address\n    //  @param address  collection address\n    //  @param uint256  tokenId\n    //  @param address  target wallet(seller)\n    //  @param uint256  amount\n    //  @param uint256  minimal percentage accepted by the seller\n    //  @return internal\n    //\n    function _transferFeesAndFundsWithWETH(\n        address strategy,\n        address collection,\n        uint256 tokenId,\n        address to,\n        uint256 amount,\n        uint256 minPercentageToAsk\n    ) internal {\n        //1. initialize final amount\n        uint256 finalSellerAmount = amount;\n\n\n        //2，calculate platform transaction fee\n        uint256 protocolFeeAmount = _calculateProtocolFee(strategy, amount);\n\n        // Confirm strategy is not null, platform transaction fee recipient is not null, platform transaction fee is not 0, before charging platform transaction fee\n        // If current strategy is not null, but platform transaction fee is 0, then pass\n        if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {\n            IERC20(WETH).safeTransfer(protocolFeeRecipient, protocolFeeAmount);\n            finalSellerAmount -= protocolFeeAmount;\n        }\n\n\n        //3. calculate royalty fee\n        (address royaltyFeeRecipient, uint256 royaltyFeeAmount) = royaltyFeeManager\n        .calculateRoyaltyFeeAndGetRecipient(collection, tokenId, amount);\n\n        // Pass only when current royalty recipient exists and royalty fee is 0\n        if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {\n            IERC20(WETH).safeTransfer(royaltyFeeRecipient, royaltyFeeAmount);\n            finalSellerAmount -= royaltyFeeAmount;\n\n            emit RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount);\n        }\n\n\n        // confirm the final amount is higher than the price set by user\n        require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\");\n\n        //4  transfer final amount\n        IERC20(WETH).safeTransfer(to, finalSellerAmount);\n\n    }\n\n\n    //\n    // function _transferNonFungibleToken\n    //  @Description: transfer nft\n    //  @param address  collection address\n    //  @param address  source address\n    //  @param address  target address\n    //  @param uint256  tokenId\n    //  @param uint256  amount\n    //  @return internal\n    //\n    function _transferNonFungibleToken(\n        address collection,\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) internal {\n        //  check contract manager in initialization\n        address Manager = transferSelectorNFT.checkTransferManagerForToken(collection);\n\n        // ensure manager contract exists\n        require(Manager != address(0), \"Can't fount transfer manager\");\n\n        // If one is found, transfer the token\n        TheTransferManager(Manager).transferNonFungibleToken(collection, from, to, tokenId, amount);\n    }\n\n    //\n    // function _calculateProtocolFee\n    //  @Description:  calculate platform transaction fee according to strategy\n    //  @param address  execution stratgey address\n    //  @param uint256  trading amount\n    //  @return internal\n    //\n    function _calculateProtocolFee(address theStrategy, uint256 amount) internal view returns (uint256) {\n        uint256 protocolFee = TheExStrategy(theStrategy).viewProtocolFee();\n        return (protocolFee * amount) / 10000;\n    }\n\n    //\n    // function _validateOrder\n    //  @Description: validate using order infor\n    //  @param OrderTypes.MakerOrder memory order order information\n    //  @param bytes32 hash order hash\n    //  @return internal\n    //\n    function _validateOrder(OrderTypes.MakerOrder calldata Make, bytes32 Hash) internal view {\n        // Verify whether order nonce has expired\n        require(\n        // check if the order is cancelled or timeout\n            (!_theUserOrderExecutedOrCancelled[Make.signer][Make.nonce]) &&\n            (Make.nonce >= userMinOrderNonce[Make.signer]),\n            \"Order: Matching order expired\"\n        );\n\n        //order signature cannot be null\n        require(Make.signer != address(0), \"The Order signer cannot be the zero address\");\n\n        //confirm if amount is larger than 0\n        require(Make.amount > 0, \"The order amount should be greater than 0\");\n\n        bytes32 Domain = keccak256(\n            abi.encode(\n                0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f,\n            // keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")\n                0x2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5,\n            // keccak256(\"UnemetaMarket\")\n                0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6,\n            // keccak256(bytes(\"1\")) for versionId = 1\n                block.chainid,\n                address(this)\n            )\n        );\n\n        //validate signature\n        //because the eip712 signature stored in the server is used, must restore using teh same structure\n        //ensures signature is valid\n        require(\n            SignatureChecker.\n            verify(\n                Hash, //hash\n                Make.signer, // listing signer\n                Make.v, //signature parameter, from eip712 standard\n                Make.r,\n                Make.s,\n                Domain\n            ),\n            \"Signature: Invalid\"\n        );\n\n        // confirm currency is whitelisted\n        require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\");\n\n        // confirm trading strategy is whitelisted and can execute correctly\n        require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\");\n    }\n\n\n\n    //\n    // function updateCurrencyManager\n    //  @Description: Update a currency manager\n    //  @param address\n    //  @return external\n    //\n    function updateCurrencyManager(address _currencyManager) external onlyOwner {\n        require(_currencyManager != address(0), \"Cannot update to a null address\");\n        currencyManager = TheCurrencyManager(_currencyManager);\n        emit NewCurrencyManager(_currencyManager);\n    }\n\n    //\n    // function updateExecutionManager\n    //  @Description: Update an execution manager\n    //  @param address\n    //  @return external\n    //\n    function updateExecutionManager(address _executionManager) external onlyOwner {\n        require(_executionManager != address(0), \"Cannot update to a null address\");\n        executionManager = TheExManager(_executionManager);\n        emit NewExecutionManager(_executionManager);\n    }\n\n    //\n    // function updateProtocolFeeRecipient\n    //  @Description: Update platform transaction fee recipient\n    //  @param address\n    //  @return external\n    //\n    function updateProtocolFeeRecipient(address _protocolFeeRecipient) external onlyOwner {\n        protocolFeeRecipient = _protocolFeeRecipient;\n        emit NewProtocolFeeRecipient(_protocolFeeRecipient);\n    }\n\n    //\n    // function updateRoyaltyFeeManager\n    //  @Description: update royalty fee manager\n    //  @param address\n    //  @return external\n    //\n    function updateRoyaltyFeeManager(address _royaltyFeeManager) external onlyOwner {\n        require(_royaltyFeeManager != address(0), \"Cannot update to a null address\");\n        royaltyFeeManager = TheRoyaltyManager(_royaltyFeeManager);\n        emit NewRoyaltyFeeManager(_royaltyFeeManager);\n    }\n\n    //\n    // function updateTransferSelectorNFT\n    //  @Description: update transfer manager\n    //  @param address\n    //  @return external\n    //\n    function updateTransferSelectorNFT(address _transferSelectorNFT) external onlyOwner {\n        require(_transferSelectorNFT != address(0), \"Cannot update to a null address\");\n        transferSelectorNFT = TheTransferSelector(_transferSelectorNFT);\n        emit NewTransferSelectorNFT(_transferSelectorNFT);\n    }\n\n}\n\n"
			},
			"contracts/libraries/SignatureChecker.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\nimport {IERC1271} from \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\n\n/**\n * @title SignatureChecker\n * @notice This library allows verification of signatures for both EOAs and contracts.\n */\nlibrary SignatureChecker {\n\n    //\n    // function recover\n    //  @Description:  Recover signer from the signature\n    //  @param bytes32  hash  Including has of signiture information\n    //  @param uint8 Two possibilities, to enforce decryption from multiple angles using public key\n    //  @param bytes32\n    //  @param bytes32\n    //  @return internal\n    //\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        // https://ethereum.stackexchange.com/questions/83174/is-it-best-practice-to-check-signature-malleability-in-ecrecover\n        // https://crypto.iacr.org/2019/affevents/wac/medias/Heninger-BiasedNonceSense.pdf\n        require(\n            uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\n            \" Invalid s parameter\"\n        );\n\n        require(v == 27 || v == 28, \"Invalid v parameter\");\n\n        // Recover one signing address if signature is normal\n        address signer = ecrecover(hash, v, r, s);\n        require(signer != address(0), \" Invalid signer\");\n\n        return signer;\n    }\n    \n    //\n    // tion verify\n    //  @Description: To verify of signer matches all the signature information\n    //  @param bytes32\n    //  @param address\n    //  @param uint8\n    //  @param bytes32\n    //  @param bytes32\n    //  @param bytes32\n    //  @return internal\n    //\n    function verify(\n        bytes32 hash,\n        address signer,\n        uint8 v,\n        bytes32 r,\n        bytes32 s,\n        bytes32 domainSeparator\n    ) internal view returns (bool) {\n        // \\x19\\x01 Standard prefix code\n        // https://eips.ethereum.org/EIPS/eip-712#specification\n        // Checking code of the input domain and hash\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash));\n        // If the signature address is the contract address\n        if (Address.isContract(signer)) {\n            // 0x1626ba7e is the interfaceId(see IERC1271) of signing contract\n            // Standard 1271 API\n            return IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) == 0x1626ba7e;\n        } else {\n            // Check if signature address is same as input address\n            return recover(digest, v, r, s) == signer;\n        }\n    }\n}\n"
			},
			"contracts/libraries/OrderTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n//—————————————————————————————————Order Structure—————————————————————————————————\nlibrary OrderTypes {\n    // keccak256(\"MakerOrder(bool isOrderAsk,address signer,address collection,uint256 price,uint256 tokenId,uint256 amount,address strategy,address currency,uint256 nonce,uint256 startTime,uint256 endTime,uint256 minPercentageToAsk,bytes params)\")\n    bytes32 internal constant MAKER_ORDER_HASH = 0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028;\n\n    struct MakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address signer; // signer of the maker order\n        address collection; // collection address\n        uint256 price; // price (used as )\n        uint256 tokenId; // id of the token\n        uint256 amount; // amount of tokens to sell/purchase (must be 1 for ERC721, 1+ for ERC1155)\n        address strategy; // strategy for trade execution (e.g., DutchAuction, StandardSaleForFixedPrice)\n        address currency; // currency (e.g., WETH)\n        uint256 nonce; // order nonce (must be unique unless new maker order is meant to override existing one e.g., lower ask price)\n        uint256 startTime; // startTime in timestamp\n        uint256 endTime; // endTime in timestamp\n        uint256 minPercentageToAsk; // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // additional parameters\n        uint8 v; // v: parameter (27 or 28)\n        bytes32 r; // r: parameter\n        bytes32 s; // s: parameter\n    }\n\n    struct TakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address taker; // msg.sender\n        uint256 price; // final price for the purchase\n        uint256 tokenId;\n        uint256 minPercentageToAsk; // // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // other params (e.g., tokenId)\n    }\n\n\n    function hash(MakerOrder memory makerOrder) internal pure returns (bytes32) {\n        return\n        keccak256(\n            abi.encode(\n                MAKER_ORDER_HASH,\n                makerOrder.isOrderAsk,\n                makerOrder.signer,\n                makerOrder.collection,\n                makerOrder.price,\n                makerOrder.tokenId,\n                makerOrder.amount,\n                makerOrder.strategy,\n                makerOrder.currency,\n                makerOrder.nonce,\n                makerOrder.startTime,\n                makerOrder.endTime,\n                makerOrder.minPercentageToAsk,\n                keccak256(makerOrder.params)\n            )\n        );\n    }\n}\n"
			},
			"contracts/Manager/interface/IWETH.sol": {
				"content": "// SPDX-License-Identifier: GNU\npragma solidity >=0.5.0;\n\ninterface IWETH {\n    function deposit() external payable;\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function withdraw(uint256) external;\n}\n"
			},
			"contracts/Manager/trans/interface/TheTransFerSelector.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheTransferSelector {\n    function checkTransferManagerForToken(address collection) external view returns (address);\n}\n"
			},
			"contracts/Manager/interface/TheTransferManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheTransferManager {\n    function transferNonFungibleToken(\n        address collection,\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) external;\n}\n"
			},
			"contracts/Manager/interface/TheUnemetaExchange.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {OrderTypes} from \"../../libraries/OrderTypes.sol\";\n\ninterface TheUnemetaExchange {\n    function matchSellerOrdersWETH(\n        OrderTypes.TakerOrder calldata takerBid,\n        OrderTypes.MakerOrder calldata makerAsk\n    ) external payable;\n\n    function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external;\n\n    function matchesBuyerOrder(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external;\n}\n"
			},
			"contracts/Manager/interface/TheRoyaltyFeeManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheRoyaltyManager {\n    function calculateRoyaltyFeeAndGetRecipient(\n        address collection,\n        uint256 tokenId,\n        uint256 amount\n    ) external view returns (address, uint256);\n}\n"
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {OrderTypes} from \"../../../libraries/OrderTypes.sol\";\n\ninterface TheExStrategy {\n    function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function viewProtocolFee() external view returns (uint256);\n}\n"
			},
			"contracts/Manager/interface/TheExManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheExManager {\n    function addStrategy(address strategy) external;\n\n    function removeStrategy(address strategy) external;\n\n    function isStrategyWhitelisted(address strategy) external view returns (bool);\n\n    function viewWhitelistedStrategies(uint256 cursor, uint256 size) external view returns (address[] memory, uint256);\n\n    function viewCountWhitelistedStrategies() external view returns (uint256);\n}\n"
			},
			"contracts/Manager/interface/TheCurrencyManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheCurrencyManager {\n    function addCurrency(address currency) external;\n\n    function removeCurrency(address currency) external;\n\n    function isCurrencyWhitelisted(address currency) external view returns (bool);\n\n    function viewWhitelistedCurrencies(uint256 cursor, uint256 size) external view returns (address[] memory, uint256);\n\n    function viewCountWhitelistedCurrencies() external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"IERC1271": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 137,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208faac41f4eca872ef93b399fbc6f3aadd667116a8796de99ebc993bbaea1faf764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208faac41f4eca872ef93b399fbc6f3aadd667116a8796de99ebc993bbaea1faf764736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xAA 0xC4 0x1F 0x4E 0xCA DUP8 0x2E 0xF9 EXTCODESIZE CODECOPY SWAP16 0xBC PUSH16 0x3AADD667116A8796DE99EBC993BBAEA1 STATICCALL 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208faac41f4eca872ef93b399fbc6f3aadd667116a8796de99ebc993bbaea1faf764736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xAA 0xC4 0x1F 0x4E 0xCA DUP8 0x2E 0xF9 EXTCODESIZE CODECOPY SWAP16 0xBC PUSH16 0x3AADD667116A8796DE99EBC993BBAEA1 STATICCALL 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208faac41f4eca872ef93b399fbc6f3aadd667116a8796de99ebc993bbaea1faf764736f6c63430008110033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c964e8bcd19b5c6ee6e2bd43879b34ccad3d37246c2e4ec1913a9a91f3c0f1464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c964e8bcd19b5c6ee6e2bd43879b34ccad3d37246c2e4ec1913a9a91f3c0f1464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP7 0x4E DUP12 0xCD NOT 0xB5 0xC6 0xEE PUSH15 0x2BD43879B34CCAD3D37246C2E4EC19 SGT 0xA9 0xA9 0x1F EXTCODECOPY 0xF EQ PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c964e8bcd19b5c6ee6e2bd43879b34ccad3d37246c2e4ec1913a9a91f3c0f1464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP7 0x4E DUP12 0xCD NOT 0xB5 0xC6 0xEE PUSH15 0x2BD43879B34CCAD3D37246C2E4EC19 SGT 0xA9 0xA9 0x1F EXTCODECOPY 0xF EQ PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c964e8bcd19b5c6ee6e2bd43879b34ccad3d37246c2e4ec1913a9a91f3c0f1464736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/UnemetaMarket.sol": {
				"UnemetaMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_currencyManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_executionManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_royaltyFeeManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETH",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_protocolFeeRecipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMinNonce",
									"type": "uint256"
								}
							],
							"name": "CancelAllOrders",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "orderNonces",
									"type": "uint256[]"
								}
							],
							"name": "CancelMultipleOrders",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "currencyManager",
									"type": "address"
								}
							],
							"name": "NewCurrencyManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "executionManager",
									"type": "address"
								}
							],
							"name": "NewExecutionManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "protocolFeeRecipient",
									"type": "address"
								}
							],
							"name": "NewProtocolFeeRecipient",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "royaltyFeeManager",
									"type": "address"
								}
							],
							"name": "NewRoyaltyFeeManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "transferSelectorNFT",
									"type": "address"
								}
							],
							"name": "NewTransferSelectorNFT",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "royaltyRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RoyaltyPayment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "orderHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "orderNonce",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "taker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "maker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TakerAsk",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "orderHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "orderNonce",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "taker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "maker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TakerBid",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minNonce",
									"type": "uint256"
								}
							],
							"name": "cancelAllOrdersForSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "NonceList",
									"type": "uint256[]"
								}
							],
							"name": "cancelMultipleMakerOrders",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currencyManager",
							"outputs": [
								{
									"internalType": "contract TheCurrencyManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "executionManager",
							"outputs": [
								{
									"internalType": "contract TheExManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "orderNonce",
									"type": "uint256"
								}
							],
							"name": "isUserOrderNonceExecutedOrCancelled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "matchSellerOrders",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "matchSellerOrdersWETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "matchesBuyerOrder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFeeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeManager",
							"outputs": [
								{
									"internalType": "contract TheRoyaltyManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferSelectorNFT",
							"outputs": [
								{
									"internalType": "contract TheTransferSelector",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_currencyManager",
									"type": "address"
								}
							],
							"name": "updateCurrencyManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_executionManager",
									"type": "address"
								}
							],
							"name": "updateExecutionManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_protocolFeeRecipient",
									"type": "address"
								}
							],
							"name": "updateProtocolFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_royaltyFeeManager",
									"type": "address"
								}
							],
							"name": "updateRoyaltyFeeManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_transferSelectorNFT",
									"type": "address"
								}
							],
							"name": "updateTransferSelectorNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userMinOrderNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/UnemetaMarket.sol\":995:23309  contract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Manager/UnemetaMarket.sol\":3921:4493  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"contracts/Manager/UnemetaMarket.sol\":4229:4244  currencyManager */\n  0x03\n    /* \"contracts/Manager/UnemetaMarket.sol\":4229:4283  currencyManager = TheCurrencyManager(_currencyManager) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":4293:4309  executionManager */\n  0x04\n    /* \"contracts/Manager/UnemetaMarket.sol\":4293:4343  executionManager = TheExManager(_executionManager) */\n  dup1\n  sload\n  swap6\n  dup8\n  and\n  swap6\n  dup3\n  and\n  swap6\n  swap1\n  swap6\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":4353:4370  royaltyFeeManager */\n  0x05\n    /* \"contracts/Manager/UnemetaMarket.sol\":4353:4410  royaltyFeeManager = TheRoyaltyManager(_royaltyFeeManager) */\n  dup1\n  sload\n  swap4\n  dup7\n  and\n  swap4\n  dup6\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":4420:4432  WETH = _WETH */\n  dup4\n  and\n  0x80\n  mstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":4442:4462  protocolFeeRecipient */\n  0x02\n    /* \"contracts/Manager/UnemetaMarket.sol\":4442:4486  protocolFeeRecipient = _protocolFeeRecipient */\n  dup1\n  sload\n  swap2\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":995:23309  contract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:746   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:408   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":404:405   */\n  0x00\n    /* \"#utility.yul\":401:402   */\n  dup1\n    /* \"#utility.yul\":394:406   */\n  revert\n    /* \"#utility.yul\":355:408   */\ntag_22:\n    /* \"#utility.yul\":427:467   */\n  tag_23\n    /* \"#utility.yul\":457:466   */\n  dup7\n    /* \"#utility.yul\":427:467   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":417:467   */\n  swap5\n  pop\n    /* \"#utility.yul\":486:535   */\n  tag_24\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup8\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":486:535   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":476:535   */\n  swap4\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_25\n    /* \"#utility.yul\":599:601   */\n  0x40\n    /* \"#utility.yul\":588:597   */\n  dup8\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":544:603   */\n  swap3\n  pop\n    /* \"#utility.yul\":622:671   */\n  tag_26\n    /* \"#utility.yul\":667:669   */\n  0x60\n    /* \"#utility.yul\":656:665   */\n  dup8\n    /* \"#utility.yul\":652:670   */\n  add\n    /* \"#utility.yul\":622:671   */\n  tag_17\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":612:671   */\n  swap2\n  pop\n    /* \"#utility.yul\":690:740   */\n  tag_27\n    /* \"#utility.yul\":735:738   */\n  0x80\n    /* \"#utility.yul\":724:733   */\n  dup8\n    /* \"#utility.yul\":720:739   */\n  add\n    /* \"#utility.yul\":690:740   */\n  tag_17\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":680:740   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:746   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\ntag_18:\n    /* \"contracts/Manager/UnemetaMarket.sol\":995:23309  contract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/UnemetaMarket.sol\":995:23309  contract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64df049e\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xad5c4648\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc5498769\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcbd2ec65\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd4ff41dc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf75ff53f\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x64df049e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x87e4401f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9e53a69a\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x483abb9f\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x483abb9f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x509a1a41\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5ce052d7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5e14f68e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x63521def\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x0f747d74\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1df47f80\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x31e27e27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4266581e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x45ea7231\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/UnemetaMarket.sol\":2105:2146  TheCurrencyManager public currencyManager */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      sload(0x03)\n      tag_27\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":205:237   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":187:238   */\n      dup2\n      mstore\n        /* \"#utility.yul\":175:177   */\n      0x20\n        /* \"#utility.yul\":160:178   */\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":2105:2146  TheCurrencyManager public currencyManager */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/UnemetaMarket.sol\":22179:22387  function updateProtocolFeeRecipient(address _protocolFeeRecipient) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Manager/UnemetaMarket.sol\":12455:12681  function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":1357:1371   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1350:1372   */\n      iszero\n        /* \"#utility.yul\":1332:1373   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1320:1322   */\n      0x20\n        /* \"#utility.yul\":1305:1323   */\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":12455:12681  function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":1192:1379   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":2328:2380  mapping(address => uint256) public userMinOrderNonce */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_45:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":1530:1555   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1518:1520   */\n      0x20\n        /* \"#utility.yul\":1503:1521   */\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":2328:2380  mapping(address => uint256) public userMinOrderNonce */\n      tag_29\n        /* \"#utility.yul\":1384:1561   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":7032:8808  function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_32\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":2152:2188  TheExManager public executionManager */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      sload(0x04)\n      tag_27\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":4711:6837  function matchSellerOrdersWETH(... */\n    tag_8:\n      tag_32\n      tag_60\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":21282:21564  function updateCurrencyManager(address _currencyManager) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_32\n      tag_64\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":2242:2288  TheTransferSelector public transferSelectorNFT */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      sload(0x06)\n      tag_27\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":9001:10892  function matchesBuyerOrder(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_32\n      tag_73\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":2062:2097  address public protocolFeeRecipient */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      sload(0x02)\n      tag_27\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_32\n      tag_82\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":2194:2236  TheRoyaltyManager public royaltyFeeManager */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      sload(0x05)\n      tag_27\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_27)\n        /* \"contracts/Manager/UnemetaMarket.sol\":11688:12161  function cancelMultipleMakerOrders(uint256[] calldata NonceList) external {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_32\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":1993:2022  address public immutable WETH */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_27\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n      dup2\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":22544:22839  function updateRoyaltyFeeManager(address _royaltyFeeManager) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_32\n      tag_103\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":11044:11519  function cancelAllOrdersForSender(uint256 minNonce) external {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_32\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":21721:22004  function updateExecutionManager(address _executionManager) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_32\n      tag_112\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_32\n      tag_116\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":22995:23306  function updateTransferSelectorNFT(address _transferSelectorNFT) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_32\n      tag_120\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":22179:22387  function updateProtocolFeeRecipient(address _protocolFeeRecipient) external onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Manager/UnemetaMarket.sol\":22275:22295  protocolFeeRecipient */\n      0x02\n        /* \"contracts/Manager/UnemetaMarket.sol\":22275:22319  protocolFeeRecipient = _protocolFeeRecipient */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":22334:22380  NewProtocolFeeRecipient(_protocolFeeRecipient) */\n      mload(0x40)\n      0x8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb10\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":22179:22387  function updateProtocolFeeRecipient(address _protocolFeeRecipient) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":12455:12681  function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {... */\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12662  _theUserOrderExecutedOrCancelled[user] */\n      dup3\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":12557:12561  bool */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12662  _theUserOrderExecutedOrCancelled[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12656  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12662  _theUserOrderExecutedOrCancelled[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12674  _theUserOrderExecutedOrCancelled[user][orderNonce] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":12455:12681  function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {... */\n    tag_126:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":7032:8808  function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":7266:7285  makerAsk.isOrderAsk */\n      tag_132\n      0x20\n      dup3\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":7266:7274  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":7266:7285  makerAsk.isOrderAsk */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7265:7312  (makerAsk.isOrderAsk) && (!takerBid.isOrderAsk) */\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":7292:7311  takerBid.isOrderAsk */\n      tag_135\n      0x20\n      dup4\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":7292:7300  takerBid */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":7292:7311  takerBid.isOrderAsk */\n      tag_133\n      jump\t// in\n    tag_135:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7291:7311  !takerBid.isOrderAsk */\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":7265:7312  (makerAsk.isOrderAsk) && (!takerBid.isOrderAsk) */\n    tag_134:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7257:7339  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_138\n      jump\t// in\n    tag_136:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7412:7426  takerBid.taker */\n      tag_139\n      0x40\n      dup4\n      add\n      0x20\n      dup5\n      add\n      tag_34\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":7398:7426  msg.sender == takerBid.taker */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":7398:7408  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":7398:7426  msg.sender == takerBid.taker */\n      and\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":7390:7455  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_142\n      jump\t// in\n    tag_140:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7497:7512  bytes32 askHash */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7530  makerAsk.hash() */\n      tag_143\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7528  makerAsk.hash */\n      tag_144\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7523  makerAsk */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7528  makerAsk.hash */\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7530  makerAsk.hash() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7497:7530  bytes32 askHash = makerAsk.hash() */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":7540:7573  _validateOrder(makerAsk, askHash) */\n      tag_147\n        /* \"contracts/Manager/UnemetaMarket.sol\":7555:7563  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":7565:7572  askHash */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":7540:7554  _validateOrder */\n      tag_148\n        /* \"contracts/Manager/UnemetaMarket.sol\":7540:7573  _validateOrder(makerAsk, askHash) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7596:7617  bool isExecutionValid */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":7668:7685  makerAsk.strategy */\n      tag_149\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_34\n      jump\t// in\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":7654:7710  TheExStrategy(makerAsk.strategy)... */\n      and\n      0xd310677d\n        /* \"contracts/Manager/UnemetaMarket.sol\":7711:7719  takerBid */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":7721:7729  makerAsk */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":7654:7730  TheExStrategy(makerAsk.strategy)... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7595:7730  (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerAsk.strategy)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":7784:7800  isExecutionValid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":7776:7829  require(isExecutionValid, \"Strategy should be valid\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_158\n      jump\t// in\n    tag_156:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7997:8001  true */\n      0x01\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:7961  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:7978  _theUserOrderExecutedOrCancelled[makerAsk.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":7962:7977  makerAsk.signer */\n      tag_159\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_34\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:7978  _theUserOrderExecutedOrCancelled[makerAsk.signer] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":7979:7993  makerAsk.nonce */\n      0x0100\n      dup11\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:7994  _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:8001  _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":8037:8306  _transferFeesAndFunds(... */\n      tag_160\n        /* \"contracts/Manager/UnemetaMarket.sol\":8072:8089  makerAsk.strategy */\n      tag_161\n      0xe0\n      dup8\n      add\n      0xc0\n      dup9\n      add\n      tag_34\n      jump\t// in\n    tag_161:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8103:8122  makerAsk.collection */\n      tag_162\n      0x60\n      dup9\n      add\n      0x40\n      dup10\n      add\n      tag_34\n      jump\t// in\n    tag_162:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8136:8143  tokenId */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":8157:8174  makerAsk.currency */\n      tag_163\n      0x0100\n      dup11\n      add\n      0xe0\n      dup12\n      add\n      tag_34\n      jump\t// in\n    tag_163:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8188:8198  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":8212:8227  makerAsk.signer */\n      tag_164\n      0x40\n      dup13\n      add\n      0x20\n      dup14\n      add\n      tag_34\n      jump\t// in\n    tag_164:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8241:8249  takerBid */\n      dup13\n        /* \"contracts/Manager/UnemetaMarket.sol\":8241:8255  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":8269:8277  makerAsk */\n      dup13\n        /* \"contracts/Manager/UnemetaMarket.sol\":8269:8296  makerAsk.minPercentageToAsk */\n      0x0160\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":8037:8058  _transferFeesAndFunds */\n      tag_165\n        /* \"contracts/Manager/UnemetaMarket.sol\":8037:8306  _transferFeesAndFunds(... */\n      jump\t// in\n    tag_160:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8340:8497  _transferNonFungibleToken(... */\n      tag_166\n        /* \"contracts/Manager/UnemetaMarket.sol\":8379:8398  makerAsk.collection */\n      tag_167\n      0x60\n      dup8\n      add\n      0x40\n      dup9\n      add\n      tag_34\n      jump\t// in\n    tag_167:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8412:8427  makerAsk.signer */\n      tag_168\n      0x40\n      dup9\n      add\n      0x20\n      dup10\n      add\n      tag_34\n      jump\t// in\n    tag_168:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8441:8455  takerBid.taker */\n      tag_169\n      0x40\n      dup11\n      add\n      0x20\n      dup12\n      add\n      tag_34\n      jump\t// in\n    tag_169:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8469:8476  tokenId */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":8490:8496  amount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":8340:8365  _transferNonFungibleToken */\n      tag_170\n        /* \"contracts/Manager/UnemetaMarket.sol\":8340:8497  _transferNonFungibleToken(... */\n      jump\t// in\n    tag_166:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8641:8658  makerAsk.strategy */\n      tag_171\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_34\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":8612:8627  makerAsk.signer */\n      tag_172\n      0x40\n      dup8\n      add\n      0x20\n      dup9\n      add\n      tag_34\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":8584:8598  takerBid.taker */\n      tag_173\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_34\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      and\n      0x95fb6205e23ff6bda16a2d1dba56b9ad7c783f67c96fa149785052f47696f2be\n        /* \"contracts/Manager/UnemetaMarket.sol\":8535:8542  askHash */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":8556:8570  makerAsk.nonce */\n      0x0100\n      dup11\n      add\n      dup1\n      calldataload\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":8672:8689  makerAsk.currency */\n      tag_174\n      swap1\n      0xe0\n      dup14\n      add\n      tag_34\n      jump\t// in\n    tag_174:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8703:8722  makerAsk.collection */\n      tag_175\n      0x60\n      dup14\n      add\n      0x40\n      dup15\n      add\n      tag_34\n      jump\t// in\n    tag_175:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8777:8791  takerBid.price */\n      0x40\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      dup1\n      mload\n        /* \"#utility.yul\":13194:13219   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":13250:13252   */\n      0x20\n        /* \"#utility.yul\":13235:13253   */\n      dup6\n      add\n        /* \"#utility.yul\":13228:13262   */\n      swap4\n      swap1\n      swap4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13336:13351   */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":13316:13334   */\n      dup5\n      dup5\n      add\n        /* \"#utility.yul\":13309:13352   */\n      mstore\n        /* \"#utility.yul\":13388:13403   */\n      and\n        /* \"#utility.yul\":13383:13385   */\n      0x60\n        /* \"#utility.yul\":13368:13386   */\n      dup4\n      add\n        /* \"#utility.yul\":13361:13404   */\n      mstore\n        /* \"#utility.yul\":13435:13438   */\n      0x80\n        /* \"#utility.yul\":13420:13439   */\n      dup3\n      add\n        /* \"#utility.yul\":13413:13448   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":13289:13292   */\n      0xa0\n        /* \"#utility.yul\":13464:13483   */\n      dup3\n      add\n        /* \"#utility.yul\":13457:13492   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":8777:8791  takerBid.price */\n      dup12\n      add\n      calldataload\n        /* \"#utility.yul\":13523:13526   */\n      0xc0\n        /* \"#utility.yul\":13508:13527   */\n      dup3\n      add\n        /* \"#utility.yul\":13501:13536   */\n      mstore\n        /* \"#utility.yul\":13181:13184   */\n      0xe0\n        /* \"#utility.yul\":13166:13185   */\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":7032:8808  function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":4711:6837  function matchSellerOrdersWETH(... */\n    tag_61:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":4904:4923  makerAsk.isOrderAsk */\n      tag_182\n      0x20\n      dup3\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":4904:4912  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":4904:4923  makerAsk.isOrderAsk */\n      tag_133\n      jump\t// in\n    tag_182:\n        /* \"contracts/Manager/UnemetaMarket.sol\":4903:4950  (makerAsk.isOrderAsk) && (!takerBid.isOrderAsk) */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":4930:4949  takerBid.isOrderAsk */\n      tag_184\n      0x20\n      dup4\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":4930:4938  takerBid */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":4930:4949  takerBid.isOrderAsk */\n      tag_133\n      jump\t// in\n    tag_184:\n        /* \"contracts/Manager/UnemetaMarket.sol\":4929:4949  !takerBid.isOrderAsk */\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":4903:4950  (makerAsk.isOrderAsk) && (!takerBid.isOrderAsk) */\n    tag_183:\n        /* \"contracts/Manager/UnemetaMarket.sol\":4895:4977  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_138\n      jump\t// in\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":5046:5050  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":5025:5050  makerAsk.currency == WETH */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":5025:5042  makerAsk.currency */\n      tag_187\n      0x0100\n      dup4\n      add\n      0xe0\n      dup5\n      add\n      tag_34\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":5025:5050  makerAsk.currency == WETH */\n      and\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":5017:5076  require(makerAsk.currency == WETH, \"Currency must be WETH\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13749:13751   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":5017:5076  require(makerAsk.currency == WETH, \"Currency must be WETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13731:13752   */\n      mstore\n        /* \"#utility.yul\":13788:13790   */\n      0x15\n        /* \"#utility.yul\":13768:13786   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13761:13791   */\n      mstore\n      shl(0x5b, 0x086eae4e4cadcc6f240daeae6e840c4ca40ae8aa89)\n        /* \"#utility.yul\":13807:13825   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13800:13851   */\n      mstore\n        /* \"#utility.yul\":13868:13886   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":5017:5076  require(makerAsk.currency == WETH, \"Currency must be WETH\") */\n      tag_129\n        /* \"#utility.yul\":13547:13892   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":5017:5076  require(makerAsk.currency == WETH, \"Currency must be WETH\") */\n    tag_188:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5108:5122  takerBid.taker */\n      tag_191\n      0x40\n      dup4\n      add\n      0x20\n      dup5\n      add\n      tag_34\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":5094:5122  msg.sender == takerBid.taker */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":5094:5104  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":5094:5122  msg.sender == takerBid.taker */\n      and\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":5086:5151  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_142\n      jump\t// in\n    tag_192:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5237:5246  msg.value */\n      callvalue\n        /* \"contracts/Manager/UnemetaMarket.sol\":5220:5228  takerBid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5220:5234  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":5220:5246  takerBid.price > msg.value */\n      gt\n        /* \"contracts/Manager/UnemetaMarket.sol\":5216:5451  if (takerBid.price > msg.value) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5348  IERC20(WETH).safeTransferFrom(msg.sender, address(this), (takerBid.price - msg.value)) */\n      tag_195\n        /* \"contracts/Manager/UnemetaMarket.sol\":5292:5302  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":5312:5316  this */\n      address\n        /* \"contracts/Manager/UnemetaMarket.sol\":5320:5346  takerBid.price - msg.value */\n      tag_196\n        /* \"contracts/Manager/UnemetaMarket.sol\":5337:5346  msg.value */\n      callvalue\n        /* \"contracts/Manager/UnemetaMarket.sol\":5320:5334  takerBid.price */\n      0x40\n      dup8\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":5320:5346  takerBid.price - msg.value */\n      tag_197\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":5269:5273  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5291  IERC20(WETH).safeTransferFrom */\n      and\n      swap3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5348  IERC20(WETH).safeTransferFrom(msg.sender, address(this), (takerBid.price - msg.value)) */\n      swap2\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5291  IERC20(WETH).safeTransferFrom */\n      tag_198\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5348  IERC20(WETH).safeTransferFrom(msg.sender, address(this), (takerBid.price - msg.value)) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5216:5451  if (takerBid.price > msg.value) {... */\n      jump(tag_200)\n    tag_194:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5405:5414  msg.value */\n      callvalue\n        /* \"contracts/Manager/UnemetaMarket.sol\":5387:5395  takerBid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5387:5401  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":5387:5414  takerBid.price == msg.value */\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":5379:5440  require(takerBid.price == msg.value, \"Msg.value is too high\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14364:14366   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":5379:5440  require(takerBid.price == msg.value, \"Msg.value is too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14346:14367   */\n      mstore\n        /* \"#utility.yul\":14403:14405   */\n      0x15\n        /* \"#utility.yul\":14383:14401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14376:14406   */\n      mstore\n      shl(0x5b, 0x09ae6ce5cecc2d8eaca40d2e640e8dede40d0d2ced)\n        /* \"#utility.yul\":14422:14440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14415:14466   */\n      mstore\n        /* \"#utility.yul\":14483:14501   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":5379:5440  require(takerBid.price == msg.value, \"Msg.value is too high\") */\n      tag_129\n        /* \"#utility.yul\":14162:14507   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":5379:5440  require(takerBid.price == msg.value, \"Msg.value is too high\") */\n    tag_200:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5490:5494  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":5484:5503  IWETH(WETH).deposit */\n      and\n      0xd0e30db0\n        /* \"contracts/Manager/UnemetaMarket.sol\":5512:5521  msg.value */\n      callvalue\n        /* \"contracts/Manager/UnemetaMarket.sol\":5484:5524  IWETH(WETH).deposit{value : msg.value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":5578:5593  bytes32 askHash */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":5596:5611  makerAsk.hash() */\n      tag_206\n        /* \"contracts/Manager/UnemetaMarket.sol\":5596:5604  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5596:5609  makerAsk.hash */\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":5596:5611  makerAsk.hash() */\n    tag_206:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5578:5611  bytes32 askHash = makerAsk.hash() */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":5621:5654  _validateOrder(makerAsk, askHash) */\n      tag_208\n        /* \"contracts/Manager/UnemetaMarket.sol\":5636:5644  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5646:5653  askHash */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5621:5635  _validateOrder */\n      tag_148\n        /* \"contracts/Manager/UnemetaMarket.sol\":5621:5654  _validateOrder(makerAsk, askHash) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5706:5727  bool isExecutionValid */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":5778:5795  makerAsk.strategy */\n      tag_209\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_34\n      jump\t// in\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":5764:5820  TheExStrategy(makerAsk.strategy)... */\n      and\n      0xd310677d\n        /* \"contracts/Manager/UnemetaMarket.sol\":5821:5829  takerBid */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":5831:5839  makerAsk */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":5764:5840  TheExStrategy(makerAsk.strategy)... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_210:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_213\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_213:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5705:5840  (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerAsk.strategy)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":5859:5875  isExecutionValid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5851:5904  require(isExecutionValid, \"Strategy should be valid\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_158\n      jump\t// in\n    tag_214:\n        /* \"contracts/Manager/UnemetaMarket.sol\":6072:6076  true */\n      0x01\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6036  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6053  _theUserOrderExecutedOrCancelled[makerAsk.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":6037:6052  makerAsk.signer */\n      tag_216\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_34\n      jump\t// in\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6053  _theUserOrderExecutedOrCancelled[makerAsk.signer] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":6054:6068  makerAsk.nonce */\n      0x0100\n      dup11\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6069  _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6076  _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":6112:6334  _transferFeesAndFundsWithWETH(... */\n      tag_160\n        /* \"contracts/Manager/UnemetaMarket.sol\":6155:6172  makerAsk.strategy */\n      tag_218\n      0xe0\n      dup8\n      add\n      0xc0\n      dup9\n      add\n      tag_34\n      jump\t// in\n    tag_218:\n        /* \"contracts/Manager/UnemetaMarket.sol\":6186:6205  makerAsk.collection */\n      tag_219\n      0x60\n      dup9\n      add\n      0x40\n      dup10\n      add\n      tag_34\n      jump\t// in\n    tag_219:\n        /* \"contracts/Manager/UnemetaMarket.sol\":6219:6226  tokenId */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":6240:6255  makerAsk.signer */\n      tag_220\n      0x40\n      dup11\n      add\n      0x20\n      dup12\n      add\n      tag_34\n      jump\t// in\n    tag_220:\n        /* \"contracts/Manager/UnemetaMarket.sol\":6269:6277  takerBid */\n      dup11\n        /* \"contracts/Manager/UnemetaMarket.sol\":6269:6283  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":6297:6305  makerAsk */\n      dup11\n        /* \"contracts/Manager/UnemetaMarket.sol\":6297:6324  makerAsk.minPercentageToAsk */\n      0x0160\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":6112:6141  _transferFeesAndFundsWithWETH */\n      tag_221\n        /* \"contracts/Manager/UnemetaMarket.sol\":6112:6334  _transferFeesAndFundsWithWETH(... */\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":21282:21564  function updateCurrencyManager(address _currencyManager) external onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":21376:21406  _currencyManager != address(0) */\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":21368:21442  require(_currencyManager != address(0), \"Cannot update to a null address\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_237\n      jump\t// in\n    tag_235:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21452:21467  currencyManager */\n      0x03\n        /* \"contracts/Manager/UnemetaMarket.sol\":21452:21506  currencyManager = TheCurrencyManager(_currencyManager) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":21521:21557  NewCurrencyManager(_currencyManager) */\n      mload(0x40)\n      0xb4f5db40df3aced29e88a4babbc3b46e305e07d34098525d18b1497056e63838\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":21282:21564  function updateCurrencyManager(address _currencyManager) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":9001:10892  function matchesBuyerOrder(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_74:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":9289:9308  makerBid.isOrderAsk */\n      tag_242\n      0x20\n      dup3\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":9289:9297  makerBid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":9289:9308  makerBid.isOrderAsk */\n      tag_133\n      jump\t// in\n    tag_242:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9288:9308  !makerBid.isOrderAsk */\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":9287:9334  (!makerBid.isOrderAsk) && (takerAsk.isOrderAsk) */\n      dup1\n      iszero\n      tag_244\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":9314:9333  takerAsk.isOrderAsk */\n      tag_244\n      0x20\n      dup4\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":9314:9322  takerAsk */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":9314:9333  takerAsk.isOrderAsk */\n      tag_133\n      jump\t// in\n    tag_244:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9279:9361  require((!makerBid.isOrderAsk) && (takerAsk.isOrderAsk), \"Error About Order Side\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_138\n      jump\t// in\n    tag_245:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9434:9448  takerAsk.taker */\n      tag_247\n      0x40\n      dup4\n      add\n      0x20\n      dup5\n      add\n      tag_34\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":9420:9448  msg.sender == takerAsk.taker */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":9420:9430  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":9420:9448  msg.sender == takerAsk.taker */\n      and\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":9412:9477  require(msg.sender == takerAsk.taker, \"Order must be the sender\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_142\n      jump\t// in\n    tag_248:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9521:9536  bytes32 bidHash */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9554  makerBid.hash() */\n      tag_250\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9552  makerBid.hash */\n      tag_144\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9547  makerBid */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9552  makerBid.hash */\n      tag_145\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9554  makerBid.hash() */\n    tag_250:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9521:9554  bytes32 bidHash = makerBid.hash() */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":9606:9639  _validateOrder(makerBid, bidHash) */\n      tag_252\n        /* \"contracts/Manager/UnemetaMarket.sol\":9621:9629  makerBid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":9631:9638  bidHash */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":9606:9620  _validateOrder */\n      tag_148\n        /* \"contracts/Manager/UnemetaMarket.sol\":9606:9639  _validateOrder(makerBid, bidHash) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9715:9736  bool isExecutionValid */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":9787:9804  makerBid.strategy */\n      tag_253\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_34\n      jump\t// in\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":9773:9828  TheExStrategy(makerBid.strategy)... */\n      and\n      0x2a75ffee\n        /* \"contracts/Manager/UnemetaMarket.sol\":9829:9837  takerAsk */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":9839:9847  makerBid */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":9773:9848  TheExStrategy(makerBid.strategy)... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_254:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_257:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9714:9848  (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerBid.strategy)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":9867:9883  isExecutionValid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":9859:9912  require(isExecutionValid, \"Strategy should be valid\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_158\n      jump\t// in\n    tag_258:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10080:10084  true */\n      0x01\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10044  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10061  _theUserOrderExecutedOrCancelled[makerBid.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":10045:10060  makerBid.signer */\n      tag_260\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_34\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10061  _theUserOrderExecutedOrCancelled[makerBid.signer] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":10062:10076  makerBid.nonce */\n      0x0100\n      dup11\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10077  _theUserOrderExecutedOrCancelled[makerBid.signer][makerBid.nonce] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10084  _theUserOrderExecutedOrCancelled[makerBid.signer][makerBid.nonce] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":10119:10272  _transferNonFungibleToken(... */\n      tag_261\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":10158:10177  makerBid.collection */\n      tag_262\n      swap1\n      0x60\n      dup9\n      add\n      swap1\n      dup9\n      add\n      tag_34\n      jump\t// in\n    tag_262:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10191:10201  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":10215:10230  makerBid.signer */\n      tag_169\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_34\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":10119:10272  _transferNonFungibleToken(... */\n    tag_261:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10308:10581  _transferFeesAndFunds(... */\n      tag_264\n        /* \"contracts/Manager/UnemetaMarket.sol\":10343:10360  makerBid.strategy */\n      tag_265\n      0xe0\n      dup8\n      add\n      0xc0\n      dup9\n      add\n      tag_34\n      jump\t// in\n    tag_265:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10374:10393  makerBid.collection */\n      tag_266\n      0x60\n      dup9\n      add\n      0x40\n      dup10\n      add\n      tag_34\n      jump\t// in\n    tag_266:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10407:10414  tokenId */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":10428:10445  makerBid.currency */\n      tag_267\n      0x0100\n      dup11\n      add\n      0xe0\n      dup12\n      add\n      tag_34\n      jump\t// in\n    tag_267:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10459:10474  makerBid.signer */\n      tag_268\n      0x40\n      dup12\n      add\n      0x20\n      dup13\n      add\n      tag_34\n      jump\t// in\n    tag_268:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10488:10502  takerAsk.taker */\n      tag_269\n      0x40\n      dup14\n      add\n      0x20\n      dup15\n      add\n      tag_34\n      jump\t// in\n    tag_269:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10516:10524  takerAsk */\n      dup13\n        /* \"contracts/Manager/UnemetaMarket.sol\":10516:10530  takerAsk.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":10544:10552  takerAsk */\n      dup14\n        /* \"contracts/Manager/UnemetaMarket.sol\":10544:10571  takerAsk.minPercentageToAsk */\n      0x80\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":10308:10329  _transferFeesAndFunds */\n      tag_165\n        /* \"contracts/Manager/UnemetaMarket.sol\":10308:10581  _transferFeesAndFunds(... */\n      jump\t// in\n    tag_264:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10725:10742  makerBid.strategy */\n      tag_270\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_34\n      jump\t// in\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":10597:10885  TakerAsk(... */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":10696:10711  makerBid.signer */\n      tag_271\n      0x40\n      dup8\n      add\n      0x20\n      dup9\n      add\n      tag_34\n      jump\t// in\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":10597:10885  TakerAsk(... */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":10668:10682  takerAsk.taker */\n      tag_272\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_34\n      jump\t// in\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":10597:10885  TakerAsk(... */\n      and\n      0x68cd251d4d267c6e2034ff0088b990352b97b2002c0476587d0c4da889c11330\n        /* \"contracts/Manager/UnemetaMarket.sol\":10619:10626  bidHash */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":10640:10654  makerBid.nonce */\n      0x0100\n      dup11\n      add\n      dup1\n      calldataload\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":10756:10773  makerBid.currency */\n      tag_174\n      swap1\n      0xe0\n      dup14\n      add\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_279\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":11688:12161  function cancelMultipleMakerOrders(uint256[] calldata NonceList) external {... */\n    tag_96:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11780:11800  NonceList.length > 0 */\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":11772:11832  require(NonceList.length > 0, \"Cannot be empty Cancel list\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15074:15076   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":11772:11832  require(NonceList.length > 0, \"Cannot be empty Cancel list\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15056:15077   */\n      mstore\n        /* \"#utility.yul\":15113:15115   */\n      0x1b\n        /* \"#utility.yul\":15093:15111   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15086:15116   */\n      mstore\n        /* \"#utility.yul\":15152:15181   */\n      0x43616e6e6f7420626520656d7074792043616e63656c206c6973740000000000\n        /* \"#utility.yul\":15132:15150   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15125:15182   */\n      mstore\n        /* \"#utility.yul\":15199:15217   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":11772:11832  require(NonceList.length > 0, \"Cannot be empty Cancel list\") */\n      tag_129\n        /* \"#utility.yul\":14872:15223   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":11772:11832  require(NonceList.length > 0, \"Cannot be empty Cancel list\") */\n    tag_283:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11848:11857  uint256 i */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":11843:12096  for (uint256 i = 0; i < NonceList.length; i++) {... */\n    tag_286:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11863:11883  i < NonceList.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/Manager/UnemetaMarket.sol\":11843:12096  for (uint256 i = 0; i < NonceList.length; i++) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":11946:11956  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":11928:11957  userMinOrderNonce[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11928:11945  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":11928:11957  userMinOrderNonce[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Manager/UnemetaMarket.sol\":11912:11921  NonceList */\n      dup4\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":11922:11923  i */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":11912:11924  NonceList[i] */\n      dup2\n      dup2\n      lt\n      tag_290\n      jumpi\n      tag_290\n      tag_291\n      jump\t// in\n    tag_290:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":11912:11957  NonceList[i] >= userMinOrderNonce[msg.sender] */\n      lt\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":11904:12006  require(NonceList[i] >= userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_294\n      jump\t// in\n    tag_292:\n        /* \"contracts/Manager/UnemetaMarket.sol\":12053:12063  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12064  _theUserOrderExecutedOrCancelled[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12052  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12064  _theUserOrderExecutedOrCancelled[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":12081:12085  true */\n      0x01\n      swap2\n        /* \"contracts/Manager/UnemetaMarket.sol\":12065:12074  NonceList */\n      dup6\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":12075:12076  i */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":12065:12077  NonceList[i] */\n      dup2\n      dup2\n      lt\n      tag_296\n      jumpi\n      tag_296\n      tag_291\n      jump\t// in\n    tag_296:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12078  _theUserOrderExecutedOrCancelled[msg.sender][NonceList[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12085  _theUserOrderExecutedOrCancelled[msg.sender][NonceList[i]] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":11885:11888  i++ */\n      dup1\n      dup1\n      tag_297\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n      swap2\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":11843:12096  for (uint256 i = 0; i < NonceList.length; i++) {... */\n      jump(tag_286)\n    tag_287:\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":12132:12142  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":12111:12154  CancelMultipleOrders(msg.sender, NonceList) */\n      and\n      0xfa0ae5d80fe3763c880a3839fab0294171a6f730d1f82c4cd5392c6f67b41732\n        /* \"contracts/Manager/UnemetaMarket.sol\":12144:12153  NonceList */\n      dup4\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":12111:12154  CancelMultipleOrders(msg.sender, NonceList) */\n      mload(0x40)\n      tag_299\n      swap3\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":11688:12161  function cancelMultipleMakerOrders(uint256[] calldata NonceList) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":22544:22839  function updateRoyaltyFeeManager(address _royaltyFeeManager) external onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_302\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":22642:22674  _royaltyFeeManager != address(0) */\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":22634:22710  require(_royaltyFeeManager != address(0), \"Cannot update to a null address\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_237\n      jump\t// in\n    tag_304:\n        /* \"contracts/Manager/UnemetaMarket.sol\":22720:22737  royaltyFeeManager */\n      0x05\n        /* \"contracts/Manager/UnemetaMarket.sol\":22720:22777  royaltyFeeManager = TheRoyaltyManager(_royaltyFeeManager) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":22792:22832  NewRoyaltyFeeManager(_royaltyFeeManager) */\n      mload(0x40)\n      0x80e3874461ebbd918ac3e81da0a92e5e51387d70f337237c9123e48d20e5a508\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":22544:22839  function updateRoyaltyFeeManager(address _royaltyFeeManager) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":11044:11519  function cancelAllOrdersForSender(uint256 minNonce) external {... */\n    tag_109:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11152:11162  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":11134:11163  userMinOrderNonce[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11134:11151  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":11134:11163  userMinOrderNonce[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Manager/UnemetaMarket.sol\":11123:11163  minNonce > userMinOrderNonce[msg.sender] */\n      dup2\n      gt\n        /* \"contracts/Manager/UnemetaMarket.sol\":11115:11212  require(minNonce > userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_294\n      jump\t// in\n    tag_307:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11259:11269  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11270  userMinOrderNonce[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11258  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11270  userMinOrderNonce[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11279  userMinOrderNonce[msg.sender] + 500000 */\n      tag_309\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":11273:11279  500000 */\n      0x07a120\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11279  userMinOrderNonce[msg.sender] + 500000 */\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11230:11238  minNonce */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":11230:11279  minNonce < userMinOrderNonce[msg.sender] + 500000 */\n      lt\n        /* \"contracts/Manager/UnemetaMarket.sol\":11222:11313  require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16693:16695   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":11222:11313  require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16675:16696   */\n      mstore\n        /* \"#utility.yul\":16732:16734   */\n      0x1d\n        /* \"#utility.yul\":16712:16730   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16705:16735   */\n      mstore\n        /* \"#utility.yul\":16771:16802   */\n      0x43616e6e6f742063616e63656c20746f6f206d616e79206f7264657273000000\n        /* \"#utility.yul\":16751:16769   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16744:16803   */\n      mstore\n        /* \"#utility.yul\":16820:16838   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":11222:11313  require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\") */\n      tag_129\n        /* \"#utility.yul\":16491:16844   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":11222:11313  require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\") */\n    tag_311:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11437:11447  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":11419:11448  userMinOrderNonce[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11419:11436  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":11419:11448  userMinOrderNonce[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":11419:11459  userMinOrderNonce[msg.sender] = minNonce */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11475:11512  CancelAllOrders(msg.sender, minNonce) */\n      mload\n      0x1e7178d84f0b0825c65795cd62e7972809ad3aac6917843aaec596161b2c0a97\n      swap1\n      tag_314\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":11451:11459  minNonce */\n      dup5\n        /* \"#utility.yul\":1530:1555   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1518:1520   */\n      0x20\n        /* \"#utility.yul\":1503:1521   */\n      add\n      swap1\n        /* \"#utility.yul\":1384:1561   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":11475:11512  CancelAllOrders(msg.sender, minNonce) */\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":11044:11519  function cancelAllOrdersForSender(uint256 minNonce) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":21721:22004  function updateExecutionManager(address _executionManager) external onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_316\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":21817:21848  _executionManager != address(0) */\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":21809:21884  require(_executionManager != address(0), \"Cannot update to a null address\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_237\n      jump\t// in\n    tag_318:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21894:21910  executionManager */\n      0x04\n        /* \"contracts/Manager/UnemetaMarket.sol\":21894:21944  executionManager = TheExManager(_executionManager) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":21959:21997  NewExecutionManager(_executionManager) */\n      mload(0x40)\n      0x36e2a376eabc3bc60cb88f29c288f53e36874a95a7f407330ab4f166b0905698\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":21721:22004  function updateExecutionManager(address _executionManager) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_321\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17051:17053   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17033:17054   */\n      mstore\n        /* \"#utility.yul\":17090:17092   */\n      0x26\n        /* \"#utility.yul\":17070:17088   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17063:17093   */\n      mstore\n        /* \"#utility.yul\":17129:17163   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":17109:17127   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17102:17164   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":17180:17198   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17173:17209   */\n      mstore\n        /* \"#utility.yul\":17226:17245   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_129\n        /* \"#utility.yul\":16849:17251   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_323:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_326\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":22995:23306  function updateTransferSelectorNFT(address _transferSelectorNFT) external onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_328\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":23097:23131  _transferSelectorNFT != address(0) */\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":23089:23167  require(_transferSelectorNFT != address(0), \"Cannot update to a null address\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_237\n      jump\t// in\n    tag_330:\n        /* \"contracts/Manager/UnemetaMarket.sol\":23177:23196  transferSelectorNFT */\n      0x06\n        /* \"contracts/Manager/UnemetaMarket.sol\":23177:23240  transferSelectorNFT = TheTransferSelector(_transferSelectorNFT) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":23255:23299  NewTransferSelectorNFT(_transferSelectorNFT) */\n      mload(0x40)\n      0x205d78ab41afe80bd6b6aaa5d7599d5300ff8690da3ab1302c1b552f7baf7d8c\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":22995:23306  function updateTransferSelectorNFT(address _transferSelectorNFT) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17458:17460   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17440:17461   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":17477:17495   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17470:17500   */\n      mstore\n        /* \"#utility.yul\":17536:17570   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17516:17534   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17509:17571   */\n      mstore\n        /* \"#utility.yul\":17588:17606   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_129\n        /* \"#utility.yul\":17256:17612   */\n      jump\n        /* \"contracts/libraries/OrderTypes.sol\":2084:2776  function hash(MakerOrder memory makerOrder) internal pure returns (bytes32) {... */\n    tag_146:\n        /* \"contracts/libraries/OrderTypes.sol\":2270:2291  makerOrder.isOrderAsk */\n      dup1\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2309:2326  makerOrder.signer */\n      0x20\n      dup1\n      dup4\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2344:2365  makerOrder.collection */\n      0x40\n      dup1\n      dup6\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2383:2399  makerOrder.price */\n      0x60\n      dup7\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2417:2435  makerOrder.tokenId */\n      0x80\n      dup8\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2453:2470  makerOrder.amount */\n      0xa0\n      dup9\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2488:2507  makerOrder.strategy */\n      0xc0\n      dup10\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2525:2544  makerOrder.currency */\n      0xe0\n      dup11\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2562:2578  makerOrder.nonce */\n      0x0100\n      dup12\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2596:2616  makerOrder.startTime */\n      0x0120\n      dup13\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2634:2652  makerOrder.endTime */\n      0x0140\n      dup14\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2670:2699  makerOrder.minPercentageToAsk */\n      0x0160\n      dup15\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2727:2744  makerOrder.params */\n      0x0180\n      dup16\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2717:2745  keccak256(makerOrder.params) */\n      dup1\n      mload\n      swap1\n      dup15\n      add\n      keccak256\n        /* \"contracts/libraries/OrderTypes.sol\":2208:2759  abi.encode(... */\n      swap11\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2151:2158  bytes32 */\n      0x00\n      swap15\n        /* \"contracts/libraries/OrderTypes.sol\":2208:2759  abi.encode(... */\n      tag_340\n      swap15\n        /* \"contracts/libraries/OrderTypes.sol\":592:658  0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028 */\n      0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028\n      swap15\n        /* \"contracts/libraries/OrderTypes.sol\":2270:2291  makerOrder.isOrderAsk */\n      swap2\n      swap14\n        /* \"contracts/libraries/OrderTypes.sol\":2309:2326  makerOrder.signer */\n      swap2\n      swap13\n        /* \"contracts/libraries/OrderTypes.sol\":2344:2365  makerOrder.collection */\n      swap12\n        /* \"contracts/libraries/OrderTypes.sol\":2383:2399  makerOrder.price */\n      swap11\n        /* \"contracts/libraries/OrderTypes.sol\":2417:2435  makerOrder.tokenId */\n      swap10\n        /* \"contracts/libraries/OrderTypes.sol\":2453:2470  makerOrder.amount */\n      swap9\n        /* \"contracts/libraries/OrderTypes.sol\":2488:2507  makerOrder.strategy */\n      swap8\n        /* \"contracts/libraries/OrderTypes.sol\":2525:2544  makerOrder.currency */\n      swap7\n        /* \"contracts/libraries/OrderTypes.sol\":2562:2578  makerOrder.nonce */\n      swap6\n        /* \"contracts/libraries/OrderTypes.sol\":2596:2616  makerOrder.startTime */\n      swap5\n        /* \"contracts/libraries/OrderTypes.sol\":2634:2652  makerOrder.endTime */\n      swap4\n        /* \"contracts/libraries/OrderTypes.sol\":2670:2699  makerOrder.minPercentageToAsk */\n      swap3\n        /* \"contracts/libraries/OrderTypes.sol\":2208:2759  abi.encode(... */\n      add\n      tag_341\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/libraries/OrderTypes.sol\":2185:2769  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/libraries/OrderTypes.sol\":2170:2769  return... */\n      swap1\n      pop\n        /* \"contracts/libraries/OrderTypes.sol\":2084:2776  function hash(MakerOrder memory makerOrder) internal pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":19013:21126  function _validateOrder(OrderTypes.MakerOrder calldata Make, bytes32 Hash) internal view {... */\n    tag_148:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19239:19271  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":19239:19284  _theUserOrderExecutedOrCancelled[Make.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":19272:19283  Make.signer */\n      tag_343\n      0x40\n      dup6\n      add\n      0x20\n      dup7\n      add\n      tag_34\n      jump\t// in\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":19239:19284  _theUserOrderExecutedOrCancelled[Make.signer] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":19285:19295  Make.nonce */\n      0x0100\n      dup7\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19239:19296  _theUserOrderExecutedOrCancelled[Make.signer][Make.nonce] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":19238:19296  !_theUserOrderExecutedOrCancelled[Make.signer][Make.nonce] */\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":19237:19359  (!_theUserOrderExecutedOrCancelled[Make.signer][Make.nonce]) &&... */\n      dup1\n      iszero\n      tag_344\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":19328:19345  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":19328:19358  userMinOrderNonce[Make.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":19346:19357  Make.signer */\n      tag_345\n      0x40\n      dup6\n      add\n      0x20\n      dup7\n      add\n      tag_34\n      jump\t// in\n    tag_345:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":19328:19358  userMinOrderNonce[Make.signer] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19314:19318  Make */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":19314:19324  Make.nonce */\n      0x0100\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19314:19358  Make.nonce >= userMinOrderNonce[Make.signer] */\n      lt\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":19237:19359  (!_theUserOrderExecutedOrCancelled[Make.signer][Make.nonce]) &&... */\n    tag_344:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19162:19414  require(... */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19015:19017   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":19162:19414  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18997:19018   */\n      mstore\n        /* \"#utility.yul\":19054:19056   */\n      0x1d\n        /* \"#utility.yul\":19034:19052   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19027:19057   */\n      mstore\n        /* \"#utility.yul\":19093:19124   */\n      0x4f726465723a204d61746368696e67206f726465722065787069726564000000\n        /* \"#utility.yul\":19073:19091   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19066:19125   */\n      mstore\n        /* \"#utility.yul\":19142:19160   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":19162:19414  require(... */\n      tag_129\n        /* \"#utility.yul\":18813:19166   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":19162:19414  require(... */\n    tag_346:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19497:19498  0 */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":19474:19485  Make.signer */\n      tag_349\n      0x40\n      dup5\n      add\n      0x20\n      dup6\n      add\n      tag_34\n      jump\t// in\n    tag_349:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":19474:19499  Make.signer != address(0) */\n      and\n      sub\n        /* \"contracts/Manager/UnemetaMarket.sol\":19466:19547  require(Make.signer != address(0), \"The Order signer cannot be the zero address\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19373:19375   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":19466:19547  require(Make.signer != address(0), \"The Order signer cannot be the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19355:19376   */\n      mstore\n        /* \"#utility.yul\":19412:19414   */\n      0x2b\n        /* \"#utility.yul\":19392:19410   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19385:19415   */\n      mstore\n        /* \"#utility.yul\":19451:19485   */\n      0x546865204f72646572207369676e65722063616e6e6f7420626520746865207a\n        /* \"#utility.yul\":19431:19449   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19424:19486   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":19502:19520   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19495:19536   */\n      mstore\n        /* \"#utility.yul\":19553:19572   */\n      0x84\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":19466:19547  require(Make.signer != address(0), \"The Order signer cannot be the zero address\") */\n      tag_129\n        /* \"#utility.yul\":19171:19578   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":19466:19547  require(Make.signer != address(0), \"The Order signer cannot be the zero address\") */\n    tag_350:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19625:19626  0 */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":19611:19615  Make */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":19611:19622  Make.amount */\n      0xa0\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19611:19626  Make.amount > 0 */\n      gt\n        /* \"contracts/Manager/UnemetaMarket.sol\":19603:19672  require(Make.amount > 0, \"The order amount should be greater than 0\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19785:19787   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":19603:19672  require(Make.amount > 0, \"The order amount should be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19767:19788   */\n      mstore\n        /* \"#utility.yul\":19824:19826   */\n      0x29\n        /* \"#utility.yul\":19804:19822   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19797:19827   */\n      mstore\n        /* \"#utility.yul\":19863:19897   */\n      0x546865206f7264657220616d6f756e742073686f756c64206265206772656174\n        /* \"#utility.yul\":19843:19861   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19836:19898   */\n      mstore\n      shl(0xbc, 0x06572207468616e203)\n        /* \"#utility.yul\":19914:19932   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19907:19946   */\n      mstore\n        /* \"#utility.yul\":19963:19982   */\n      0x84\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":19603:19672  require(Make.amount > 0, \"The order amount should be greater than 0\") */\n      tag_129\n        /* \"#utility.yul\":19583:19988   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":19603:19672  require(Make.amount > 0, \"The order amount should be greater than 0\") */\n    tag_353:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19723:20269  abi.encode(... */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19751:19817  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"contracts/Manager/UnemetaMarket.sol\":19723:20269  abi.encode(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":20504:20529   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":19946:20012  0x2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5 */\n      0x2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5\n        /* \"#utility.yul\":20545:20563   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":20538:20572   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":20072:20138  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6 */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"#utility.yul\":20588:20606   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":20581:20615   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":20211:20224  block.chainid */\n      chainid\n        /* \"#utility.yul\":20631:20649   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":20624:20658   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":20250:20254  this */\n      address\n        /* \"#utility.yul\":20674:20693   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":20667:20728   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":19683:19697  bytes32 Domain */\n      0x00\n      swap1\n        /* \"#utility.yul\":20476:20495   */\n      0xc0\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":19723:20269  abi.encode(... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":19700:20279  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":19683:20279  bytes32 Domain = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":20484:20750  SignatureChecker.... */\n      tag_358\n        /* \"contracts/Manager/UnemetaMarket.sol\":20538:20542  Hash */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":20567:20571  Make */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":20567:20578  Make.signer */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_359\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_359:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20614:20620  Make.v */\n      tag_360\n      0x01c0\n      dup8\n      add\n      0x01a0\n      dup9\n      add\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20682:20686  Make */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":20682:20688  Make.r */\n      0x01c0\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":20706:20710  Make */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":20706:20712  Make.s */\n      0x01e0\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":20730:20736  Domain */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":20484:20520  SignatureChecker.... */\n      tag_362\n        /* \"contracts/Manager/UnemetaMarket.sol\":20484:20750  SignatureChecker.... */\n      jump\t// in\n    tag_358:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20463:20794  require(... */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21128:21130   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":20463:20794  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21110:21131   */\n      mstore\n        /* \"#utility.yul\":21167:21169   */\n      0x12\n        /* \"#utility.yul\":21147:21165   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21140:21170   */\n      mstore\n      shl(0x72, 0x14da59db985d1d5c994e88125b9d985b1a59)\n        /* \"#utility.yul\":21186:21204   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21179:21227   */\n      mstore\n        /* \"#utility.yul\":21244:21262   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":20463:20794  require(... */\n      tag_129\n        /* \"#utility.yul\":20926:21268   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":20463:20794  require(... */\n    tag_363:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20856:20871  currencyManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/Manager/UnemetaMarket.sol\":20856:20893  currencyManager.isCurrencyWhitelisted */\n      0x43b938c5\n        /* \"contracts/Manager/UnemetaMarket.sol\":20894:20907  Make.currency */\n      tag_366\n        /* \"contracts/Manager/UnemetaMarket.sol\":20856:20871  currencyManager */\n      0x0100\n        /* \"contracts/Manager/UnemetaMarket.sol\":20894:20907  Make.currency */\n      dup7\n      add\n      0xe0\n      dup8\n      add\n      tag_34\n      jump\t// in\n    tag_366:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20856:20908  currencyManager.isCurrencyWhitelisted(Make.currency) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":205:237   */\n      swap1\n      swap2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":20856:20908  currencyManager.isCurrencyWhitelisted(Make.currency) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":187:238   */\n      mstore\n        /* \"#utility.yul\":160:178   */\n      0x24\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":20856:20908  currencyManager.isCurrencyWhitelisted(Make.currency) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_369\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_369:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_370\n      swap2\n      swap1\n      tag_371\n      jump\t// in\n    tag_370:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20848:20939  require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21725:21727   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":20848:20939  require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21707:21728   */\n      mstore\n        /* \"#utility.yul\":21764:21766   */\n      0x1a\n        /* \"#utility.yul\":21744:21762   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21737:21767   */\n      mstore\n        /* \"#utility.yul\":21803:21831   */\n      0x204e6f7420696e2043757272656e63792077686974656c697374000000000000\n        /* \"#utility.yul\":21783:21801   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21776:21832   */\n      mstore\n        /* \"#utility.yul\":21849:21867   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":20848:20939  require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\") */\n      tag_129\n        /* \"#utility.yul\":21523:21873   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":20848:20939  require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\") */\n    tag_372:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21035:21051  executionManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Manager/UnemetaMarket.sol\":21035:21073  executionManager.isStrategyWhitelisted */\n      0x999ba27c\n        /* \"contracts/Manager/UnemetaMarket.sol\":21074:21087  Make.strategy */\n      tag_375\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_34\n      jump\t// in\n    tag_375:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21035:21088  executionManager.isStrategyWhitelisted(Make.strategy) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":205:237   */\n      swap1\n      swap2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":21035:21088  executionManager.isStrategyWhitelisted(Make.strategy) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":187:238   */\n      mstore\n        /* \"#utility.yul\":160:178   */\n      0x24\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":21035:21088  executionManager.isStrategyWhitelisted(Make.strategy) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_378\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_378:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_379\n      swap2\n      swap1\n      tag_371\n      jump\t// in\n    tag_379:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21027:21119  require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22080:22082   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":21027:21119  require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22062:22083   */\n      mstore\n        /* \"#utility.yul\":22119:22121   */\n      0x1a\n        /* \"#utility.yul\":22099:22117   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22092:22122   */\n      mstore\n        /* \"#utility.yul\":22158:22186   */\n      0x204e6f7420696e2053747261746567792077686974656c697374000000000000\n        /* \"#utility.yul\":22138:22156   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22131:22187   */\n      mstore\n        /* \"#utility.yul\":22204:22222   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":21027:21119  require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\") */\n      tag_129\n        /* \"#utility.yul\":21878:22228   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":21027:21119  require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\") */\n    tag_380:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19102:21126  {... */\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":19013:21126  function _validateOrder(OrderTypes.MakerOrder calldata Make, bytes32 Hash) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":13294:15165  function _transferFeesAndFunds(... */\n    tag_165:\n        /* \"contracts/Manager/UnemetaMarket.sol\":13619:13625  amount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":13591:13616  uint256 finalSellerAmount */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":13714:13753  _calculateProtocolFee(strategy, amount) */\n      tag_384\n        /* \"contracts/Manager/UnemetaMarket.sol\":13736:13744  strategy */\n      dup11\n        /* \"contracts/Manager/UnemetaMarket.sol\":13619:13625  amount */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":13714:13735  _calculateProtocolFee */\n      tag_385\n        /* \"contracts/Manager/UnemetaMarket.sol\":13714:13753  _calculateProtocolFee(strategy, amount) */\n      jump\t// in\n    tag_384:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14022:14042  protocolFeeRecipient */\n      sload(0x02)\n        /* \"contracts/Manager/UnemetaMarket.sol\":13686:13753  uint256 protocolFeeAmount = _calculateProtocolFee(strategy, amount) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14022:14042  protocolFeeRecipient */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14022:14056  protocolFeeRecipient != address(0) */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":14021:14085  (protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0) */\n      tag_386\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14062:14084  protocolFeeAmount != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":14021:14085  (protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0) */\n    tag_386:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14017:14244  if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {... */\n      iszero\n      tag_387\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":14141:14161  protocolFeeRecipient */\n      sload(0x02)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14101:14181  IERC20(currency).safeTransferFrom(from, protocolFeeRecipient, protocolFeeAmount) */\n      tag_388\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14101:14134  IERC20(currency).safeTransferFrom */\n      dup10\n      dup2\n      and\n      swap2\n        /* \"contracts/Manager/UnemetaMarket.sol\":14135:14139  from */\n      dup10\n      swap2\n        /* \"contracts/Manager/UnemetaMarket.sol\":14141:14161  protocolFeeRecipient */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14163:14180  protocolFeeAmount */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":14101:14134  IERC20(currency).safeTransferFrom */\n      tag_198\n        /* \"contracts/Manager/UnemetaMarket.sol\":14101:14181  IERC20(currency).safeTransferFrom(from, protocolFeeRecipient, protocolFeeAmount) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14195:14233  finalSellerAmount -= protocolFeeAmount */\n      tag_389\n        /* \"contracts/Manager/UnemetaMarket.sol\":14216:14233  protocolFeeAmount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":14195:14233  finalSellerAmount -= protocolFeeAmount */\n      dup4\n      tag_197\n      jump\t// in\n    tag_389:\n      swap2\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14017:14244  if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {... */\n    tag_387:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14368  royaltyFeeManager */\n      sload(0x05)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14441  royaltyFeeManager... */\n      mload(0x40)\n      shl(0xe1, 0x7a7b1afd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22453:22485   */\n      dup12\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14441  royaltyFeeManager... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":22435:22486   */\n      mstore\n        /* \"#utility.yul\":22502:22520   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22495:22529   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":22545:22563   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22538:22572   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":14294:14321  address royaltyFeeRecipient */\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14368  royaltyFeeManager */\n      swap2\n      and\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14412  royaltyFeeManager... */\n      0xf4f635fa\n      swap1\n        /* \"#utility.yul\":22408:22426   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14441  royaltyFeeManager... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_394\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14293:14441  (address royaltyFeeRecipient, uint256 royaltyFeeAmount) = royaltyFeeManager... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14537:14570  royaltyFeeRecipient != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":14536:14598  (royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0) */\n      tag_396\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14576:14597  royaltyFeeAmount != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":14536:14598  (royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0) */\n    tag_396:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14532:14858  if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {... */\n      iszero\n      tag_397\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":14614:14692  IERC20(currency).safeTransferFrom(from, royaltyFeeRecipient, royaltyFeeAmount) */\n      tag_398\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14614:14647  IERC20(currency).safeTransferFrom */\n      dup11\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14648:14652  from */\n      dup10\n        /* \"contracts/Manager/UnemetaMarket.sol\":14654:14673  royaltyFeeRecipient */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":14675:14691  royaltyFeeAmount */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":14614:14647  IERC20(currency).safeTransferFrom */\n      tag_198\n        /* \"contracts/Manager/UnemetaMarket.sol\":14614:14692  IERC20(currency).safeTransferFrom(from, royaltyFeeRecipient, royaltyFeeAmount) */\n      jump\t// in\n    tag_398:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14706:14743  finalSellerAmount -= royaltyFeeAmount */\n      tag_399\n        /* \"contracts/Manager/UnemetaMarket.sol\":14727:14743  royaltyFeeAmount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":14706:14743  finalSellerAmount -= royaltyFeeAmount */\n      dup6\n      tag_197\n      jump\t// in\n    tag_399:\n      swap4\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14799:14818  royaltyFeeRecipient */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14763:14847  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount) */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14790:14797  tokenId */\n      dup11\n        /* \"contracts/Manager/UnemetaMarket.sol\":14778:14788  collection */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14763:14847  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount) */\n      and\n      0x27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d\n        /* \"contracts/Manager/UnemetaMarket.sol\":14820:14828  currency */\n      dup13\n        /* \"contracts/Manager/UnemetaMarket.sol\":14830:14846  royaltyFeeAmount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":14763:14847  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount) */\n      mload(0x40)\n      tag_400\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":23092:23124   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":23074:23125   */\n      dup3\n      mstore\n        /* \"#utility.yul\":23156:23158   */\n      0x20\n        /* \"#utility.yul\":23141:23159   */\n      dup3\n      add\n        /* \"#utility.yul\":23134:23168   */\n      mstore\n        /* \"#utility.yul\":23062:23064   */\n      0x40\n        /* \"#utility.yul\":23047:23065   */\n      add\n      swap1\n        /* \"#utility.yul\":22900:23174   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":14763:14847  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount) */\n    tag_400:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Manager/UnemetaMarket.sol\":14532:14858  if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {... */\n    tag_397:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14981:15008  minPercentageToAsk * amount */\n      tag_402\n        /* \"contracts/Manager/UnemetaMarket.sol\":15002:15008  amount */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":14981:14999  minPercentageToAsk */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":14981:15008  minPercentageToAsk * amount */\n      tag_403\n      jump\t// in\n    tag_402:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14950:14975  finalSellerAmount * 10000 */\n      tag_404\n        /* \"contracts/Manager/UnemetaMarket.sol\":14950:14967  finalSellerAmount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":14970:14975  10000 */\n      0x2710\n        /* \"contracts/Manager/UnemetaMarket.sol\":14950:14975  finalSellerAmount * 10000 */\n      tag_403\n      jump\t// in\n    tag_404:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14949:15009  (finalSellerAmount * 10000) >= (minPercentageToAsk * amount) */\n      lt\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":14941:15048  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_407\n      jump\t// in\n    tag_405:\n        /* \"contracts/Manager/UnemetaMarket.sol\":15095:15157  IERC20(currency).safeTransferFrom(from, to, finalSellerAmount) */\n      tag_408\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":15095:15128  IERC20(currency).safeTransferFrom */\n      dup11\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":15129:15133  from */\n      dup10\n        /* \"contracts/Manager/UnemetaMarket.sol\":15135:15137  to */\n      dup10\n        /* \"contracts/Manager/UnemetaMarket.sol\":15139:15156  finalSellerAmount */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":15095:15128  IERC20(currency).safeTransferFrom */\n      tag_198\n        /* \"contracts/Manager/UnemetaMarket.sol\":15095:15157  IERC20(currency).safeTransferFrom(from, to, finalSellerAmount) */\n      jump\t// in\n    tag_408:\n        /* \"contracts/Manager/UnemetaMarket.sol\":13547:15165  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":13294:15165  function _transferFeesAndFunds(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":17717:18298  function _transferNonFungibleToken(... */\n    tag_170:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:17986  transferSelectorNFT */\n      sload(0x06)\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:18027  transferSelectorNFT.checkTransferManagerForToken(collection) */\n      mload(0x40)\n      shl(0xe0, 0xcc159493)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":205:237   */\n      dup8\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:18027  transferSelectorNFT.checkTransferManagerForToken(collection) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":187:238   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":17949:17964  address Manager */\n      0x00\n      swap3\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:17986  transferSelectorNFT */\n      and\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:18015  transferSelectorNFT.checkTransferManagerForToken */\n      0xcc159493\n      swap1\n        /* \"#utility.yul\":160:178   */\n      0x24\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:18027  transferSelectorNFT.checkTransferManagerForToken(collection) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_412\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_412:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_413\n      swap2\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17949:18027  address Manager = transferSelectorNFT.checkTransferManagerForToken(collection) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":18088:18109  Manager != address(0) */\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":18080:18142  require(Manager != address(0), \"Can't fount transfer manager\") */\n      tag_415\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":24213:24215   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":18080:18142  require(Manager != address(0), \"Can't fount transfer manager\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":24195:24216   */\n      mstore\n        /* \"#utility.yul\":24252:24254   */\n      0x1c\n        /* \"#utility.yul\":24232:24250   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":24225:24255   */\n      mstore\n        /* \"#utility.yul\":24291:24321   */\n      0x43616e277420666f756e74207472616e73666572206d616e6167657200000000\n        /* \"#utility.yul\":24271:24289   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":24264:24322   */\n      mstore\n        /* \"#utility.yul\":24339:24357   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":18080:18142  require(Manager != address(0), \"Can't fount transfer manager\") */\n      tag_129\n        /* \"#utility.yul\":24011:24363   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":18080:18142  require(Manager != address(0), \"Can't fount transfer manager\") */\n    tag_415:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18200:18291  TheTransferManager(Manager).transferNonFungibleToken(collection, from, to, tokenId, amount) */\n      mload(0x40)\n      shl(0xe0, 0x33f2fa9f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":24683:24698   */\n      dup8\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":18200:18291  TheTransferManager(Manager).transferNonFungibleToken(collection, from, to, tokenId, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":24665:24699   */\n      mstore\n        /* \"#utility.yul\":24735:24750   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":24715:24733   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":24708:24751   */\n      mstore\n        /* \"#utility.yul\":24787:24802   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":24767:24785   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":24760:24803   */\n      mstore\n        /* \"#utility.yul\":24819:24837   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":24812:24846   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":24862:24881   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":24855:24890   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":18200:18252  TheTransferManager(Manager).transferNonFungibleToken */\n      dup3\n      and\n      swap1\n      0x33f2fa9f\n      swap1\n        /* \"#utility.yul\":24599:24618   */\n      0xa4\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":18200:18291  TheTransferManager(Manager).transferNonFungibleToken(collection, from, to, tokenId, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_420\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_420:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_422\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_422:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":17886:18298  {... */\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":17717:18298  function _transferNonFungibleToken(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":25159:25174   */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":25141:25175   */\n      mstore\n        /* \"#utility.yul\":25211:25226   */\n      dup4\n      and\n        /* \"#utility.yul\":25191:25209   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":25184:25227   */\n      mstore\n        /* \"#utility.yul\":25243:25261   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":25236:25270   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_424\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":25076:25094   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n    tag_425:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_427\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":15615:17410  function _transferFeesAndFundsWithWETH(... */\n    tag_221:\n        /* \"contracts/Manager/UnemetaMarket.sol\":15903:15909  amount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":15875:15900  uint256 finalSellerAmount */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":15998:16037  _calculateProtocolFee(strategy, amount) */\n      tag_429\n        /* \"contracts/Manager/UnemetaMarket.sol\":16020:16028  strategy */\n      dup9\n        /* \"contracts/Manager/UnemetaMarket.sol\":15903:15909  amount */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":15998:16019  _calculateProtocolFee */\n      tag_385\n        /* \"contracts/Manager/UnemetaMarket.sol\":15998:16037  _calculateProtocolFee(strategy, amount) */\n      jump\t// in\n    tag_429:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16307:16327  protocolFeeRecipient */\n      sload(0x02)\n        /* \"contracts/Manager/UnemetaMarket.sol\":15970:16037  uint256 protocolFeeAmount = _calculateProtocolFee(strategy, amount) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":16307:16327  protocolFeeRecipient */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":16307:16341  protocolFeeRecipient != address(0) */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":16306:16370  (protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0) */\n      tag_430\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":16347:16369  protocolFeeAmount != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":16306:16370  (protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0) */\n    tag_430:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16302:16515  if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {... */\n      iszero\n      tag_431\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":16412:16432  protocolFeeRecipient */\n      sload(0x02)\n        /* \"contracts/Manager/UnemetaMarket.sol\":16386:16452  IERC20(WETH).safeTransfer(protocolFeeRecipient, protocolFeeAmount) */\n      tag_432\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":16393:16397  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":16386:16411  IERC20(WETH).safeTransfer */\n      dup2\n      and\n      swap2\n        /* \"contracts/Manager/UnemetaMarket.sol\":16412:16432  protocolFeeRecipient */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":16434:16451  protocolFeeAmount */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":16386:16411  IERC20(WETH).safeTransfer */\n      tag_433\n        /* \"contracts/Manager/UnemetaMarket.sol\":16386:16452  IERC20(WETH).safeTransfer(protocolFeeRecipient, protocolFeeAmount) */\n      jump\t// in\n    tag_432:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16466:16504  finalSellerAmount -= protocolFeeAmount */\n      tag_434\n        /* \"contracts/Manager/UnemetaMarket.sol\":16487:16504  protocolFeeAmount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":16466:16504  finalSellerAmount -= protocolFeeAmount */\n      dup4\n      tag_197\n      jump\t// in\n    tag_434:\n      swap2\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":16302:16515  if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {... */\n    tag_431:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16636  royaltyFeeManager */\n      sload(0x05)\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16709  royaltyFeeManager... */\n      mload(0x40)\n      shl(0xe1, 0x7a7b1afd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22453:22485   */\n      dup10\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16709  royaltyFeeManager... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":22435:22486   */\n      mstore\n        /* \"#utility.yul\":22502:22520   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22495:22529   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":22545:22563   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22538:22572   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":16562:16589  address royaltyFeeRecipient */\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16636  royaltyFeeManager */\n      swap2\n      and\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16680  royaltyFeeManager... */\n      0xf4f635fa\n      swap1\n        /* \"#utility.yul\":22408:22426   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16709  royaltyFeeManager... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_437\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_437:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_438\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_438:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16561:16709  (address royaltyFeeRecipient, uint256 royaltyFeeAmount) = royaltyFeeManager... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":16805:16838  royaltyFeeRecipient != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":16804:16866  (royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0) */\n      tag_439\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":16844:16865  royaltyFeeAmount != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":16804:16866  (royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0) */\n    tag_439:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16800:17117  if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {... */\n      iszero\n      tag_440\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":16882:16946  IERC20(WETH).safeTransfer(royaltyFeeRecipient, royaltyFeeAmount) */\n      tag_441\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":16889:16893  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":16882:16907  IERC20(WETH).safeTransfer */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":16908:16927  royaltyFeeRecipient */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":16929:16945  royaltyFeeAmount */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":16882:16907  IERC20(WETH).safeTransfer */\n      tag_433\n        /* \"contracts/Manager/UnemetaMarket.sol\":16882:16946  IERC20(WETH).safeTransfer(royaltyFeeRecipient, royaltyFeeAmount) */\n      jump\t// in\n    tag_441:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16960:16997  finalSellerAmount -= royaltyFeeAmount */\n      tag_442\n        /* \"contracts/Manager/UnemetaMarket.sol\":16981:16997  royaltyFeeAmount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":16960:16997  finalSellerAmount -= royaltyFeeAmount */\n      dup6\n      tag_197\n      jump\t// in\n    tag_442:\n      swap4\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":17053:17072  royaltyFeeRecipient */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":17017:17106  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount) */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":17044:17051  tokenId */\n      dup9\n        /* \"contracts/Manager/UnemetaMarket.sol\":17032:17042  collection */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":17017:17106  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount) */\n      and\n      0x27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d\n        /* \"contracts/Manager/UnemetaMarket.sol\":17082:17086  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":17089:17105  royaltyFeeAmount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":17017:17106  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount) */\n      mload(0x40)\n      tag_443\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":23092:23124   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":23074:23125   */\n      dup3\n      mstore\n        /* \"#utility.yul\":23156:23158   */\n      0x20\n        /* \"#utility.yul\":23141:23159   */\n      dup3\n      add\n        /* \"#utility.yul\":23134:23168   */\n      mstore\n        /* \"#utility.yul\":23062:23064   */\n      0x40\n        /* \"#utility.yul\":23047:23065   */\n      add\n      swap1\n        /* \"#utility.yul\":22900:23174   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":17017:17106  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount) */\n    tag_443:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Manager/UnemetaMarket.sol\":16800:17117  if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {... */\n    tag_440:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17241:17268  minPercentageToAsk * amount */\n      tag_444\n        /* \"contracts/Manager/UnemetaMarket.sol\":17262:17268  amount */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":17241:17259  minPercentageToAsk */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":17241:17268  minPercentageToAsk * amount */\n      tag_403\n      jump\t// in\n    tag_444:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17210:17235  finalSellerAmount * 10000 */\n      tag_445\n        /* \"contracts/Manager/UnemetaMarket.sol\":17210:17227  finalSellerAmount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":17230:17235  10000 */\n      0x2710\n        /* \"contracts/Manager/UnemetaMarket.sol\":17210:17235  finalSellerAmount * 10000 */\n      tag_403\n      jump\t// in\n    tag_445:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17209:17269  (finalSellerAmount * 10000) >= (minPercentageToAsk * amount) */\n      lt\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":17201:17308  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n      tag_446\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_407\n      jump\t// in\n    tag_446:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17354:17402  IERC20(WETH).safeTransfer(to, finalSellerAmount) */\n      tag_422\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":17361:17365  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":17354:17379  IERC20(WETH).safeTransfer */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":17380:17382  to */\n      dup9\n        /* \"contracts/Manager/UnemetaMarket.sol\":17384:17401  finalSellerAmount */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":17354:17379  IERC20(WETH).safeTransfer */\n      tag_433\n        /* \"contracts/Manager/UnemetaMarket.sol\":17354:17402  IERC20(WETH).safeTransfer(to, finalSellerAmount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SignatureChecker.sol\":1743:2649  function verify(... */\n    tag_362:\n        /* \"contracts/libraries/SignatureChecker.sol\":2124:2175  abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash) */\n      mload(0x40)\n      shl(0xf0, 0x1901)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":25539:25566   */\n      mstore\n        /* \"#utility.yul\":25582:25593   */\n      0x22\n      dup2\n      add\n        /* \"#utility.yul\":25575:25602   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":25618:25630   */\n      0x42\n      dup2\n      add\n        /* \"#utility.yul\":25611:25639   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":1922:1926  bool */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"#utility.yul\":25655:25667   */\n      0x62\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":2124:2175  abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":2114:2176  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/libraries/SignatureChecker.sol\":2097:2176  bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash)) */\n      swap1\n      pop\n        /* \"contracts/libraries/SignatureChecker.sol\":2250:2276  Address.isContract(signer) */\n      tag_454\n        /* \"contracts/libraries/SignatureChecker.sol\":2269:2275  signer */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":2250:2276  Address.isContract(signer) */\n    tag_454:\n        /* \"contracts/libraries/SignatureChecker.sol\":2246:2643  if (Address.isContract(signer)) {... */\n      iszero\n      tag_456\n      jumpi\n        /* \"contracts/libraries/SignatureChecker.sol\":2453:2478  abi.encodePacked(r, s, v) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":25859:25878   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":25894:25906   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":25887:25915   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":25971:25974   */\n      0xf8\n        /* \"#utility.yul\":25949:25965   */\n      dup9\n      swap1\n      shl\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"#utility.yul\":25945:25981   */\n      and\n        /* \"#utility.yul\":25931:25943   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":25924:25982   */\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":2453:2478  abi.encodePacked(r, s, v) */\n      dup2\n      mload\n      0x41\n      dup2\n      dup4\n      sub\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":25998:26010   */\n      0x61\n      dup3\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":2453:2478  abi.encodePacked(r, s, v) */\n      swap3\n      dup4\n      swap1\n      mstore\n      shl(0xe1, 0x0b135d3f)\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2479  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) */\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2444  IERC1271(signer).isValidSignature */\n      dup10\n      and\n      swap2\n      0x1626ba7e\n      swap2\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2479  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) */\n      tag_459\n      swap2\n        /* \"contracts/libraries/SignatureChecker.sol\":2445:2451  digest */\n      dup6\n      swap2\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2479  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) */\n      0x65\n      add\n      tag_460\n      jump\t// in\n    tag_459:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_462\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_462:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_463\n      swap2\n      swap1\n      tag_464\n      jump\t// in\n    tag_463:\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2493  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) == 0x1626ba7e */\n      not\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":2483:2493  0x1626ba7e */\n      0x1626ba7e\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2493  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) == 0x1626ba7e */\n      0xe0\n      shl\n      eq\n        /* \"contracts/libraries/SignatureChecker.sol\":2404:2493  return IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) == 0x1626ba7e */\n      swap2\n      pop\n      pop\n      jump(tag_451)\n        /* \"contracts/libraries/SignatureChecker.sol\":2246:2643  if (Address.isContract(signer)) {... */\n    tag_456:\n        /* \"contracts/libraries/SignatureChecker.sol\":2626:2632  signer */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2632  recover(digest, v, r, s) == signer */\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2622  recover(digest, v, r, s) */\n      tag_466\n        /* \"contracts/libraries/SignatureChecker.sol\":2606:2612  digest */\n      dup3\n        /* \"contracts/libraries/SignatureChecker.sol\":2614:2615  v */\n      dup9\n        /* \"contracts/libraries/SignatureChecker.sol\":2617:2618  r */\n      dup9\n        /* \"contracts/libraries/SignatureChecker.sol\":2620:2621  s */\n      dup9\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2605  recover */\n      tag_467\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2622  recover(digest, v, r, s) */\n      jump\t// in\n    tag_466:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2632  recover(digest, v, r, s) == signer */\n      and\n      eq\n        /* \"contracts/libraries/SignatureChecker.sol\":2591:2632  return recover(digest, v, r, s) == signer */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SignatureChecker.sol\":1743:2649  function verify(... */\n    tag_451:\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":18551:18781  function _calculateProtocolFee(address theStrategy, uint256 amount) internal view returns (uint256) {... */\n    tag_385:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18642:18649  uint256 */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":18661:18680  uint256 protocolFee */\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":18697:18708  theStrategy */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/UnemetaMarket.sol\":18683:18725  TheExStrategy(theStrategy).viewProtocolFee */\n      and\n      0x9dd1cda6\n        /* \"contracts/Manager/UnemetaMarket.sol\":18683:18727  TheExStrategy(theStrategy).viewProtocolFee() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_470\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_470:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_471\n      swap2\n      swap1\n      tag_472\n      jump\t// in\n    tag_471:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18661:18727  uint256 protocolFee = TheExStrategy(theStrategy).viewProtocolFee() */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":18769:18774  10000 */\n      0x2710\n        /* \"contracts/Manager/UnemetaMarket.sol\":18745:18765  protocolFee * amount */\n      tag_473\n        /* \"contracts/Manager/UnemetaMarket.sol\":18759:18765  amount */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":18661:18727  uint256 protocolFee = TheExStrategy(theStrategy).viewProtocolFee() */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":18745:18765  protocolFee * amount */\n      tag_403\n      jump\t// in\n    tag_473:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18744:18774  (protocolFee * amount) / 10000 */\n      tag_474\n      swap2\n      swap1\n      tag_475\n      jump\t// in\n    tag_474:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18737:18774  return (protocolFee * amount) / 10000 */\n      swap5\n        /* \"contracts/Manager/UnemetaMarket.sol\":18551:18781  function _calculateProtocolFee(address theStrategy, uint256 amount) internal view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_427:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_477\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      and\n      tag_478\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_477:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_380\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_480\n      swap2\n      swap1\n      tag_371\n      jump\t// in\n    tag_480:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":27752:27754   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":27734:27755   */\n      mstore\n        /* \"#utility.yul\":27791:27793   */\n      0x2a\n        /* \"#utility.yul\":27771:27789   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":27764:27794   */\n      mstore\n        /* \"#utility.yul\":27830:27864   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":27810:27828   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":27803:27865   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":27881:27899   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":27874:27914   */\n      mstore\n        /* \"#utility.yul\":27931:27950   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_129\n        /* \"#utility.yul\":27550:27956   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_433:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":23092:23124   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23074:23125   */\n      mstore\n        /* \"#utility.yul\":23141:23159   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":23134:23168   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_380\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":23047:23065   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      tag_425\n        /* \"#utility.yul\":22900:23174   */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":688:1459  function recover(... */\n    tag_467:\n        /* \"contracts/libraries/SignatureChecker.sol\":811:818  address */\n      0x00\n        /* \"contracts/libraries/SignatureChecker.sol\":1083:1149  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"contracts/libraries/SignatureChecker.sol\":1069:1149  uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup3\n      gt\n      iszero\n        /* \"contracts/libraries/SignatureChecker.sol\":1048:1195  require(... */\n      tag_489\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":28163:28165   */\n      0x20\n        /* \"contracts/libraries/SignatureChecker.sol\":1048:1195  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":28145:28166   */\n      mstore\n        /* \"#utility.yul\":28202:28204   */\n      0x14\n        /* \"#utility.yul\":28182:28200   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":28175:28205   */\n      mstore\n      shl(0x61, 0x1024b73b30b634b21039903830b930b6b2ba32b9)\n        /* \"#utility.yul\":28221:28239   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":28214:28264   */\n      mstore\n        /* \"#utility.yul\":28281:28299   */\n      0x64\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":1048:1195  require(... */\n      tag_129\n        /* \"#utility.yul\":27961:28305   */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":1048:1195  require(... */\n    tag_489:\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1215  v */\n      dup4\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1221  v == 27 */\n      0xff\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":1219:1221  27 */\n      0x1b\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1221  v == 27 */\n      eq\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1232  v == 27 || v == 28 */\n      dup1\n      tag_492\n      jumpi\n      pop\n        /* \"contracts/libraries/SignatureChecker.sol\":1225:1226  v */\n      dup4\n        /* \"contracts/libraries/SignatureChecker.sol\":1225:1232  v == 28 */\n      0xff\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":1230:1232  28 */\n      0x1c\n        /* \"contracts/libraries/SignatureChecker.sol\":1225:1232  v == 28 */\n      eq\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1232  v == 27 || v == 28 */\n    tag_492:\n        /* \"contracts/libraries/SignatureChecker.sol\":1206:1256  require(v == 27 || v == 28, \"Invalid v parameter\") */\n      tag_493\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":28512:28514   */\n      0x20\n        /* \"contracts/libraries/SignatureChecker.sol\":1206:1256  require(v == 27 || v == 28, \"Invalid v parameter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":28494:28515   */\n      mstore\n        /* \"#utility.yul\":28551:28553   */\n      0x13\n        /* \"#utility.yul\":28531:28549   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":28524:28554   */\n      mstore\n      shl(0x69, 0x24b73b30b634b2103b103830b930b6b2ba32b9)\n        /* \"#utility.yul\":28570:28588   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":28563:28612   */\n      mstore\n        /* \"#utility.yul\":28629:28647   */\n      0x64\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":1206:1256  require(v == 27 || v == 28, \"Invalid v parameter\") */\n      tag_129\n        /* \"#utility.yul\":28310:28653   */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":1206:1256  require(v == 27 || v == 28, \"Invalid v parameter\") */\n    tag_493:\n        /* \"contracts/libraries/SignatureChecker.sol\":1346:1370  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/libraries/SignatureChecker.sol\":1329:1343  address signer */\n      0x00\n        /* \"contracts/libraries/SignatureChecker.sol\":1346:1370  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":28885:28910   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":28958:28962   */\n      0xff\n        /* \"#utility.yul\":28946:28963   */\n      dup8\n      and\n        /* \"#utility.yul\":28926:28944   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":28919:28964   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":28980:28998   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":28973:29007   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":29023:29041   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":29016:29050   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":1346:1370  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":28857:28876   */\n      0xa0\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":1346:1370  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_499\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_499:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/SignatureChecker.sol\":1388:1408  signer != address(0) */\n      dup2\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":1380:1428  require(signer != address(0), \" Invalid signer\") */\n      tag_500\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":29263:29265   */\n      0x20\n        /* \"contracts/libraries/SignatureChecker.sol\":1380:1428  require(signer != address(0), \" Invalid signer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":29245:29266   */\n      mstore\n        /* \"#utility.yul\":29302:29304   */\n      0x0f\n        /* \"#utility.yul\":29282:29300   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":29275:29305   */\n      mstore\n      shl(0x89, 0x1024b73b30b634b21039b4b3b732b9)\n        /* \"#utility.yul\":29321:29339   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":29314:29359   */\n      mstore\n        /* \"#utility.yul\":29376:29394   */\n      0x64\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":1380:1428  require(signer != address(0), \" Invalid signer\") */\n      tag_129\n        /* \"#utility.yul\":29061:29400   */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":1380:1428  require(signer != address(0), \" Invalid signer\") */\n    tag_500:\n        /* \"contracts/libraries/SignatureChecker.sol\":1446:1452  signer */\n      swap6\n        /* \"contracts/libraries/SignatureChecker.sol\":688:1459  function recover(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_478:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_504\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_505\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_503:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_505:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_507\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":29607:29609   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":29589:29610   */\n      mstore\n        /* \"#utility.yul\":29646:29648   */\n      0x26\n        /* \"#utility.yul\":29626:29644   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":29619:29649   */\n      mstore\n        /* \"#utility.yul\":29685:29719   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":29665:29683   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":29658:29720   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":29736:29754   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":29729:29765   */\n      mstore\n        /* \"#utility.yul\":29782:29801   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_129\n        /* \"#utility.yul\":29405:29807   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_507:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_511\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":30014:30016   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":29996:30017   */\n      mstore\n        /* \"#utility.yul\":30053:30055   */\n      0x1d\n        /* \"#utility.yul\":30033:30051   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":30026:30056   */\n      mstore\n        /* \"#utility.yul\":30092:30123   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":30072:30090   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":30065:30124   */\n      mstore\n        /* \"#utility.yul\":30141:30159   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_129\n        /* \"#utility.yul\":29812:30165   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_511:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_514\n      swap2\n      swap1\n      tag_515\n      jump\t// in\n    tag_514:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_518\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_517)\n    tag_518:\n      0x60\n      swap2\n      pop\n    tag_517:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_519\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_520\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_519:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_520:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_522\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_503)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_522:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      tag_524\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n    tag_524:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_527\n      jump\t// in\n        /* \"#utility.yul\":249:380   */\n    tag_528:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":324:355   */\n      dup2\n      and\n        /* \"#utility.yul\":314:356   */\n      dup2\n      eq\n        /* \"#utility.yul\":304:374   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":370:371   */\n      0x00\n        /* \"#utility.yul\":367:368   */\n      dup1\n        /* \"#utility.yul\":360:372   */\n      revert\n        /* \"#utility.yul\":385:519   */\n    tag_529:\n        /* \"#utility.yul\":453:473   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":482:513   */\n      tag_549\n        /* \"#utility.yul\":453:473   */\n      dup2\n        /* \"#utility.yul\":482:513   */\n      tag_528\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":385:519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":524:771   */\n    tag_34:\n        /* \"#utility.yul\":583:589   */\n      0x00\n        /* \"#utility.yul\":636:638   */\n      0x20\n        /* \"#utility.yul\":624:633   */\n      dup3\n        /* \"#utility.yul\":615:622   */\n      dup5\n        /* \"#utility.yul\":611:634   */\n      sub\n        /* \"#utility.yul\":607:639   */\n      slt\n        /* \"#utility.yul\":604:656   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":652:653   */\n      0x00\n        /* \"#utility.yul\":649:650   */\n      dup1\n        /* \"#utility.yul\":642:654   */\n      revert\n        /* \"#utility.yul\":604:656   */\n    tag_551:\n        /* \"#utility.yul\":691:700   */\n      dup2\n        /* \"#utility.yul\":678:701   */\n      calldataload\n        /* \"#utility.yul\":710:741   */\n      tag_503\n        /* \"#utility.yul\":735:740   */\n      dup2\n        /* \"#utility.yul\":710:741   */\n      tag_528\n      jump\t// in\n        /* \"#utility.yul\":776:1091   */\n    tag_39:\n        /* \"#utility.yul\":844:850   */\n      0x00\n        /* \"#utility.yul\":852:858   */\n      dup1\n        /* \"#utility.yul\":905:907   */\n      0x40\n        /* \"#utility.yul\":893:902   */\n      dup4\n        /* \"#utility.yul\":884:891   */\n      dup6\n        /* \"#utility.yul\":880:903   */\n      sub\n        /* \"#utility.yul\":876:908   */\n      slt\n        /* \"#utility.yul\":873:925   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":921:922   */\n      0x00\n        /* \"#utility.yul\":918:919   */\n      dup1\n        /* \"#utility.yul\":911:923   */\n      revert\n        /* \"#utility.yul\":873:925   */\n    tag_554:\n        /* \"#utility.yul\":960:969   */\n      dup3\n        /* \"#utility.yul\":947:970   */\n      calldataload\n        /* \"#utility.yul\":979:1010   */\n      tag_555\n        /* \"#utility.yul\":1004:1009   */\n      dup2\n        /* \"#utility.yul\":979:1010   */\n      tag_528\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":1029:1034   */\n      swap5\n        /* \"#utility.yul\":1081:1083   */\n      0x20\n        /* \"#utility.yul\":1066:1084   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1053:1085   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":776:1091   */\n      jump\t// out\n        /* \"#utility.yul\":1566:2245   */\n    tag_52:\n        /* \"#utility.yul\":1694:1700   */\n      0x00\n        /* \"#utility.yul\":1702:1708   */\n      dup1\n        /* \"#utility.yul\":1755:1757   */\n      0x40\n        /* \"#utility.yul\":1743:1752   */\n      dup4\n        /* \"#utility.yul\":1734:1741   */\n      dup6\n        /* \"#utility.yul\":1730:1753   */\n      sub\n        /* \"#utility.yul\":1726:1758   */\n      slt\n        /* \"#utility.yul\":1723:1775   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":1771:1772   */\n      0x00\n        /* \"#utility.yul\":1768:1769   */\n      dup1\n        /* \"#utility.yul\":1761:1773   */\n      revert\n        /* \"#utility.yul\":1723:1775   */\n    tag_560:\n        /* \"#utility.yul\":1811:1820   */\n      dup3\n        /* \"#utility.yul\":1798:1821   */\n      calldataload\n        /* \"#utility.yul\":1840:1858   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1881:1883   */\n      dup1\n        /* \"#utility.yul\":1873:1879   */\n      dup3\n        /* \"#utility.yul\":1870:1884   */\n      gt\n        /* \"#utility.yul\":1867:1901   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":1897:1898   */\n      0x00\n        /* \"#utility.yul\":1894:1895   */\n      dup1\n        /* \"#utility.yul\":1887:1899   */\n      revert\n        /* \"#utility.yul\":1867:1901   */\n    tag_561:\n        /* \"#utility.yul\":1920:1942   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1976:1979   */\n      0xc0\n        /* \"#utility.yul\":1958:1974   */\n      dup3\n      dup8\n      sub\n        /* \"#utility.yul\":1954:1980   */\n      slt\n        /* \"#utility.yul\":1951:1997   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":1993:1994   */\n      0x00\n        /* \"#utility.yul\":1990:1991   */\n      dup1\n        /* \"#utility.yul\":1983:1995   */\n      revert\n        /* \"#utility.yul\":1951:1997   */\n    tag_562:\n        /* \"#utility.yul\":2016:2018   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":2071:2073   */\n      0x20\n        /* \"#utility.yul\":2056:2074   */\n      dup5\n      add\n        /* \"#utility.yul\":2043:2075   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2087:2103   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2084:2120   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":2116:2117   */\n      0x00\n        /* \"#utility.yul\":2113:2114   */\n      dup1\n        /* \"#utility.yul\":2106:2118   */\n      revert\n        /* \"#utility.yul\":2084:2120   */\n    tag_563:\n      pop\n        /* \"#utility.yul\":2139:2163   */\n      dup4\n      add\n        /* \"#utility.yul\":2197:2200   */\n      0x0200\n        /* \"#utility.yul\":2179:2195   */\n      dup2\n      dup7\n      sub\n        /* \"#utility.yul\":2175:2201   */\n      slt\n        /* \"#utility.yul\":2172:2218   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":2214:2215   */\n      0x00\n        /* \"#utility.yul\":2211:2212   */\n      dup1\n        /* \"#utility.yul\":2204:2216   */\n      revert\n        /* \"#utility.yul\":2172:2218   */\n    tag_564:\n        /* \"#utility.yul\":2237:2239   */\n      dup1\n        /* \"#utility.yul\":2227:2239   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1566:2245   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3266:3881   */\n    tag_95:\n        /* \"#utility.yul\":3352:3358   */\n      0x00\n        /* \"#utility.yul\":3360:3366   */\n      dup1\n        /* \"#utility.yul\":3413:3415   */\n      0x20\n        /* \"#utility.yul\":3401:3410   */\n      dup4\n        /* \"#utility.yul\":3392:3399   */\n      dup6\n        /* \"#utility.yul\":3388:3411   */\n      sub\n        /* \"#utility.yul\":3384:3416   */\n      slt\n        /* \"#utility.yul\":3381:3433   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":3429:3430   */\n      0x00\n        /* \"#utility.yul\":3426:3427   */\n      dup1\n        /* \"#utility.yul\":3419:3431   */\n      revert\n        /* \"#utility.yul\":3381:3433   */\n    tag_571:\n        /* \"#utility.yul\":3469:3478   */\n      dup3\n        /* \"#utility.yul\":3456:3479   */\n      calldataload\n        /* \"#utility.yul\":3498:3516   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3539:3541   */\n      dup1\n        /* \"#utility.yul\":3531:3537   */\n      dup3\n        /* \"#utility.yul\":3528:3542   */\n      gt\n        /* \"#utility.yul\":3525:3559   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":3555:3556   */\n      0x00\n        /* \"#utility.yul\":3552:3553   */\n      dup1\n        /* \"#utility.yul\":3545:3557   */\n      revert\n        /* \"#utility.yul\":3525:3559   */\n    tag_572:\n        /* \"#utility.yul\":3593:3599   */\n      dup2\n        /* \"#utility.yul\":3582:3591   */\n      dup6\n        /* \"#utility.yul\":3578:3600   */\n      add\n        /* \"#utility.yul\":3568:3600   */\n      swap2\n      pop\n        /* \"#utility.yul\":3638:3645   */\n      dup6\n        /* \"#utility.yul\":3631:3635   */\n      0x1f\n        /* \"#utility.yul\":3627:3629   */\n      dup4\n        /* \"#utility.yul\":3623:3636   */\n      add\n        /* \"#utility.yul\":3619:3646   */\n      slt\n        /* \"#utility.yul\":3609:3664   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":3660:3661   */\n      0x00\n        /* \"#utility.yul\":3657:3658   */\n      dup1\n        /* \"#utility.yul\":3650:3662   */\n      revert\n        /* \"#utility.yul\":3609:3664   */\n    tag_573:\n        /* \"#utility.yul\":3700:3702   */\n      dup2\n        /* \"#utility.yul\":3687:3703   */\n      calldataload\n        /* \"#utility.yul\":3726:3728   */\n      dup2\n        /* \"#utility.yul\":3718:3724   */\n      dup2\n        /* \"#utility.yul\":3715:3729   */\n      gt\n        /* \"#utility.yul\":3712:3746   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":3742:3743   */\n      0x00\n        /* \"#utility.yul\":3739:3740   */\n      dup1\n        /* \"#utility.yul\":3732:3744   */\n      revert\n        /* \"#utility.yul\":3712:3746   */\n    tag_574:\n        /* \"#utility.yul\":3795:3802   */\n      dup7\n        /* \"#utility.yul\":3790:3792   */\n      0x20\n        /* \"#utility.yul\":3780:3786   */\n      dup3\n        /* \"#utility.yul\":3777:3778   */\n      0x05\n        /* \"#utility.yul\":3773:3787   */\n      shl\n        /* \"#utility.yul\":3769:3771   */\n      dup6\n        /* \"#utility.yul\":3765:3788   */\n      add\n        /* \"#utility.yul\":3761:3793   */\n      add\n        /* \"#utility.yul\":3758:3803   */\n      gt\n        /* \"#utility.yul\":3755:3820   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":3816:3817   */\n      0x00\n        /* \"#utility.yul\":3813:3814   */\n      dup1\n        /* \"#utility.yul\":3806:3818   */\n      revert\n        /* \"#utility.yul\":3755:3820   */\n    tag_575:\n        /* \"#utility.yul\":3847:3849   */\n      0x20\n        /* \"#utility.yul\":3839:3850   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":3869:3875   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":3266:3881   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3886:4066   */\n    tag_108:\n        /* \"#utility.yul\":3945:3951   */\n      0x00\n        /* \"#utility.yul\":3998:4000   */\n      0x20\n        /* \"#utility.yul\":3986:3995   */\n      dup3\n        /* \"#utility.yul\":3977:3984   */\n      dup5\n        /* \"#utility.yul\":3973:3996   */\n      sub\n        /* \"#utility.yul\":3969:4001   */\n      slt\n        /* \"#utility.yul\":3966:4018   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4011:4012   */\n      dup1\n        /* \"#utility.yul\":4004:4016   */\n      revert\n        /* \"#utility.yul\":3966:4018   */\n    tag_577:\n      pop\n        /* \"#utility.yul\":4037:4060   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3886:4066   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4071:4426   */\n    tag_130:\n        /* \"#utility.yul\":4273:4275   */\n      0x20\n        /* \"#utility.yul\":4255:4276   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4312:4314   */\n      0x1f\n        /* \"#utility.yul\":4292:4310   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4285:4315   */\n      mstore\n        /* \"#utility.yul\":4351:4384   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4346:4348   */\n      0x40\n        /* \"#utility.yul\":4331:4349   */\n      dup3\n      add\n        /* \"#utility.yul\":4324:4385   */\n      mstore\n        /* \"#utility.yul\":4417:4419   */\n      0x60\n        /* \"#utility.yul\":4402:4420   */\n      add\n      swap1\n        /* \"#utility.yul\":4071:4426   */\n      jump\t// out\n        /* \"#utility.yul\":4431:4549   */\n    tag_532:\n        /* \"#utility.yul\":4517:4522   */\n      dup1\n        /* \"#utility.yul\":4510:4523   */\n      iszero\n        /* \"#utility.yul\":4503:4524   */\n      iszero\n        /* \"#utility.yul\":4496:4501   */\n      dup2\n        /* \"#utility.yul\":4493:4525   */\n      eq\n        /* \"#utility.yul\":4483:4543   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4536:4537   */\n      dup1\n        /* \"#utility.yul\":4529:4541   */\n      revert\n        /* \"#utility.yul\":4554:4682   */\n    tag_533:\n        /* \"#utility.yul\":4619:4639   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4648:4676   */\n      tag_549\n        /* \"#utility.yul\":4619:4639   */\n      dup2\n        /* \"#utility.yul\":4648:4676   */\n      tag_532\n      jump\t// in\n        /* \"#utility.yul\":4687:4928   */\n    tag_133:\n        /* \"#utility.yul\":4743:4749   */\n      0x00\n        /* \"#utility.yul\":4796:4798   */\n      0x20\n        /* \"#utility.yul\":4784:4793   */\n      dup3\n        /* \"#utility.yul\":4775:4782   */\n      dup5\n        /* \"#utility.yul\":4771:4794   */\n      sub\n        /* \"#utility.yul\":4767:4799   */\n      slt\n        /* \"#utility.yul\":4764:4816   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":4812:4813   */\n      0x00\n        /* \"#utility.yul\":4809:4810   */\n      dup1\n        /* \"#utility.yul\":4802:4814   */\n      revert\n        /* \"#utility.yul\":4764:4816   */\n    tag_584:\n        /* \"#utility.yul\":4851:4860   */\n      dup2\n        /* \"#utility.yul\":4838:4861   */\n      calldataload\n        /* \"#utility.yul\":4870:4898   */\n      tag_503\n        /* \"#utility.yul\":4892:4897   */\n      dup2\n        /* \"#utility.yul\":4870:4898   */\n      tag_532\n      jump\t// in\n        /* \"#utility.yul\":4933:5279   */\n    tag_138:\n        /* \"#utility.yul\":5135:5137   */\n      0x20\n        /* \"#utility.yul\":5117:5138   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5174:5176   */\n      0x16\n        /* \"#utility.yul\":5154:5172   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5147:5177   */\n      mstore\n      shl(0x50, 0x4572726f722041626f7574204f726465722053696465)\n        /* \"#utility.yul\":5208:5210   */\n      0x40\n        /* \"#utility.yul\":5193:5211   */\n      dup3\n      add\n        /* \"#utility.yul\":5186:5238   */\n      mstore\n        /* \"#utility.yul\":5270:5272   */\n      0x60\n        /* \"#utility.yul\":5255:5273   */\n      add\n      swap1\n        /* \"#utility.yul\":4933:5279   */\n      jump\t// out\n        /* \"#utility.yul\":5284:5632   */\n    tag_142:\n        /* \"#utility.yul\":5486:5488   */\n      0x20\n        /* \"#utility.yul\":5468:5489   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5525:5527   */\n      0x18\n        /* \"#utility.yul\":5505:5523   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5498:5528   */\n      mstore\n        /* \"#utility.yul\":5564:5590   */\n      0x4f72646572206d757374206265207468652073656e6465720000000000000000\n        /* \"#utility.yul\":5559:5561   */\n      0x40\n        /* \"#utility.yul\":5544:5562   */\n      dup3\n      add\n        /* \"#utility.yul\":5537:5591   */\n      mstore\n        /* \"#utility.yul\":5623:5625   */\n      0x60\n        /* \"#utility.yul\":5608:5626   */\n      add\n      swap1\n        /* \"#utility.yul\":5284:5632   */\n      jump\t// out\n        /* \"#utility.yul\":5637:5764   */\n    tag_534:\n        /* \"#utility.yul\":5698:5708   */\n      0x4e487b71\n        /* \"#utility.yul\":5693:5696   */\n      0xe0\n        /* \"#utility.yul\":5689:5709   */\n      shl\n        /* \"#utility.yul\":5686:5687   */\n      0x00\n        /* \"#utility.yul\":5679:5710   */\n      mstore\n        /* \"#utility.yul\":5729:5733   */\n      0x41\n        /* \"#utility.yul\":5726:5727   */\n      0x04\n        /* \"#utility.yul\":5719:5734   */\n      mstore\n        /* \"#utility.yul\":5753:5757   */\n      0x24\n        /* \"#utility.yul\":5750:5751   */\n      0x00\n        /* \"#utility.yul\":5743:5758   */\n      revert\n        /* \"#utility.yul\":5769:6019   */\n    tag_535:\n        /* \"#utility.yul\":5836:5838   */\n      0x40\n        /* \"#utility.yul\":5830:5839   */\n      mload\n        /* \"#utility.yul\":5878:5884   */\n      0x0200\n        /* \"#utility.yul\":5866:5885   */\n      dup2\n      add\n        /* \"#utility.yul\":5915:5933   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5900:5934   */\n      dup2\n      gt\n        /* \"#utility.yul\":5936:5958   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":5897:5959   */\n      or\n        /* \"#utility.yul\":5894:5982   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":5962:5980   */\n      tag_591\n      tag_534\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":5998:6000   */\n      0x40\n        /* \"#utility.yul\":5991:6013   */\n      mstore\n        /* \"#utility.yul\":5769:6019   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6024:6742   */\n    tag_536:\n        /* \"#utility.yul\":6066:6071   */\n      0x00\n        /* \"#utility.yul\":6119:6122   */\n      dup3\n        /* \"#utility.yul\":6112:6116   */\n      0x1f\n        /* \"#utility.yul\":6104:6110   */\n      dup4\n        /* \"#utility.yul\":6100:6117   */\n      add\n        /* \"#utility.yul\":6096:6123   */\n      slt\n        /* \"#utility.yul\":6086:6141   */\n      tag_593\n      jumpi\n        /* \"#utility.yul\":6137:6138   */\n      0x00\n        /* \"#utility.yul\":6134:6135   */\n      dup1\n        /* \"#utility.yul\":6127:6139   */\n      revert\n        /* \"#utility.yul\":6086:6141   */\n    tag_593:\n        /* \"#utility.yul\":6173:6179   */\n      dup2\n        /* \"#utility.yul\":6160:6180   */\n      calldataload\n        /* \"#utility.yul\":6199:6217   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6236:6238   */\n      dup1\n        /* \"#utility.yul\":6232:6234   */\n      dup3\n        /* \"#utility.yul\":6229:6239   */\n      gt\n        /* \"#utility.yul\":6226:6262   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":6242:6260   */\n      tag_595\n      tag_534\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":6317:6319   */\n      0x40\n        /* \"#utility.yul\":6311:6320   */\n      mload\n        /* \"#utility.yul\":6285:6287   */\n      0x1f\n        /* \"#utility.yul\":6371:6384   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6367:6389   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":6391:6393   */\n      0x3f\n        /* \"#utility.yul\":6363:6394   */\n      add\n        /* \"#utility.yul\":6359:6399   */\n      and\n        /* \"#utility.yul\":6347:6400   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":6415:6433   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":6435:6457   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":6412:6458   */\n      or\n        /* \"#utility.yul\":6409:6481   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":6461:6479   */\n      tag_597\n      tag_534\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":6501:6511   */\n      dup2\n        /* \"#utility.yul\":6497:6499   */\n      0x40\n        /* \"#utility.yul\":6490:6512   */\n      mstore\n        /* \"#utility.yul\":6536:6538   */\n      dup4\n        /* \"#utility.yul\":6528:6534   */\n      dup2\n        /* \"#utility.yul\":6521:6539   */\n      mstore\n        /* \"#utility.yul\":6582:6585   */\n      dup7\n        /* \"#utility.yul\":6575:6579   */\n      0x20\n        /* \"#utility.yul\":6570:6572   */\n      dup6\n        /* \"#utility.yul\":6562:6568   */\n      dup9\n        /* \"#utility.yul\":6558:6573   */\n      add\n        /* \"#utility.yul\":6554:6580   */\n      add\n        /* \"#utility.yul\":6551:6586   */\n      gt\n        /* \"#utility.yul\":6548:6603   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":6599:6600   */\n      0x00\n        /* \"#utility.yul\":6596:6597   */\n      dup1\n        /* \"#utility.yul\":6589:6601   */\n      revert\n        /* \"#utility.yul\":6548:6603   */\n    tag_598:\n        /* \"#utility.yul\":6663:6665   */\n      dup4\n        /* \"#utility.yul\":6656:6660   */\n      0x20\n        /* \"#utility.yul\":6648:6654   */\n      dup8\n        /* \"#utility.yul\":6644:6661   */\n      add\n        /* \"#utility.yul\":6637:6641   */\n      0x20\n        /* \"#utility.yul\":6629:6635   */\n      dup4\n        /* \"#utility.yul\":6625:6642   */\n      add\n        /* \"#utility.yul\":6612:6666   */\n      calldatacopy\n        /* \"#utility.yul\":6710:6711   */\n      0x00\n        /* \"#utility.yul\":6703:6707   */\n      0x20\n        /* \"#utility.yul\":6698:6700   */\n      dup6\n        /* \"#utility.yul\":6690:6696   */\n      dup4\n        /* \"#utility.yul\":6686:6701   */\n      add\n        /* \"#utility.yul\":6682:6708   */\n      add\n        /* \"#utility.yul\":6675:6712   */\n      mstore\n        /* \"#utility.yul\":6730:6736   */\n      dup1\n        /* \"#utility.yul\":6721:6736   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6024:6742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6747:6903   */\n    tag_537:\n        /* \"#utility.yul\":6813:6833   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":6873:6877   */\n      0xff\n        /* \"#utility.yul\":6862:6878   */\n      dup2\n      and\n        /* \"#utility.yul\":6852:6879   */\n      dup2\n      eq\n        /* \"#utility.yul\":6842:6897   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":6893:6894   */\n      0x00\n        /* \"#utility.yul\":6890:6891   */\n      dup1\n        /* \"#utility.yul\":6883:6895   */\n      revert\n        /* \"#utility.yul\":6908:8514   */\n    tag_145:\n        /* \"#utility.yul\":7016:7025   */\n      0x00\n        /* \"#utility.yul\":7075:7081   */\n      0x0200\n        /* \"#utility.yul\":7067:7072   */\n      dup3\n        /* \"#utility.yul\":7051:7065   */\n      calldatasize\n        /* \"#utility.yul\":7047:7073   */\n      sub\n        /* \"#utility.yul\":7043:7082   */\n      slt\n        /* \"#utility.yul\":7040:7099   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":7095:7096   */\n      0x00\n        /* \"#utility.yul\":7092:7093   */\n      dup1\n        /* \"#utility.yul\":7085:7097   */\n      revert\n        /* \"#utility.yul\":7040:7099   */\n    tag_602:\n        /* \"#utility.yul\":7123:7140   */\n      tag_603\n      tag_535\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":7165:7187   */\n      tag_604\n        /* \"#utility.yul\":7181:7186   */\n      dup4\n        /* \"#utility.yul\":7165:7187   */\n      tag_533\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":7156:7163   */\n      dup2\n        /* \"#utility.yul\":7149:7188   */\n      mstore\n        /* \"#utility.yul\":7222:7256   */\n      tag_605\n        /* \"#utility.yul\":7252:7254   */\n      0x20\n        /* \"#utility.yul\":7245:7250   */\n      dup5\n        /* \"#utility.yul\":7241:7255   */\n      add\n        /* \"#utility.yul\":7222:7256   */\n      tag_529\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":7217:7219   */\n      0x20\n        /* \"#utility.yul\":7208:7215   */\n      dup3\n        /* \"#utility.yul\":7204:7220   */\n      add\n        /* \"#utility.yul\":7197:7257   */\n      mstore\n        /* \"#utility.yul\":7291:7325   */\n      tag_606\n        /* \"#utility.yul\":7321:7323   */\n      0x40\n        /* \"#utility.yul\":7314:7319   */\n      dup5\n        /* \"#utility.yul\":7310:7324   */\n      add\n        /* \"#utility.yul\":7291:7325   */\n      tag_529\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":7286:7288   */\n      0x40\n        /* \"#utility.yul\":7277:7284   */\n      dup3\n        /* \"#utility.yul\":7273:7289   */\n      add\n        /* \"#utility.yul\":7266:7326   */\n      mstore\n        /* \"#utility.yul\":7384:7386   */\n      0x60\n        /* \"#utility.yul\":7377:7382   */\n      dup4\n        /* \"#utility.yul\":7373:7387   */\n      add\n        /* \"#utility.yul\":7360:7388   */\n      calldataload\n        /* \"#utility.yul\":7355:7357   */\n      0x60\n        /* \"#utility.yul\":7346:7353   */\n      dup3\n        /* \"#utility.yul\":7342:7358   */\n      add\n        /* \"#utility.yul\":7335:7389   */\n      mstore\n        /* \"#utility.yul\":7448:7451   */\n      0x80\n        /* \"#utility.yul\":7441:7446   */\n      dup4\n        /* \"#utility.yul\":7437:7452   */\n      add\n        /* \"#utility.yul\":7424:7453   */\n      calldataload\n        /* \"#utility.yul\":7418:7421   */\n      0x80\n        /* \"#utility.yul\":7409:7416   */\n      dup3\n        /* \"#utility.yul\":7405:7422   */\n      add\n        /* \"#utility.yul\":7398:7454   */\n      mstore\n        /* \"#utility.yul\":7513:7516   */\n      0xa0\n        /* \"#utility.yul\":7506:7511   */\n      dup4\n        /* \"#utility.yul\":7502:7517   */\n      add\n        /* \"#utility.yul\":7489:7518   */\n      calldataload\n        /* \"#utility.yul\":7483:7486   */\n      0xa0\n        /* \"#utility.yul\":7474:7481   */\n      dup3\n        /* \"#utility.yul\":7470:7487   */\n      add\n        /* \"#utility.yul\":7463:7519   */\n      mstore\n        /* \"#utility.yul\":7554:7589   */\n      tag_607\n        /* \"#utility.yul\":7584:7587   */\n      0xc0\n        /* \"#utility.yul\":7577:7582   */\n      dup5\n        /* \"#utility.yul\":7573:7588   */\n      add\n        /* \"#utility.yul\":7554:7589   */\n      tag_529\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":7548:7551   */\n      0xc0\n        /* \"#utility.yul\":7539:7546   */\n      dup3\n        /* \"#utility.yul\":7535:7552   */\n      add\n        /* \"#utility.yul\":7528:7590   */\n      mstore\n        /* \"#utility.yul\":7625:7660   */\n      tag_608\n        /* \"#utility.yul\":7655:7658   */\n      0xe0\n        /* \"#utility.yul\":7648:7653   */\n      dup5\n        /* \"#utility.yul\":7644:7659   */\n      add\n        /* \"#utility.yul\":7625:7660   */\n      tag_529\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":7619:7622   */\n      0xe0\n        /* \"#utility.yul\":7606:7623   */\n      dup3\n      add\n        /* \"#utility.yul\":7599:7661   */\n      mstore\n        /* \"#utility.yul\":7680:7683   */\n      0x0100\n        /* \"#utility.yul\":7730:7744   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":7717:7745   */\n      calldataload\n        /* \"#utility.yul\":7699:7715   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7692:7746   */\n      mstore\n        /* \"#utility.yul\":7765:7768   */\n      0x0120\n        /* \"#utility.yul\":7815:7829   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":7802:7830   */\n      calldataload\n        /* \"#utility.yul\":7784:7800   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7777:7831   */\n      mstore\n        /* \"#utility.yul\":7850:7853   */\n      0x0140\n        /* \"#utility.yul\":7900:7914   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":7887:7915   */\n      calldataload\n        /* \"#utility.yul\":7869:7885   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7862:7916   */\n      mstore\n        /* \"#utility.yul\":7935:7938   */\n      0x0160\n        /* \"#utility.yul\":7985:7999   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":7972:8000   */\n      calldataload\n        /* \"#utility.yul\":7954:7970   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7947:8001   */\n      mstore\n        /* \"#utility.yul\":8020:8023   */\n      0x0180\n        /* \"#utility.yul\":8059:8073   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":8046:8074   */\n      calldataload\n        /* \"#utility.yul\":8097:8115   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8086:8116   */\n      dup2\n      gt\n        /* \"#utility.yul\":8083:8133   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":8129:8130   */\n      0x00\n        /* \"#utility.yul\":8126:8127   */\n      dup1\n        /* \"#utility.yul\":8119:8131   */\n      revert\n        /* \"#utility.yul\":8083:8133   */\n    tag_609:\n        /* \"#utility.yul\":8167:8219   */\n      tag_610\n        /* \"#utility.yul\":8204:8218   */\n      calldatasize\n        /* \"#utility.yul\":8195:8201   */\n      dup3\n        /* \"#utility.yul\":8188:8193   */\n      dup8\n        /* \"#utility.yul\":8184:8202   */\n      add\n        /* \"#utility.yul\":8167:8219   */\n      tag_536\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":8162:8164   */\n      dup3\n        /* \"#utility.yul\":8153:8160   */\n      dup5\n        /* \"#utility.yul\":8149:8165   */\n      add\n        /* \"#utility.yul\":8142:8220   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":8239:8242   */\n      0x01a0\n        /* \"#utility.yul\":8276:8308   */\n      tag_611\n        /* \"#utility.yul\":8304:8306   */\n      dup2\n        /* \"#utility.yul\":8297:8302   */\n      dup6\n        /* \"#utility.yul\":8293:8307   */\n      add\n        /* \"#utility.yul\":8276:8308   */\n      tag_537\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":8258:8274   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8251:8309   */\n      mstore\n        /* \"#utility.yul\":8328:8331   */\n      0x01c0\n        /* \"#utility.yul\":8378:8392   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":8365:8393   */\n      calldataload\n        /* \"#utility.yul\":8347:8363   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8340:8394   */\n      mstore\n        /* \"#utility.yul\":8413:8416   */\n      0x01e0\n        /* \"#utility.yul\":8463:8477   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":8450:8478   */\n      calldataload\n        /* \"#utility.yul\":8432:8448   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":8425:8479   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":8262:8269   */\n      swap1\n        /* \"#utility.yul\":6908:8514   */\n      jump\t// out\n        /* \"#utility.yul\":8519:9019   */\n    tag_538:\n        /* \"#utility.yul\":8577:8582   */\n      0x00\n        /* \"#utility.yul\":8584:8590   */\n      dup1\n        /* \"#utility.yul\":8644:8647   */\n      dup4\n        /* \"#utility.yul\":8631:8648   */\n      calldataload\n        /* \"#utility.yul\":8730:8732   */\n      0x1e\n        /* \"#utility.yul\":8726:8733   */\n      not\n        /* \"#utility.yul\":8715:8723   */\n      dup5\n        /* \"#utility.yul\":8699:8713   */\n      calldatasize\n        /* \"#utility.yul\":8695:8724   */\n      sub\n        /* \"#utility.yul\":8691:8734   */\n      add\n        /* \"#utility.yul\":8671:8689   */\n      dup2\n        /* \"#utility.yul\":8667:8735   */\n      slt\n        /* \"#utility.yul\":8657:8753   */\n      tag_613\n      jumpi\n        /* \"#utility.yul\":8749:8750   */\n      0x00\n        /* \"#utility.yul\":8746:8747   */\n      dup1\n        /* \"#utility.yul\":8739:8751   */\n      revert\n        /* \"#utility.yul\":8657:8753   */\n    tag_613:\n        /* \"#utility.yul\":8777:8810   */\n      dup4\n      add\n        /* \"#utility.yul\":8881:8885   */\n      0x20\n        /* \"#utility.yul\":8868:8886   */\n      dup2\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":8829:8850   */\n      calldataload\n      swap1\n      pop\n        /* \"#utility.yul\":8909:8927   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8898:8928   */\n      dup2\n      gt\n        /* \"#utility.yul\":8895:8945   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":8941:8942   */\n      0x00\n        /* \"#utility.yul\":8938:8939   */\n      dup1\n        /* \"#utility.yul\":8931:8943   */\n      revert\n        /* \"#utility.yul\":8895:8945   */\n    tag_614:\n        /* \"#utility.yul\":8988:8994   */\n      dup1\n        /* \"#utility.yul\":8972:8986   */\n      calldatasize\n        /* \"#utility.yul\":8968:8995   */\n      sub\n        /* \"#utility.yul\":8961:8966   */\n      dup3\n        /* \"#utility.yul\":8957:8996   */\n      sgt\n        /* \"#utility.yul\":8954:9013   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":9009:9010   */\n      0x00\n        /* \"#utility.yul\":9006:9007   */\n      dup1\n        /* \"#utility.yul\":8999:9011   */\n      revert\n        /* \"#utility.yul\":8954:9013   */\n    tag_615:\n        /* \"#utility.yul\":8519:9019   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9024:9290   */\n    tag_539:\n        /* \"#utility.yul\":9112:9118   */\n      dup2\n        /* \"#utility.yul\":9107:9110   */\n      dup4\n        /* \"#utility.yul\":9100:9119   */\n      mstore\n        /* \"#utility.yul\":9164:9170   */\n      dup2\n        /* \"#utility.yul\":9157:9162   */\n      dup2\n        /* \"#utility.yul\":9150:9154   */\n      0x20\n        /* \"#utility.yul\":9145:9148   */\n      dup6\n        /* \"#utility.yul\":9141:9155   */\n      add\n        /* \"#utility.yul\":9128:9171   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":9216:9217   */\n      0x00\n        /* \"#utility.yul\":9191:9207   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":9209:9213   */\n      0x20\n        /* \"#utility.yul\":9187:9214   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":9180:9218   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9272:9274   */\n      0x1f\n        /* \"#utility.yul\":9251:9266   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9247:9276   */\n      and\n        /* \"#utility.yul\":9238:9277   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":9234:9284   */\n      add\n      swap1\n        /* \"#utility.yul\":9024:9290   */\n      jump\t// out\n        /* \"#utility.yul\":9375:12149   */\n    tag_151:\n        /* \"#utility.yul\":9648:9650   */\n      0x40\n        /* \"#utility.yul\":9637:9646   */\n      dup2\n        /* \"#utility.yul\":9630:9651   */\n      mstore\n        /* \"#utility.yul\":9611:9615   */\n      0x00\n        /* \"#utility.yul\":9670:9673   */\n      0x0100\n        /* \"#utility.yul\":9708:9714   */\n      dup5\n        /* \"#utility.yul\":9695:9715   */\n      calldataload\n        /* \"#utility.yul\":9724:9752   */\n      tag_619\n        /* \"#utility.yul\":9746:9751   */\n      dup2\n        /* \"#utility.yul\":9724:9752   */\n      tag_532\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":9795:9808   */\n      iszero\n        /* \"#utility.yul\":9788:9809   */\n      iszero\n        /* \"#utility.yul\":9783:9785   */\n      0x40\n        /* \"#utility.yul\":9768:9786   */\n      dup5\n      add\n        /* \"#utility.yul\":9761:9810   */\n      mstore\n        /* \"#utility.yul\":9859:9863   */\n      0x20\n        /* \"#utility.yul\":9847:9864   */\n      dup6\n      add\n        /* \"#utility.yul\":9834:9865   */\n      calldataload\n        /* \"#utility.yul\":9874:9907   */\n      tag_620\n        /* \"#utility.yul\":9834:9865   */\n      dup2\n        /* \"#utility.yul\":9874:9907   */\n      tag_528\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":9973:9974   */\n      0x01\n        /* \"#utility.yul\":9969:9970   */\n      dup1\n        /* \"#utility.yul\":9964:9967   */\n      0xa0\n        /* \"#utility.yul\":9960:9971   */\n      shl\n        /* \"#utility.yul\":9956:9975   */\n      sub\n        /* \"#utility.yul\":9947:9954   */\n      dup2\n        /* \"#utility.yul\":9943:9976   */\n      and\n        /* \"#utility.yul\":9938:9940   */\n      0x60\n        /* \"#utility.yul\":9927:9936   */\n      dup6\n        /* \"#utility.yul\":9923:9941   */\n      add\n        /* \"#utility.yul\":9916:9977   */\n      mstore\n      pop\n        /* \"#utility.yul\":10039:10041   */\n      0x40\n        /* \"#utility.yul\":10031:10037   */\n      dup6\n        /* \"#utility.yul\":10027:10042   */\n      add\n        /* \"#utility.yul\":10014:10043   */\n      calldataload\n        /* \"#utility.yul\":10008:10011   */\n      0x80\n        /* \"#utility.yul\":9997:10006   */\n      dup5\n        /* \"#utility.yul\":9993:10012   */\n      add\n        /* \"#utility.yul\":9986:10044   */\n      mstore\n        /* \"#utility.yul\":10106:10108   */\n      0x60\n        /* \"#utility.yul\":10098:10104   */\n      dup6\n        /* \"#utility.yul\":10094:10109   */\n      add\n        /* \"#utility.yul\":10081:10110   */\n      calldataload\n        /* \"#utility.yul\":10075:10078   */\n      0xa0\n        /* \"#utility.yul\":10064:10073   */\n      dup5\n        /* \"#utility.yul\":10060:10079   */\n      add\n        /* \"#utility.yul\":10053:10111   */\n      mstore\n        /* \"#utility.yul\":10174:10177   */\n      0x80\n        /* \"#utility.yul\":10166:10172   */\n      dup6\n        /* \"#utility.yul\":10162:10178   */\n      add\n        /* \"#utility.yul\":10149:10179   */\n      calldataload\n        /* \"#utility.yul\":10142:10146   */\n      0xc0\n        /* \"#utility.yul\":10131:10140   */\n      dup5\n        /* \"#utility.yul\":10127:10147   */\n      add\n        /* \"#utility.yul\":10120:10180   */\n      mstore\n        /* \"#utility.yul\":10223:10279   */\n      tag_621\n        /* \"#utility.yul\":10274:10277   */\n      0xa0\n        /* \"#utility.yul\":10266:10272   */\n      dup7\n        /* \"#utility.yul\":10262:10278   */\n      add\n        /* \"#utility.yul\":10254:10260   */\n      dup7\n        /* \"#utility.yul\":10223:10279   */\n      tag_538\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":10316:10320   */\n      0xc0\n        /* \"#utility.yul\":10310:10313   */\n      0xe0\n        /* \"#utility.yul\":10299:10308   */\n      dup7\n        /* \"#utility.yul\":10295:10314   */\n      add\n        /* \"#utility.yul\":10288:10321   */\n      mstore\n        /* \"#utility.yul\":10341:10414   */\n      tag_622\n        /* \"#utility.yul\":10410:10412   */\n      dup4\n        /* \"#utility.yul\":10399:10408   */\n      dup7\n        /* \"#utility.yul\":10395:10413   */\n      add\n        /* \"#utility.yul\":10381:10393   */\n      dup3\n        /* \"#utility.yul\":10367:10379   */\n      dup5\n        /* \"#utility.yul\":10341:10414   */\n      tag_539\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":10330:10414   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":10461:10470   */\n      dup4\n        /* \"#utility.yul\":10456:10459   */\n      dup2\n        /* \"#utility.yul\":10452:10471   */\n      sub\n        /* \"#utility.yul\":10445:10449   */\n      0x20\n        /* \"#utility.yul\":10434:10443   */\n      dup6\n        /* \"#utility.yul\":10430:10450   */\n      add\n        /* \"#utility.yul\":10423:10472   */\n      mstore\n        /* \"#utility.yul\":10491:10497   */\n      0x0200\n        /* \"#utility.yul\":10506:10551   */\n      tag_623\n        /* \"#utility.yul\":10547:10550   */\n      dup3\n        /* \"#utility.yul\":10522:10545   */\n      tag_624\n        /* \"#utility.yul\":10538:10544   */\n      dup9\n        /* \"#utility.yul\":10522:10545   */\n      tag_533\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":1166:1179   */\n      iszero\n        /* \"#utility.yul\":1159:1180   */\n      iszero\n        /* \"#utility.yul\":1147:1181   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1096:1187   */\n      jump\n        /* \"#utility.yul\":10506:10551   */\n    tag_623:\n        /* \"#utility.yul\":10582:10619   */\n      tag_625\n        /* \"#utility.yul\":10613:10617   */\n      0x20\n        /* \"#utility.yul\":10605:10611   */\n      dup8\n        /* \"#utility.yul\":10601:10618   */\n      add\n        /* \"#utility.yul\":10582:10619   */\n      tag_529\n      jump\t// in\n    tag_625:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2781:2812   */\n      and\n        /* \"#utility.yul\":10672:10676   */\n      0x20\n        /* \"#utility.yul\":10663:10677   */\n      dup4\n      add\n        /* \"#utility.yul\":2769:2813   */\n      mstore\n        /* \"#utility.yul\":10709:10744   */\n      tag_627\n        /* \"#utility.yul\":10740:10742   */\n      0x40\n        /* \"#utility.yul\":10728:10743   */\n      dup8\n      add\n        /* \"#utility.yul\":10709:10744   */\n      tag_529\n      jump\t// in\n    tag_627:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2781:2812   */\n      dup2\n      and\n        /* \"#utility.yul\":10797:10799   */\n      0x40\n        /* \"#utility.yul\":10788:10800   */\n      dup5\n      add\n        /* \"#utility.yul\":2769:2813   */\n      mstore\n        /* \"#utility.yul\":10753:10801   */\n      pop\n        /* \"#utility.yul\":10856:10858   */\n      0x60\n        /* \"#utility.yul\":10848:10854   */\n      dup7\n        /* \"#utility.yul\":10844:10859   */\n      add\n        /* \"#utility.yul\":10831:10860   */\n      calldataload\n        /* \"#utility.yul\":10826:10828   */\n      0x60\n        /* \"#utility.yul\":10821:10824   */\n      dup4\n        /* \"#utility.yul\":10817:10829   */\n      add\n        /* \"#utility.yul\":10810:10861   */\n      mstore\n        /* \"#utility.yul\":10917:10920   */\n      0x80\n        /* \"#utility.yul\":10909:10915   */\n      dup7\n        /* \"#utility.yul\":10905:10921   */\n      add\n        /* \"#utility.yul\":10892:10922   */\n      calldataload\n        /* \"#utility.yul\":10886:10889   */\n      0x80\n        /* \"#utility.yul\":10881:10884   */\n      dup4\n        /* \"#utility.yul\":10877:10890   */\n      add\n        /* \"#utility.yul\":10870:10923   */\n      mstore\n        /* \"#utility.yul\":10979:10982   */\n      0xa0\n        /* \"#utility.yul\":10971:10977   */\n      dup7\n        /* \"#utility.yul\":10967:10983   */\n      add\n        /* \"#utility.yul\":10954:10984   */\n      calldataload\n        /* \"#utility.yul\":10948:10951   */\n      0xa0\n        /* \"#utility.yul\":10943:10946   */\n      dup4\n        /* \"#utility.yul\":10939:10952   */\n      add\n        /* \"#utility.yul\":10932:10985   */\n      mstore\n        /* \"#utility.yul\":11016:11053   */\n      tag_629\n        /* \"#utility.yul\":11047:11051   */\n      0xc0\n        /* \"#utility.yul\":11039:11045   */\n      dup8\n        /* \"#utility.yul\":11035:11052   */\n      add\n        /* \"#utility.yul\":11016:11053   */\n      tag_529\n      jump\t// in\n    tag_629:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2781:2812   */\n      and\n        /* \"#utility.yul\":11106:11110   */\n      0xc0\n        /* \"#utility.yul\":11097:11111   */\n      dup4\n      add\n        /* \"#utility.yul\":2769:2813   */\n      mstore\n        /* \"#utility.yul\":11143:11179   */\n      tag_631\n        /* \"#utility.yul\":11174:11177   */\n      0xe0\n        /* \"#utility.yul\":11162:11178   */\n      dup8\n      add\n        /* \"#utility.yul\":11143:11179   */\n      tag_529\n      jump\t// in\n    tag_631:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2781:2812   */\n      and\n        /* \"#utility.yul\":11232:11235   */\n      0xe0\n        /* \"#utility.yul\":11223:11236   */\n      dup4\n      add\n        /* \"#utility.yul\":2769:2813   */\n      mstore\n        /* \"#utility.yul\":11280:11295   */\n      dup3\n      dup7\n      add\n        /* \"#utility.yul\":11267:11296   */\n      calldataload\n        /* \"#utility.yul\":11253:11265   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":11246:11297   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":11316:11322   */\n      0x0120\n        /* \"#utility.yul\":11365:11380   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":11352:11381   */\n      calldataload\n        /* \"#utility.yul\":11338:11350   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11331:11382   */\n      mstore\n        /* \"#utility.yul\":11401:11407   */\n      0x0140\n        /* \"#utility.yul\":11450:11465   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":11437:11466   */\n      calldataload\n        /* \"#utility.yul\":11423:11435   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11416:11467   */\n      mstore\n        /* \"#utility.yul\":11486:11492   */\n      0x0160\n        /* \"#utility.yul\":11535:11550   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":11522:11551   */\n      calldataload\n        /* \"#utility.yul\":11508:11520   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11501:11552   */\n      mstore\n        /* \"#utility.yul\":11571:11577   */\n      0x0180\n      swap2\n        /* \"#utility.yul\":11624:11679   */\n      tag_633\n        /* \"#utility.yul\":11663:11678   */\n      dup4\n      dup8\n      add\n        /* \"#utility.yul\":11280:11295   */\n      dup8\n        /* \"#utility.yul\":11624:11679   */\n      tag_538\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":11709:11711   */\n      dup3\n        /* \"#utility.yul\":11704:11706   */\n      dup6\n        /* \"#utility.yul\":11699:11702   */\n      dup6\n        /* \"#utility.yul\":11695:11707   */\n      add\n        /* \"#utility.yul\":11688:11712   */\n      mstore\n        /* \"#utility.yul\":11735:11806   */\n      tag_634\n        /* \"#utility.yul\":11802:11804   */\n      dup4\n        /* \"#utility.yul\":11797:11800   */\n      dup6\n        /* \"#utility.yul\":11793:11805   */\n      add\n        /* \"#utility.yul\":11777:11791   */\n      dup3\n        /* \"#utility.yul\":11761:11775   */\n      dup5\n        /* \"#utility.yul\":11735:11806   */\n      tag_539\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":11721:11806   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11825:11831   */\n      0x01a0\n        /* \"#utility.yul\":11862:11895   */\n      tag_635\n        /* \"#utility.yul\":11891:11893   */\n      dup2\n        /* \"#utility.yul\":11883:11889   */\n      dup8\n        /* \"#utility.yul\":11879:11894   */\n      add\n        /* \"#utility.yul\":11862:11895   */\n      tag_537\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":9362:9366   */\n      0xff\n        /* \"#utility.yul\":9351:9367   */\n      and\n        /* \"#utility.yul\":11937:11949   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9339:9368   */\n      mstore\n        /* \"#utility.yul\":11969:11975   */\n      0x01c0\n        /* \"#utility.yul\":12018:12033   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":12005:12034   */\n      calldataload\n        /* \"#utility.yul\":11991:12003   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11984:12035   */\n      mstore\n        /* \"#utility.yul\":12054:12060   */\n      0x01e0\n        /* \"#utility.yul\":12103:12118   */\n      swap5\n      dup6\n      add\n        /* \"#utility.yul\":12090:12119   */\n      calldataload\n        /* \"#utility.yul\":12076:12088   */\n      swap5\n      add\n        /* \"#utility.yul\":12069:12120   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n      swap1\n      swap3\n        /* \"#utility.yul\":12137:12143   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9375:12149   */\n      jump\t// out\n        /* \"#utility.yul\":12154:12521   */\n    tag_155:\n        /* \"#utility.yul\":12239:12245   */\n      0x00\n        /* \"#utility.yul\":12247:12253   */\n      dup1\n        /* \"#utility.yul\":12255:12261   */\n      0x00\n        /* \"#utility.yul\":12308:12310   */\n      0x60\n        /* \"#utility.yul\":12296:12305   */\n      dup5\n        /* \"#utility.yul\":12287:12294   */\n      dup7\n        /* \"#utility.yul\":12283:12306   */\n      sub\n        /* \"#utility.yul\":12279:12311   */\n      slt\n        /* \"#utility.yul\":12276:12328   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":12324:12325   */\n      0x00\n        /* \"#utility.yul\":12321:12322   */\n      dup1\n        /* \"#utility.yul\":12314:12326   */\n      revert\n        /* \"#utility.yul\":12276:12328   */\n    tag_638:\n        /* \"#utility.yul\":12356:12365   */\n      dup4\n        /* \"#utility.yul\":12350:12366   */\n      mload\n        /* \"#utility.yul\":12375:12403   */\n      tag_639\n        /* \"#utility.yul\":12397:12402   */\n      dup2\n        /* \"#utility.yul\":12375:12403   */\n      tag_532\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":12467:12469   */\n      0x20\n        /* \"#utility.yul\":12452:12470   */\n      dup6\n      add\n        /* \"#utility.yul\":12446:12471   */\n      mload\n        /* \"#utility.yul\":12511:12513   */\n      0x40\n        /* \"#utility.yul\":12496:12514   */\n      swap1\n      swap6\n      add\n        /* \"#utility.yul\":12490:12515   */\n      mload\n        /* \"#utility.yul\":12422:12427   */\n      swap1\n      swap7\n        /* \"#utility.yul\":12446:12471   */\n      swap5\n      swap6\n      pop\n        /* \"#utility.yul\":12490:12515   */\n      swap4\n        /* \"#utility.yul\":12154:12521   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12526:12874   */\n    tag_158:\n        /* \"#utility.yul\":12728:12730   */\n      0x20\n        /* \"#utility.yul\":12710:12731   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12767:12769   */\n      0x18\n        /* \"#utility.yul\":12747:12765   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12740:12770   */\n      mstore\n        /* \"#utility.yul\":12806:12832   */\n      0x53747261746567792073686f756c642062652076616c69640000000000000000\n        /* \"#utility.yul\":12801:12803   */\n      0x40\n        /* \"#utility.yul\":12786:12804   */\n      dup3\n      add\n        /* \"#utility.yul\":12779:12833   */\n      mstore\n        /* \"#utility.yul\":12865:12867   */\n      0x60\n        /* \"#utility.yul\":12850:12868   */\n      add\n      swap1\n        /* \"#utility.yul\":12526:12874   */\n      jump\t// out\n        /* \"#utility.yul\":13897:14024   */\n    tag_541:\n        /* \"#utility.yul\":13958:13968   */\n      0x4e487b71\n        /* \"#utility.yul\":13953:13956   */\n      0xe0\n        /* \"#utility.yul\":13949:13969   */\n      shl\n        /* \"#utility.yul\":13946:13947   */\n      0x00\n        /* \"#utility.yul\":13939:13970   */\n      mstore\n        /* \"#utility.yul\":13989:13993   */\n      0x11\n        /* \"#utility.yul\":13986:13987   */\n      0x04\n        /* \"#utility.yul\":13979:13994   */\n      mstore\n        /* \"#utility.yul\":14013:14017   */\n      0x24\n        /* \"#utility.yul\":14010:14011   */\n      0x00\n        /* \"#utility.yul\":14003:14018   */\n      revert\n        /* \"#utility.yul\":14029:14157   */\n    tag_197:\n        /* \"#utility.yul\":14096:14105   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":14117:14128   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":14114:14151   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":14131:14149   */\n      tag_126\n      tag_541\n      jump\t// in\n        /* \"#utility.yul\":14512:14867   */\n    tag_237:\n        /* \"#utility.yul\":14714:14716   */\n      0x20\n        /* \"#utility.yul\":14696:14717   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14753:14755   */\n      0x1f\n        /* \"#utility.yul\":14733:14751   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14726:14756   */\n      mstore\n        /* \"#utility.yul\":14792:14825   */\n      0x43616e6e6f742075706461746520746f2061206e756c6c206164647265737300\n        /* \"#utility.yul\":14787:14789   */\n      0x40\n        /* \"#utility.yul\":14772:14790   */\n      dup3\n      add\n        /* \"#utility.yul\":14765:14826   */\n      mstore\n        /* \"#utility.yul\":14858:14860   */\n      0x60\n        /* \"#utility.yul\":14843:14861   */\n      add\n      swap1\n        /* \"#utility.yul\":14512:14867   */\n      jump\t// out\n        /* \"#utility.yul\":15228:15355   */\n    tag_291:\n        /* \"#utility.yul\":15289:15299   */\n      0x4e487b71\n        /* \"#utility.yul\":15284:15287   */\n      0xe0\n        /* \"#utility.yul\":15280:15300   */\n      shl\n        /* \"#utility.yul\":15277:15278   */\n      0x00\n        /* \"#utility.yul\":15270:15301   */\n      mstore\n        /* \"#utility.yul\":15320:15324   */\n      0x32\n        /* \"#utility.yul\":15317:15318   */\n      0x04\n        /* \"#utility.yul\":15310:15325   */\n      mstore\n        /* \"#utility.yul\":15344:15348   */\n      0x24\n        /* \"#utility.yul\":15341:15342   */\n      0x00\n        /* \"#utility.yul\":15334:15349   */\n      revert\n        /* \"#utility.yul\":15360:15768   */\n    tag_294:\n        /* \"#utility.yul\":15562:15564   */\n      0x20\n        /* \"#utility.yul\":15544:15565   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15601:15603   */\n      0x2c\n        /* \"#utility.yul\":15581:15599   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15574:15604   */\n      mstore\n        /* \"#utility.yul\":15640:15674   */\n      0x43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f77657220\n        /* \"#utility.yul\":15635:15637   */\n      0x40\n        /* \"#utility.yul\":15620:15638   */\n      dup3\n      add\n        /* \"#utility.yul\":15613:15675   */\n      mstore\n      shl(0xa2, 0x1d1a185b8818dd5c9c995b9d)\n        /* \"#utility.yul\":15706:15708   */\n      0x60\n        /* \"#utility.yul\":15691:15709   */\n      dup3\n      add\n        /* \"#utility.yul\":15684:15726   */\n      mstore\n        /* \"#utility.yul\":15758:15761   */\n      0x80\n        /* \"#utility.yul\":15743:15762   */\n      add\n      swap1\n        /* \"#utility.yul\":15360:15768   */\n      jump\t// out\n        /* \"#utility.yul\":15773:15908   */\n    tag_298:\n        /* \"#utility.yul\":15812:15815   */\n      0x00\n        /* \"#utility.yul\":15833:15850   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":15830:15873   */\n      tag_654\n      jumpi\n        /* \"#utility.yul\":15853:15871   */\n      tag_654\n      tag_541\n      jump\t// in\n    tag_654:\n      pop\n        /* \"#utility.yul\":15900:15901   */\n      0x01\n        /* \"#utility.yul\":15889:15902   */\n      add\n      swap1\n        /* \"#utility.yul\":15773:15908   */\n      jump\t// out\n        /* \"#utility.yul\":15913:16356   */\n    tag_300:\n        /* \"#utility.yul\":16102:16104   */\n      0x20\n        /* \"#utility.yul\":16084:16105   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16121:16139   */\n      dup2\n      add\n        /* \"#utility.yul\":16114:16148   */\n      dup3\n      swap1\n      mstore\n      0x00\n      sub(shl(0xfb, 0x01), 0x01)\n        /* \"#utility.yul\":16160:16191   */\n      dup4\n      gt\n        /* \"#utility.yul\":16157:16208   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":16204:16205   */\n      0x00\n        /* \"#utility.yul\":16201:16202   */\n      dup1\n        /* \"#utility.yul\":16194:16206   */\n      revert\n        /* \"#utility.yul\":16157:16208   */\n    tag_656:\n        /* \"#utility.yul\":16238:16244   */\n      dup3\n        /* \"#utility.yul\":16235:16236   */\n      0x05\n        /* \"#utility.yul\":16231:16245   */\n      shl\n        /* \"#utility.yul\":16295:16301   */\n      dup1\n        /* \"#utility.yul\":16287:16293   */\n      dup6\n        /* \"#utility.yul\":16282:16284   */\n      0x40\n        /* \"#utility.yul\":16271:16280   */\n      dup6\n        /* \"#utility.yul\":16267:16285   */\n      add\n        /* \"#utility.yul\":16254:16302   */\n      calldatacopy\n        /* \"#utility.yul\":16323:16345   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":16347:16349   */\n      0x40\n        /* \"#utility.yul\":16319:16350   */\n      add\n      swap4\n        /* \"#utility.yul\":15913:16356   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16361:16486   */\n    tag_310:\n        /* \"#utility.yul\":16426:16435   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":16447:16457   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":16444:16480   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":16460:16478   */\n      tag_126\n      tag_541\n      jump\t// in\n        /* \"#utility.yul\":17617:18808   */\n    tag_341:\n        /* \"#utility.yul\":18126:18151   */\n      dup15\n      dup2\n      mstore\n        /* \"#utility.yul\":18194:18208   */\n      dup14\n      iszero\n        /* \"#utility.yul\":18187:18209   */\n      iszero\n        /* \"#utility.yul\":18182:18184   */\n      0x20\n        /* \"#utility.yul\":18167:18185   */\n      dup3\n      add\n        /* \"#utility.yul\":18160:18210   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18246:18278   */\n      dup14\n      dup2\n      and\n        /* \"#utility.yul\":18241:18243   */\n      0x40\n        /* \"#utility.yul\":18226:18244   */\n      dup4\n      add\n        /* \"#utility.yul\":18219:18279   */\n      mstore\n        /* \"#utility.yul\":2781:2812   */\n      dup13\n      and\n        /* \"#utility.yul\":18330:18332   */\n      0x60\n        /* \"#utility.yul\":18315:18333   */\n      dup3\n      add\n        /* \"#utility.yul\":2769:2813   */\n      mstore\n        /* \"#utility.yul\":18113:18116   */\n      0x01c0\n        /* \"#utility.yul\":18098:18117   */\n      dup2\n      add\n        /* \"#utility.yul\":18371:18377   */\n      dup12\n        /* \"#utility.yul\":18365:18368   */\n      0x80\n        /* \"#utility.yul\":18354:18363   */\n      dup4\n        /* \"#utility.yul\":18350:18369   */\n      add\n        /* \"#utility.yul\":18343:18378   */\n      mstore\n        /* \"#utility.yul\":18415:18421   */\n      dup11\n        /* \"#utility.yul\":18409:18412   */\n      0xa0\n        /* \"#utility.yul\":18398:18407   */\n      dup4\n        /* \"#utility.yul\":18394:18413   */\n      add\n        /* \"#utility.yul\":18387:18422   */\n      mstore\n        /* \"#utility.yul\":18459:18465   */\n      dup10\n        /* \"#utility.yul\":18453:18456   */\n      0xc0\n        /* \"#utility.yul\":18442:18451   */\n      dup4\n        /* \"#utility.yul\":18438:18457   */\n      add\n        /* \"#utility.yul\":18431:18466   */\n      mstore\n        /* \"#utility.yul\":18475:18522   */\n      tag_665\n        /* \"#utility.yul\":18517:18520   */\n      0xe0\n        /* \"#utility.yul\":18506:18515   */\n      dup4\n        /* \"#utility.yul\":18502:18521   */\n      add\n        /* \"#utility.yul\":18494:18500   */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2781:2812   */\n      and\n        /* \"#utility.yul\":2769:2813   */\n      swap1\n      mstore\n        /* \"#utility.yul\":2715:2819   */\n      jump\n        /* \"#utility.yul\":18475:18522   */\n    tag_665:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2781:2812   */\n      dup9\n      and\n        /* \"#utility.yul\":18573:18576   */\n      0x0100\n        /* \"#utility.yul\":18558:18577   */\n      dup4\n      add\n        /* \"#utility.yul\":2769:2813   */\n      mstore\n        /* \"#utility.yul\":18609:18612   */\n      0x0120\n        /* \"#utility.yul\":18594:18613   */\n      dup3\n      add\n        /* \"#utility.yul\":18587:18622   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":18653:18656   */\n      0x0140\n        /* \"#utility.yul\":18638:18657   */\n      dup2\n      add\n        /* \"#utility.yul\":18631:18667   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":18698:18701   */\n      0x0160\n        /* \"#utility.yul\":18683:18702   */\n      dup5\n      add\n        /* \"#utility.yul\":18676:18712   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":18743:18746   */\n      0x0180\n        /* \"#utility.yul\":18728:18747   */\n      dup4\n      add\n        /* \"#utility.yul\":18721:18757   */\n      mstore\n        /* \"#utility.yul\":18788:18791   */\n      0x01a0\n        /* \"#utility.yul\":18773:18792   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":18766:18802   */\n      mstore\n        /* \"#utility.yul\":17617:18808   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20739:20921   */\n    tag_361:\n        /* \"#utility.yul\":20796:20802   */\n      0x00\n        /* \"#utility.yul\":20849:20851   */\n      0x20\n        /* \"#utility.yul\":20837:20846   */\n      dup3\n        /* \"#utility.yul\":20828:20835   */\n      dup5\n        /* \"#utility.yul\":20824:20847   */\n      sub\n        /* \"#utility.yul\":20820:20852   */\n      slt\n        /* \"#utility.yul\":20817:20869   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":20865:20866   */\n      0x00\n        /* \"#utility.yul\":20862:20863   */\n      dup1\n        /* \"#utility.yul\":20855:20867   */\n      revert\n        /* \"#utility.yul\":20817:20869   */\n    tag_672:\n        /* \"#utility.yul\":20888:20915   */\n      tag_503\n        /* \"#utility.yul\":20905:20914   */\n      dup3\n        /* \"#utility.yul\":20888:20915   */\n      tag_537\n      jump\t// in\n        /* \"#utility.yul\":21273:21518   */\n    tag_371:\n        /* \"#utility.yul\":21340:21346   */\n      0x00\n        /* \"#utility.yul\":21393:21395   */\n      0x20\n        /* \"#utility.yul\":21381:21390   */\n      dup3\n        /* \"#utility.yul\":21372:21379   */\n      dup5\n        /* \"#utility.yul\":21368:21391   */\n      sub\n        /* \"#utility.yul\":21364:21396   */\n      slt\n        /* \"#utility.yul\":21361:21413   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":21409:21410   */\n      0x00\n        /* \"#utility.yul\":21406:21407   */\n      dup1\n        /* \"#utility.yul\":21399:21411   */\n      revert\n        /* \"#utility.yul\":21361:21413   */\n    tag_676:\n        /* \"#utility.yul\":21441:21450   */\n      dup2\n        /* \"#utility.yul\":21435:21451   */\n      mload\n        /* \"#utility.yul\":21460:21488   */\n      tag_503\n        /* \"#utility.yul\":21482:21487   */\n      dup2\n        /* \"#utility.yul\":21460:21488   */\n      tag_532\n      jump\t// in\n        /* \"#utility.yul\":22583:22895   */\n    tag_395:\n        /* \"#utility.yul\":22662:22668   */\n      0x00\n        /* \"#utility.yul\":22670:22676   */\n      dup1\n        /* \"#utility.yul\":22723:22725   */\n      0x40\n        /* \"#utility.yul\":22711:22720   */\n      dup4\n        /* \"#utility.yul\":22702:22709   */\n      dup6\n        /* \"#utility.yul\":22698:22721   */\n      sub\n        /* \"#utility.yul\":22694:22726   */\n      slt\n        /* \"#utility.yul\":22691:22743   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":22739:22740   */\n      0x00\n        /* \"#utility.yul\":22736:22737   */\n      dup1\n        /* \"#utility.yul\":22729:22741   */\n      revert\n        /* \"#utility.yul\":22691:22743   */\n    tag_682:\n        /* \"#utility.yul\":22771:22780   */\n      dup3\n        /* \"#utility.yul\":22765:22781   */\n      mload\n        /* \"#utility.yul\":22790:22821   */\n      tag_683\n        /* \"#utility.yul\":22815:22820   */\n      dup2\n        /* \"#utility.yul\":22790:22821   */\n      tag_528\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":22885:22887   */\n      0x20\n        /* \"#utility.yul\":22870:22888   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":22864:22889   */\n      mload\n        /* \"#utility.yul\":22840:22845   */\n      swap3\n      swap5\n        /* \"#utility.yul\":22864:22889   */\n      swap3\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22583:22895   */\n      jump\t// out\n        /* \"#utility.yul\":23179:23347   */\n    tag_403:\n        /* \"#utility.yul\":23252:23261   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":23283:23292   */\n      dup2\n      iszero\n        /* \"#utility.yul\":23300:23315   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":23294:23316   */\n      dup5\n      eq\n        /* \"#utility.yul\":23280:23317   */\n      or\n        /* \"#utility.yul\":23270:23341   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":23321:23339   */\n      tag_126\n      tag_541\n      jump\t// in\n        /* \"#utility.yul\":23352:23750   */\n    tag_407:\n        /* \"#utility.yul\":23554:23556   */\n      0x20\n        /* \"#utility.yul\":23536:23557   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":23593:23595   */\n      0x22\n        /* \"#utility.yul\":23573:23591   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":23566:23596   */\n      mstore\n        /* \"#utility.yul\":23632:23666   */\n      0x5468652066656520697320746f6f206869676820666f72207468652073656c6c\n        /* \"#utility.yul\":23627:23629   */\n      0x40\n        /* \"#utility.yul\":23612:23630   */\n      dup3\n      add\n        /* \"#utility.yul\":23605:23667   */\n      mstore\n      shl(0xf1, 0x32b9)\n        /* \"#utility.yul\":23698:23700   */\n      0x60\n        /* \"#utility.yul\":23683:23701   */\n      dup3\n      add\n        /* \"#utility.yul\":23676:23708   */\n      mstore\n        /* \"#utility.yul\":23740:23743   */\n      0x80\n        /* \"#utility.yul\":23725:23744   */\n      add\n      swap1\n        /* \"#utility.yul\":23352:23750   */\n      jump\t// out\n        /* \"#utility.yul\":23755:24006   */\n    tag_414:\n        /* \"#utility.yul\":23825:23831   */\n      0x00\n        /* \"#utility.yul\":23878:23880   */\n      0x20\n        /* \"#utility.yul\":23866:23875   */\n      dup3\n        /* \"#utility.yul\":23857:23864   */\n      dup5\n        /* \"#utility.yul\":23853:23876   */\n      sub\n        /* \"#utility.yul\":23849:23881   */\n      slt\n        /* \"#utility.yul\":23846:23898   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":23894:23895   */\n      0x00\n        /* \"#utility.yul\":23891:23892   */\n      dup1\n        /* \"#utility.yul\":23884:23896   */\n      revert\n        /* \"#utility.yul\":23846:23898   */\n    tag_690:\n        /* \"#utility.yul\":23926:23935   */\n      dup2\n        /* \"#utility.yul\":23920:23936   */\n      mload\n        /* \"#utility.yul\":23945:23976   */\n      tag_503\n        /* \"#utility.yul\":23970:23975   */\n      dup2\n        /* \"#utility.yul\":23945:23976   */\n      tag_528\n      jump\t// in\n        /* \"#utility.yul\":26021:26271   */\n    tag_542:\n        /* \"#utility.yul\":26106:26107   */\n      0x00\n        /* \"#utility.yul\":26116:26229   */\n    tag_698:\n        /* \"#utility.yul\":26130:26136   */\n      dup4\n        /* \"#utility.yul\":26127:26128   */\n      dup2\n        /* \"#utility.yul\":26124:26137   */\n      lt\n        /* \"#utility.yul\":26116:26229   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":26206:26217   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":26200:26218   */\n      mload\n        /* \"#utility.yul\":26187:26198   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":26180:26219   */\n      mstore\n        /* \"#utility.yul\":26152:26154   */\n      0x20\n        /* \"#utility.yul\":26145:26155   */\n      add\n        /* \"#utility.yul\":26116:26229   */\n      jump(tag_698)\n    tag_700:\n      pop\n      pop\n        /* \"#utility.yul\":26263:26264   */\n      0x00\n        /* \"#utility.yul\":26245:26261   */\n      swap2\n      add\n        /* \"#utility.yul\":26238:26265   */\n      mstore\n        /* \"#utility.yul\":26021:26271   */\n      jump\t// out\n        /* \"#utility.yul\":26276:26546   */\n    tag_543:\n        /* \"#utility.yul\":26317:26320   */\n      0x00\n        /* \"#utility.yul\":26355:26360   */\n      dup2\n        /* \"#utility.yul\":26349:26361   */\n      mload\n        /* \"#utility.yul\":26382:26388   */\n      dup1\n        /* \"#utility.yul\":26377:26380   */\n      dup5\n        /* \"#utility.yul\":26370:26389   */\n      mstore\n        /* \"#utility.yul\":26398:26474   */\n      tag_702\n        /* \"#utility.yul\":26467:26473   */\n      dup2\n        /* \"#utility.yul\":26460:26464   */\n      0x20\n        /* \"#utility.yul\":26455:26458   */\n      dup7\n        /* \"#utility.yul\":26451:26465   */\n      add\n        /* \"#utility.yul\":26444:26448   */\n      0x20\n        /* \"#utility.yul\":26437:26442   */\n      dup7\n        /* \"#utility.yul\":26433:26449   */\n      add\n        /* \"#utility.yul\":26398:26474   */\n      tag_542\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":26528:26530   */\n      0x1f\n        /* \"#utility.yul\":26507:26522   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":26503:26532   */\n      and\n        /* \"#utility.yul\":26494:26533   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":26535:26539   */\n      0x20\n        /* \"#utility.yul\":26490:26540   */\n      add\n      swap3\n        /* \"#utility.yul\":26276:26546   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26551:26839   */\n    tag_460:\n        /* \"#utility.yul\":26726:26732   */\n      dup3\n        /* \"#utility.yul\":26715:26724   */\n      dup2\n        /* \"#utility.yul\":26708:26733   */\n      mstore\n        /* \"#utility.yul\":26769:26771   */\n      0x40\n        /* \"#utility.yul\":26764:26766   */\n      0x20\n        /* \"#utility.yul\":26753:26762   */\n      dup3\n        /* \"#utility.yul\":26749:26767   */\n      add\n        /* \"#utility.yul\":26742:26772   */\n      mstore\n        /* \"#utility.yul\":26689:26693   */\n      0x00\n        /* \"#utility.yul\":26789:26833   */\n      tag_504\n        /* \"#utility.yul\":26829:26831   */\n      0x40\n        /* \"#utility.yul\":26818:26827   */\n      dup4\n        /* \"#utility.yul\":26814:26832   */\n      add\n        /* \"#utility.yul\":26806:26812   */\n      dup5\n        /* \"#utility.yul\":26789:26833   */\n      tag_543\n      jump\t// in\n        /* \"#utility.yul\":26844:27134   */\n    tag_464:\n        /* \"#utility.yul\":26913:26919   */\n      0x00\n        /* \"#utility.yul\":26966:26968   */\n      0x20\n        /* \"#utility.yul\":26954:26963   */\n      dup3\n        /* \"#utility.yul\":26945:26952   */\n      dup5\n        /* \"#utility.yul\":26941:26964   */\n      sub\n        /* \"#utility.yul\":26937:26969   */\n      slt\n        /* \"#utility.yul\":26934:26986   */\n      iszero\n      tag_706\n      jumpi\n        /* \"#utility.yul\":26982:26983   */\n      0x00\n        /* \"#utility.yul\":26979:26980   */\n      dup1\n        /* \"#utility.yul\":26972:26984   */\n      revert\n        /* \"#utility.yul\":26934:26986   */\n    tag_706:\n        /* \"#utility.yul\":27008:27024   */\n      dup2\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":27053:27085   */\n      dup2\n      and\n        /* \"#utility.yul\":27043:27086   */\n      dup2\n      eq\n        /* \"#utility.yul\":27033:27104   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":27100:27101   */\n      0x00\n        /* \"#utility.yul\":27097:27098   */\n      dup1\n        /* \"#utility.yul\":27090:27102   */\n      revert\n        /* \"#utility.yul\":27139:27323   */\n    tag_472:\n        /* \"#utility.yul\":27209:27215   */\n      0x00\n        /* \"#utility.yul\":27262:27264   */\n      0x20\n        /* \"#utility.yul\":27250:27259   */\n      dup3\n        /* \"#utility.yul\":27241:27248   */\n      dup5\n        /* \"#utility.yul\":27237:27260   */\n      sub\n        /* \"#utility.yul\":27233:27265   */\n      slt\n        /* \"#utility.yul\":27230:27282   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":27278:27279   */\n      0x00\n        /* \"#utility.yul\":27275:27276   */\n      dup1\n        /* \"#utility.yul\":27268:27280   */\n      revert\n        /* \"#utility.yul\":27230:27282   */\n    tag_709:\n      pop\n        /* \"#utility.yul\":27301:27317   */\n      mload\n      swap2\n        /* \"#utility.yul\":27139:27323   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27328:27545   */\n    tag_475:\n        /* \"#utility.yul\":27368:27369   */\n      0x00\n        /* \"#utility.yul\":27394:27395   */\n      dup3\n        /* \"#utility.yul\":27384:27516   */\n      tag_711\n      jumpi\n        /* \"#utility.yul\":27438:27448   */\n      0x4e487b71\n        /* \"#utility.yul\":27433:27436   */\n      0xe0\n        /* \"#utility.yul\":27429:27449   */\n      shl\n        /* \"#utility.yul\":27426:27427   */\n      0x00\n        /* \"#utility.yul\":27419:27450   */\n      mstore\n        /* \"#utility.yul\":27473:27477   */\n      0x12\n        /* \"#utility.yul\":27470:27471   */\n      0x04\n        /* \"#utility.yul\":27463:27478   */\n      mstore\n        /* \"#utility.yul\":27501:27505   */\n      0x24\n        /* \"#utility.yul\":27498:27499   */\n      0x00\n        /* \"#utility.yul\":27491:27506   */\n      revert\n        /* \"#utility.yul\":27384:27516   */\n    tag_711:\n      pop\n        /* \"#utility.yul\":27530:27539   */\n      div\n      swap1\n        /* \"#utility.yul\":27328:27545   */\n      jump\t// out\n        /* \"#utility.yul\":30170:30457   */\n    tag_515:\n        /* \"#utility.yul\":30299:30302   */\n      0x00\n        /* \"#utility.yul\":30337:30343   */\n      dup3\n        /* \"#utility.yul\":30331:30344   */\n      mload\n        /* \"#utility.yul\":30353:30419   */\n      tag_720\n        /* \"#utility.yul\":30412:30418   */\n      dup2\n        /* \"#utility.yul\":30407:30410   */\n      dup5\n        /* \"#utility.yul\":30400:30404   */\n      0x20\n        /* \"#utility.yul\":30392:30398   */\n      dup8\n        /* \"#utility.yul\":30388:30405   */\n      add\n        /* \"#utility.yul\":30353:30419   */\n      tag_542\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":30435:30451   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":30170:30457   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30462:30681   */\n    tag_527:\n        /* \"#utility.yul\":30611:30613   */\n      0x20\n        /* \"#utility.yul\":30600:30609   */\n      dup2\n        /* \"#utility.yul\":30593:30614   */\n      mstore\n        /* \"#utility.yul\":30574:30578   */\n      0x00\n        /* \"#utility.yul\":30631:30675   */\n      tag_503\n        /* \"#utility.yul\":30671:30673   */\n      0x20\n        /* \"#utility.yul\":30660:30669   */\n      dup4\n        /* \"#utility.yul\":30656:30674   */\n      add\n        /* \"#utility.yul\":30648:30654   */\n      dup5\n        /* \"#utility.yul\":30631:30675   */\n      tag_543\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220b9305666772370e093ee4c8ee6bd159714da096c97bb98d5634b3e049397ec7864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1080": {
									"entryPoint": null,
									"id": 1080,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_868": {
									"entryPoint": null,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 157,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:748:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:19"
															},
															"nodeType": "YulIf",
															"src": "115:70:19"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:19",
														"type": ""
													}
												],
												"src": "14:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "345:401:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "392:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "404:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "387:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:33:19"
															},
															"nodeType": "YulIf",
															"src": "355:53:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "417:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "427:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:40:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "476:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "531:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "486:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:49:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "544:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "599:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:49:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "667:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "622:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:49:19"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "680:60:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "735:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "690:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:50:19"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "279:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "290:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "302:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "310:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "318:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "326:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "334:6:19",
														"type": ""
													}
												],
												"src": "196:550:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b50604051620030733803806200307383398101604081905262000034916200010c565b600160005562000044336200009d565b600380546001600160a01b039687166001600160a01b031991821617909155600480549587169582169590951790945560058054938616938516939093179092558316608052600280549190931691161790556200017c565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200010757600080fd5b919050565b600080600080600060a086880312156200012557600080fd5b6200013086620000ef565b94506200014060208701620000ef565b93506200015060408701620000ef565b92506200016060608701620000ef565b91506200017060808701620000ef565b90509295509295909350565b608051612eaa620001c9600039600081816103510152818161083a015281816109220152818161099c01528181611c1301528181611cf601528181611d610152611ded0152612eaa6000f3fe60806040526004361061012a5760003560e01c806364df049e116100ab578063ad5c46481161006f578063ad5c46481461033f578063c549876914610373578063cbd2ec6514610393578063d4ff41dc146103b3578063f2fde38b146103d3578063f75ff53f146103f357600080fd5b806364df049e146102ac578063715018a6146102cc57806387e4401f146102e15780638da5cb5b146103015780639e53a69a1461031f57600080fd5b8063483abb9f116100f2578063483abb9f14610219578063509a1a41146102395780635ce052d71461024c5780635e14f68e1461026c57806363521def1461028c57600080fd5b80630f747d741461012f5780631df47f801461016c57806331e27e271461018e5780634266581e146101be57806345ea7231146101f9575b600080fd5b34801561013b57600080fd5b5060035461014f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017857600080fd5b5061018c610187366004612447565b610413565b005b34801561019a57600080fd5b506101ae6101a9366004612464565b610465565b6040519015158152602001610163565b3480156101ca57600080fd5b506101eb6101d9366004612447565b60076020526000908152604090205481565b604051908152602001610163565b34801561020557600080fd5b5061018c610214366004612490565b610493565b34801561022557600080fd5b5060045461014f906001600160a01b031681565b61018c610247366004612490565b6107ca565b34801561025857600080fd5b5061018c610267366004612447565b610b62565b34801561027857600080fd5b5060065461014f906001600160a01b031681565b34801561029857600080fd5b5061018c6102a7366004612490565b610bda565b3480156102b857600080fd5b5060025461014f906001600160a01b031681565b3480156102d857600080fd5b5061018c610e9c565b3480156102ed57600080fd5b5060055461014f906001600160a01b031681565b34801561030d57600080fd5b506001546001600160a01b031661014f565b34801561032b57600080fd5b5061018c61033a366004612504565b610eb0565b34801561034b57600080fd5b5061014f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561037f57600080fd5b5061018c61038e366004612447565b610ffa565b34801561039f57600080fd5b5061018c6103ae366004612579565b611072565b3480156103bf57600080fd5b5061018c6103ce366004612447565b61115a565b3480156103df57600080fd5b5061018c6103ee366004612447565b6111d2565b3480156103ff57600080fd5b5061018c61040e366004612447565b61124b565b61041b6112c3565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb1090600090a250565b6001600160a01b038216600090815260086020908152604080832084845290915290205460ff165b92915050565b6002600054036104be5760405162461bcd60e51b81526004016104b590612592565b60405180910390fd5b60026000556104d060208201826125e2565b80156104e657506104e460208301836125e2565b155b6105025760405162461bcd60e51b81526004016104b5906125ff565b6105126040830160208401612447565b6001600160a01b0316336001600160a01b0316146105425760405162461bcd60e51b81526004016104b59061262f565b600061055561055083612744565b61131d565b905061056182826113c4565b6000808061057560e0860160c08701612447565b6001600160a01b031663d310677d87876040518363ffffffff1660e01b81526004016105a29291906128cb565b606060405180830381865afa1580156105bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e39190612a73565b925092509250826106065760405162461bcd60e51b81526004016104b590612aaa565b60016008600061061c6040890160208a01612447565b6001600160a01b03168152602080820192909252604090810160009081206101008a013582529092529020805460ff19169115159190911790556106ac61066960e0870160c08801612447565b6106796060880160408901612447565b8461068b6101008a0160e08b01612447565b3361069c60408c0160208d01612447565b8c604001358c6101600135611849565b6106e66106bf6060870160408801612447565b6106cf6040880160208901612447565b6106df60408a0160208b01612447565b8585611a1b565b6106f660e0860160c08701612447565b6001600160a01b031661070f6040870160208801612447565b6001600160a01b03166107286040890160208a01612447565b6001600160a01b03167f95fb6205e23ff6bda16a2d1dba56b9ad7c783f67c96fa149785052f47696f2be876101008a018035906107689060e08d01612447565b61077860608d0160408e01612447565b6040805194855260208501939093526001600160a01b03918216848401521660608301526080820188905260a082018790528b013560c082015260e00160405180910390a45050600160005550505050565b6002600054036107ec5760405162461bcd60e51b81526004016104b590612592565b60026000556107fe60208201826125e2565b8015610814575061081260208301836125e2565b155b6108305760405162461bcd60e51b81526004016104b5906125ff565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661086b610100830160e08401612447565b6001600160a01b0316146108b95760405162461bcd60e51b8152602060048201526015602482015274086eae4e4cadcc6f240daeae6e840c4ca40ae8aa89605b1b60448201526064016104b5565b6108c96040830160208401612447565b6001600160a01b0316336001600160a01b0316146108f95760405162461bcd60e51b81526004016104b59061262f565b348260400135111561094f5761094a3330610918346040870135612af7565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190611b63565b61099a565b3482604001351461099a5760405162461bcd60e51b815260206004820152601560248201527409ae6ce5cecc2d8eaca40d2e640e8dede40d0d2ced605b1b60448201526064016104b5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156109f557600080fd5b505af1158015610a09573d6000803e3d6000fd5b50505050506000610a1d8261055090612744565b9050610a2982826113c4565b60008080610a3d60e0860160c08701612447565b6001600160a01b031663d310677d87876040518363ffffffff1660e01b8152600401610a6a9291906128cb565b606060405180830381865afa158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190612a73565b92509250925082610ace5760405162461bcd60e51b81526004016104b590612aaa565b600160086000610ae46040890160208a01612447565b6001600160a01b03168152602080820192909252604090810160009081206101008a013582529092529020805460ff19169115159190911790556106ac610b3160e0870160c08801612447565b610b416060880160408901612447565b84610b5260408a0160208b01612447565b8a604001358a6101600135611bd4565b610b6a6112c3565b6001600160a01b038116610b905760405162461bcd60e51b81526004016104b590612b0a565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fb4f5db40df3aced29e88a4babbc3b46e305e07d34098525d18b1497056e6383890600090a250565b600260005403610bfc5760405162461bcd60e51b81526004016104b590612592565b6002600055610c0e60208201826125e2565b158015610c235750610c2360208301836125e2565b610c3f5760405162461bcd60e51b81526004016104b5906125ff565b610c4f6040830160208401612447565b6001600160a01b0316336001600160a01b031614610c7f5760405162461bcd60e51b81526004016104b59061262f565b6000610c8d61055083612744565b9050610c9982826113c4565b60008080610cad60e0860160c08701612447565b6001600160a01b0316632a75ffee87876040518363ffffffff1660e01b8152600401610cda9291906128cb565b606060405180830381865afa158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190612a73565b92509250925082610d3e5760405162461bcd60e51b81526004016104b590612aaa565b600160086000610d546040890160208a01612447565b6001600160a01b03168152602080820192909252604090810160009081206101008a0135825290925290819020805460ff191692151592909217909155610db690610da59060608801908801612447565b336106df6040890160208a01612447565b610e1a610dc960e0870160c08801612447565b610dd96060880160408901612447565b84610deb6101008a0160e08b01612447565b610dfb60408b0160208c01612447565b610e0b60408d0160208e01612447565b8c604001358d60800135611849565b610e2a60e0860160c08701612447565b6001600160a01b0316610e436040870160208801612447565b6001600160a01b0316610e5c6040890160208a01612447565b6001600160a01b03167f68cd251d4d267c6e2034ff0088b990352b97b2002c0476587d0c4da889c11330876101008a018035906107689060e08d01612447565b610ea46112c3565b610eae6000611e14565b565b80610efd5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420626520656d7074792043616e63656c206c697374000000000060448201526064016104b5565b60005b81811015610fb25733600090815260076020526040902054838383818110610f2a57610f2a612b41565b905060200201351015610f4f5760405162461bcd60e51b81526004016104b590612b57565b336000908152600860205260408120600191858585818110610f7357610f73612b41565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610faa90612ba3565b915050610f00565b50336001600160a01b03167ffa0ae5d80fe3763c880a3839fab0294171a6f730d1f82c4cd5392c6f67b417328383604051610fee929190612bbc565b60405180910390a25050565b6110026112c3565b6001600160a01b0381166110285760405162461bcd60e51b81526004016104b590612b0a565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f80e3874461ebbd918ac3e81da0a92e5e51387d70f337237c9123e48d20e5a50890600090a250565b3360009081526007602052604090205481116110a05760405162461bcd60e51b81526004016104b590612b57565b336000908152600760205260409020546110bd906207a120612bf5565b811061110b5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f742063616e63656c20746f6f206d616e79206f726465727300000060448201526064016104b5565b3360008181526007602052604090819020839055517f1e7178d84f0b0825c65795cd62e7972809ad3aac6917843aaec596161b2c0a979061114f9084815260200190565b60405180910390a250565b6111626112c3565b6001600160a01b0381166111885760405162461bcd60e51b81526004016104b590612b0a565b600480546001600160a01b0319166001600160a01b0383169081179091556040517f36e2a376eabc3bc60cb88f29c288f53e36874a95a7f407330ab4f166b090569890600090a250565b6111da6112c3565b6001600160a01b03811661123f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b5565b61124881611e14565b50565b6112536112c3565b6001600160a01b0381166112795760405162461bcd60e51b81526004016104b590612b0a565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f205d78ab41afe80bd6b6aaa5d7599d5300ff8690da3ab1302c1b552f7baf7d8c90600090a250565b6001546001600160a01b03163314610eae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b5565b80516020808301516040808501516060860151608087015160a088015160c089015160e08a01516101008b01516101208c01516101408d01516101608e01516101808f01518051908e01209a5160009e6113a79e7f40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a850289e919d919c9b9a999897969594939201612c08565b604051602081830303815290604052805190602001209050919050565b600860006113d86040850160208601612447565b6001600160a01b0316815260208082019290925260409081016000908120610100860135825290925290205460ff1615801561144d5750600760006114236040850160208601612447565b6001600160a01b03166001600160a01b031681526020019081526020016000205482610100013510155b6114995760405162461bcd60e51b815260206004820152601d60248201527f4f726465723a204d61746368696e67206f72646572206578706972656400000060448201526064016104b5565b60006114ab6040840160208501612447565b6001600160a01b0316036115155760405162461bcd60e51b815260206004820152602b60248201527f546865204f72646572207369676e65722063616e6e6f7420626520746865207a60448201526a65726f206164647265737360a81b60648201526084016104b5565b60008260a001351161157b5760405162461bcd60e51b815260206004820152602960248201527f546865206f7264657220616d6f756e742073686f756c6420626520677265617460448201526806572207468616e20360bc1b60648201526084016104b5565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260009060c001604051602081830303815290604052805190602001209050611658828460200160208101906116349190612447565b6116466101c087016101a08801612c9b565b866101c00135876101e0013586611e66565b6116995760405162461bcd60e51b815260206004820152601260248201527114da59db985d1d5c994e88125b9d985b1a5960721b60448201526064016104b5565b6003546001600160a01b03166343b938c56116bb610100860160e08701612447565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156116ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117239190612cb6565b61176f5760405162461bcd60e51b815260206004820152601a60248201527f204e6f7420696e2043757272656e63792077686974656c69737400000000000060448201526064016104b5565b6004546001600160a01b031663999ba27c61179060e0860160c08701612447565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156117d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f89190612cb6565b6118445760405162461bcd60e51b815260206004820152601a60248201527f204e6f7420696e2053747261746567792077686974656c69737400000000000060448201526064016104b5565b505050565b8160006118568a83611fa5565b6002549091506001600160a01b03161580159061187257508015155b156118a057600254611893906001600160a01b038981169189911684611b63565b61189d8183612af7565b91505b600554604051637a7b1afd60e11b81526001600160a01b038b81166004830152602482018b905260448201879052600092839291169063f4f635fa906064016040805180830381865afa1580156118fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191f9190612cd3565b90925090506001600160a01b0382161580159061193b57508015155b156119c4576119556001600160a01b038a16898484611b63565b61195f8185612af7565b9350816001600160a01b03168a8c6001600160a01b03167f27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d8c856040516119bb9291906001600160a01b03929092168252602082015260400190565b60405180910390a45b6119ce8686612d01565b6119da85612710612d01565b10156119f85760405162461bcd60e51b81526004016104b590612d18565b611a0d6001600160a01b038a16898987611b63565b505050505050505050505050565b60065460405163cc15949360e01b81526001600160a01b038781166004830152600092169063cc15949390602401602060405180830381865afa158015611a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8a9190612d5a565b90506001600160a01b038116611ae25760405162461bcd60e51b815260206004820152601c60248201527f43616e277420666f756e74207472616e73666572206d616e616765720000000060448201526064016104b5565b6040516333f2fa9f60e01b81526001600160a01b0387811660048301528681166024830152858116604483015260648201859052608482018490528216906333f2fa9f9060a401600060405180830381600087803b158015611b4357600080fd5b505af1158015611b57573d6000803e3d6000fd5b50505050505050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611bce9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261202b565b50505050565b816000611be18883611fa5565b6002549091506001600160a01b031615801590611bfd57508015155b15611c4957600254611c3c906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836120fd565b611c468183612af7565b91505b600554604051637a7b1afd60e11b81526001600160a01b0389811660048301526024820189905260448201879052600092839291169063f4f635fa906064016040805180830381865afa158015611ca4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc89190612cd3565b90925090506001600160a01b03821615801590611ce457508015155b15611dac57611d1d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836120fd565b611d278185612af7565b9350816001600160a01b0316888a6001600160a01b03167f27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d7f000000000000000000000000000000000000000000000000000000000000000085604051611da39291906001600160a01b03929092168252602082015260400190565b60405180910390a45b611db68686612d01565b611dc285612710612d01565b1015611de05760405162461bcd60e51b81526004016104b590612d18565b611b576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001688866120fd565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60405161190160f01b602082015260228101829052604281018790526000908190606201604051602081830303815290604052805190602001209050611eb5876001600160a01b03163b151590565b15611f7757604080516020810187905280820186905260f888901b6001600160f81b0319166060820152815160418183030181526061820192839052630b135d3f60e11b9092526001600160a01b03891691631626ba7e91611f1b918591606501612dc7565b602060405180830381865afa158015611f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5c9190612de0565b6001600160e01b031916631626ba7e60e01b14915050611f9b565b866001600160a01b0316611f8d8288888861212d565b6001600160a01b0316149150505b9695505050505050565b600080836001600160a01b0316639dd1cda66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fe6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200a9190612e0a565b90506127106120198483612d01565b6120239190612e23565b949350505050565b6000612080826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661229f9092919063ffffffff16565b805190915015611844578080602001905181019061209e9190612cb6565b6118445760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104b5565b6040516001600160a01b03831660248201526044810182905261184490849063a9059cbb60e01b90606401611b97565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156121965760405162461bcd60e51b81526020600482015260146024820152731024b73b30b634b21039903830b930b6b2ba32b960611b60448201526064016104b5565b8360ff16601b14806121ab57508360ff16601c145b6121ed5760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b2103b103830b930b6b2ba32b960691b60448201526064016104b5565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015612241573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166122965760405162461bcd60e51b815260206004820152600f60248201526e1024b73b30b634b21039b4b3b732b960891b60448201526064016104b5565b95945050505050565b60606122ae84846000856122b8565b90505b9392505050565b6060824710156123195760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104b5565b6001600160a01b0385163b6123705760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104b5565b600080866001600160a01b0316858760405161238c9190612e45565b60006040518083038185875af1925050503d80600081146123c9576040519150601f19603f3d011682016040523d82523d6000602084013e6123ce565b606091505b50915091506123de8282866123e9565b979650505050505050565b606083156123f85750816122b1565b8251156124085782518084602001fd5b8160405162461bcd60e51b81526004016104b59190612e61565b6001600160a01b038116811461124857600080fd5b803561244281612422565b919050565b60006020828403121561245957600080fd5b81356122b181612422565b6000806040838503121561247757600080fd5b823561248281612422565b946020939093013593505050565b600080604083850312156124a357600080fd5b823567ffffffffffffffff808211156124bb57600080fd5b9084019060c082870312156124cf57600080fd5b909250602084013590808211156124e557600080fd5b50830161020081860312156124f957600080fd5b809150509250929050565b6000806020838503121561251757600080fd5b823567ffffffffffffffff8082111561252f57600080fd5b818501915085601f83011261254357600080fd5b81358181111561255257600080fd5b8660208260051b850101111561256757600080fd5b60209290920196919550909350505050565b60006020828403121561258b57600080fd5b5035919050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b801515811461124857600080fd5b8035612442816125c9565b6000602082840312156125f457600080fd5b81356122b1816125c9565b6020808252601690820152754572726f722041626f7574204f72646572205369646560501b604082015260600190565b60208082526018908201527f4f72646572206d757374206265207468652073656e6465720000000000000000604082015260600190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff811182821017156126a0576126a0612666565b60405290565b600082601f8301126126b757600080fd5b813567ffffffffffffffff808211156126d2576126d2612666565b604051601f8301601f19908116603f011681019082821181831017156126fa576126fa612666565b8160405283815286602085880101111561271357600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461244257600080fd5b6000610200823603121561275757600080fd5b61275f61267c565b612768836125d7565b815261277660208401612437565b602082015261278760408401612437565b6040820152606083013560608201526080830135608082015260a083013560a08201526127b660c08401612437565b60c08201526127c760e08401612437565b60e082015261010083810135908201526101208084013590820152610140808401359082015261016080840135908201526101808084013567ffffffffffffffff81111561281457600080fd5b612820368287016126a6565b8284015250506101a0612834818501612733565b908201526101c083810135908201526101e092830135928101929092525090565b6000808335601e1984360301811261286c57600080fd5b830160208101925035905067ffffffffffffffff81111561288c57600080fd5b80360382131561289b57600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408152600061010084356128df816125c9565b1515604084015260208501356128f481612422565b60018060a01b03811660608501525060408501356080840152606085013560a0840152608085013560c084015261292e60a0860186612855565b60c060e086015261294283860182846128a2565b91505083810360208501526102006129638261295d886125d7565b15159052565b61296f60208701612437565b6001600160a01b0316602083015261298960408701612437565b6001600160a01b038116604084015250606086013560608301526080860135608083015260a086013560a08301526129c360c08701612437565b6001600160a01b031660c08301526129dd60e08701612437565b6001600160a01b031660e0830152828601359282019290925261012080860135908201526101408086013590820152610160808601359082015261018091612a2783870187612855565b8285850152612a3983850182846128a2565b94505050506101a0612a4c818701612733565b60ff16908201526101c085810135908201526101e094850135940193909352509092915050565b600080600060608486031215612a8857600080fd5b8351612a93816125c9565b602085015160409095015190969495509392505050565b60208082526018908201527f53747261746567792073686f756c642062652076616c69640000000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561048d5761048d612ae1565b6020808252601f908201527f43616e6e6f742075706461746520746f2061206e756c6c206164647265737300604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f7765722060408201526b1d1a185b8818dd5c9c995b9d60a21b606082015260800190565b600060018201612bb557612bb5612ae1565b5060010190565b6020808252810182905260006001600160fb1b03831115612bdc57600080fd5b8260051b80856040850137919091016040019392505050565b8082018082111561048d5761048d612ae1565b8e81528d151560208201526001600160a01b038d811660408301528c1660608201526101c081018b60808301528a60a08301528960c0830152612c5660e083018a6001600160a01b03169052565b6001600160a01b0388166101008301526101208201969096526101408101949094526101608401929092526101808301526101a0909101529998505050505050505050565b600060208284031215612cad57600080fd5b6122b182612733565b600060208284031215612cc857600080fd5b81516122b1816125c9565b60008060408385031215612ce657600080fd5b8251612cf181612422565b6020939093015192949293505050565b808202811582820484141761048d5761048d612ae1565b60208082526022908201527f5468652066656520697320746f6f206869676820666f72207468652073656c6c60408201526132b960f11b606082015260800190565b600060208284031215612d6c57600080fd5b81516122b181612422565b60005b83811015612d92578181015183820152602001612d7a565b50506000910152565b60008151808452612db3816020860160208601612d77565b601f01601f19169290920160200192915050565b8281526040602082015260006122ae6040830184612d9b565b600060208284031215612df257600080fd5b81516001600160e01b0319811681146122b157600080fd5b600060208284031215612e1c57600080fd5b5051919050565b600082612e4057634e487b7160e01b600052601260045260246000fd5b500490565b60008251612e57818460208701612d77565b9190910192915050565b6020815260006122b16020830184612d9b56fea2646970667358221220b9305666772370e093ee4c8ee6bd159714da096c97bb98d5634b3e049397ec7864736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3073 CODESIZE SUB DUP1 PUSH3 0x3073 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x10C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH3 0x44 CALLER PUSH3 0x9D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP6 DUP8 AND SWAP6 DUP3 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP4 DUP7 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP4 AND PUSH1 0x80 MSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH3 0x17C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x130 DUP7 PUSH3 0xEF JUMP JUMPDEST SWAP5 POP PUSH3 0x140 PUSH1 0x20 DUP8 ADD PUSH3 0xEF JUMP JUMPDEST SWAP4 POP PUSH3 0x150 PUSH1 0x40 DUP8 ADD PUSH3 0xEF JUMP JUMPDEST SWAP3 POP PUSH3 0x160 PUSH1 0x60 DUP8 ADD PUSH3 0xEF JUMP JUMPDEST SWAP2 POP PUSH3 0x170 PUSH1 0x80 DUP8 ADD PUSH3 0xEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2EAA PUSH3 0x1C9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x351 ADD MSTORE DUP2 DUP2 PUSH2 0x83A ADD MSTORE DUP2 DUP2 PUSH2 0x922 ADD MSTORE DUP2 DUP2 PUSH2 0x99C ADD MSTORE DUP2 DUP2 PUSH2 0x1C13 ADD MSTORE DUP2 DUP2 PUSH2 0x1CF6 ADD MSTORE DUP2 DUP2 PUSH2 0x1D61 ADD MSTORE PUSH2 0x1DED ADD MSTORE PUSH2 0x2EAA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64DF049E GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAD5C4648 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xC5498769 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xCBD2EC65 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xD4FF41DC EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xF75FF53F EQ PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x64DF049E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x87E4401F EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x9E53A69A EQ PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x483ABB9F GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x483ABB9F EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x509A1A41 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x5CE052D7 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x5E14F68E EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x63521DEF EQ PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF747D74 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x1DF47F80 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x31E27E27 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x4266581E EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x45EA7231 EQ PUSH2 0x1F9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x163 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x163 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0xE9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x2504 JUMP JUMPDEST PUSH2 0xEB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x115A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x124B JUMP JUMPDEST PUSH2 0x41B PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8CFFB07FAA2874440346743BDC0A86B06C3335CC47DC49B327D10E77B73CEB10 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x4D0 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x25E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E6 JUMPI POP PUSH2 0x4E4 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x25E2 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x512 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x555 PUSH2 0x550 DUP4 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x131D JUMP JUMPDEST SWAP1 POP PUSH2 0x561 DUP3 DUP3 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x575 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD310677D DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP3 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x606 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x61C PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x6AC PUSH2 0x669 PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x679 PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x2447 JUMP JUMPDEST DUP5 PUSH2 0x68B PUSH2 0x100 DUP11 ADD PUSH1 0xE0 DUP12 ADD PUSH2 0x2447 JUMP JUMPDEST CALLER PUSH2 0x69C PUSH1 0x40 DUP13 ADD PUSH1 0x20 DUP14 ADD PUSH2 0x2447 JUMP JUMPDEST DUP13 PUSH1 0x40 ADD CALLDATALOAD DUP13 PUSH2 0x160 ADD CALLDATALOAD PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x6E6 PUSH2 0x6BF PUSH1 0x60 DUP8 ADD PUSH1 0x40 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x6CF PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x6DF PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2447 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x6F6 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x70F PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x728 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x95FB6205E23FF6BDA16A2D1DBA56B9AD7C783F67C96FA149785052F47696F2BE DUP8 PUSH2 0x100 DUP11 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x768 SWAP1 PUSH1 0xE0 DUP14 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x778 PUSH1 0x60 DUP14 ADD PUSH1 0x40 DUP15 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP5 DUP5 ADD MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP8 SWAP1 MSTORE DUP12 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x7FE PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x25E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x814 JUMPI POP PUSH2 0x812 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x25E2 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x86B PUSH2 0x100 DUP4 ADD PUSH1 0xE0 DUP5 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x86EAE4E4CADCC6F240DAEAE6E840C4CA40AE8AA89 PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x8C9 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x262F JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x40 ADD CALLDATALOAD GT ISZERO PUSH2 0x94F JUMPI PUSH2 0x94A CALLER ADDRESS PUSH2 0x918 CALLVALUE PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x2AF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 SWAP2 SWAP1 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x40 ADD CALLDATALOAD EQ PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x9AE6CE5CECC2D8EACA40D2E640E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0xA1D DUP3 PUSH2 0x550 SWAP1 PUSH2 0x2744 JUMP JUMPDEST SWAP1 POP PUSH2 0xA29 DUP3 DUP3 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xA3D PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD310677D DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP3 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0xAE4 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x6AC PUSH2 0xB31 PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xB41 PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x2447 JUMP JUMPDEST DUP5 PUSH2 0xB52 PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2447 JUMP JUMPDEST DUP11 PUSH1 0x40 ADD CALLDATALOAD DUP11 PUSH2 0x160 ADD CALLDATALOAD PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0xB6A PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB4F5DB40DF3ACED29E88A4BABBC3B46E305E07D34098525D18B1497056E63838 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xC0E PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x25E2 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xC23 JUMPI POP PUSH2 0xC23 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0xC4F PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8D PUSH2 0x550 DUP4 PUSH2 0x2744 JUMP JUMPDEST SWAP1 POP PUSH2 0xC99 DUP3 DUP3 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xCAD PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2A75FFEE DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP3 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1B SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0xD54 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0xDB6 SWAP1 PUSH2 0xDA5 SWAP1 PUSH1 0x60 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST CALLER PUSH2 0x6DF PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xE1A PUSH2 0xDC9 PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xDD9 PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x2447 JUMP JUMPDEST DUP5 PUSH2 0xDEB PUSH2 0x100 DUP11 ADD PUSH1 0xE0 DUP12 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xDFB PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xE0B PUSH1 0x40 DUP14 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x2447 JUMP JUMPDEST DUP13 PUSH1 0x40 ADD CALLDATALOAD DUP14 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x1849 JUMP JUMPDEST PUSH2 0xE2A PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE43 PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE5C PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x68CD251D4D267C6E2034FF0088B990352B97B2002C0476587D0C4DA889C11330 DUP8 PUSH2 0x100 DUP11 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x768 SWAP1 PUSH1 0xE0 DUP14 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0xEAE PUSH1 0x0 PUSH2 0x1E14 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420626520656D7074792043616E63656C206C6973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFB2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xF2A JUMPI PUSH2 0xF2A PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT ISZERO PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xF73 JUMPI PUSH2 0xF73 PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xFAA SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF00 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFA0AE5D80FE3763C880A3839FAB0294171A6F730D1F82C4CD5392C6F67B41732 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFEE SWAP3 SWAP2 SWAP1 PUSH2 0x2BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1002 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x80E3874461EBBD918AC3E81DA0A92E5E51387D70F337237C9123E48D20E5A508 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10BD SWAP1 PUSH3 0x7A120 PUSH2 0x2BF5 JUMP JUMPDEST DUP2 LT PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C20746F6F206D616E79206F7264657273000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x1E7178D84F0B0825C65795CD62E7972809AD3AAC6917843AAEC596161B2C0A97 SWAP1 PUSH2 0x114F SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1162 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x36E2A376EABC3BC60CB88F29C288F53E36874A95A7F407330AB4F166B0905698 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x11DA PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x1248 DUP2 PUSH2 0x1E14 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1253 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x205D78AB41AFE80BD6B6AAA5D7599D5300FF8690DA3AB1302C1B552F7BAF7D8C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xE0 DUP11 ADD MLOAD PUSH2 0x100 DUP12 ADD MLOAD PUSH2 0x120 DUP13 ADD MLOAD PUSH2 0x140 DUP14 ADD MLOAD PUSH2 0x160 DUP15 ADD MLOAD PUSH2 0x180 DUP16 ADD MLOAD DUP1 MLOAD SWAP1 DUP15 ADD KECCAK256 SWAP11 MLOAD PUSH1 0x0 SWAP15 PUSH2 0x13A7 SWAP15 PUSH32 0x40261ADE532FA1D2C7293DF30AAADB9B3C616FAE525A0B56D3D411C841A85028 SWAP15 SWAP2 SWAP14 SWAP2 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 ADD PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0x13D8 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP7 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x144D JUMPI POP PUSH1 0x7 PUSH1 0x0 PUSH2 0x1423 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x100 ADD CALLDATALOAD LT ISZERO JUMPDEST PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F726465723A204D61746368696E67206F726465722065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AB PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1515 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865204F72646572207369676E65722063616E6E6F7420626520746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA0 ADD CALLDATALOAD GT PUSH2 0x157B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F7264657220616D6F756E742073686F756C64206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6572207468616E203 PUSH1 0xBC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2E3445393F211D11D7F88D325BC26CE78976B4DECD39029FEB202D9B409FC3C5 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1658 DUP3 DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1634 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1646 PUSH2 0x1C0 DUP8 ADD PUSH2 0x1A0 DUP9 ADD PUSH2 0x2C9B JUMP JUMPDEST DUP7 PUSH2 0x1C0 ADD CALLDATALOAD DUP8 PUSH2 0x1E0 ADD CALLDATALOAD DUP7 PUSH2 0x1E66 JUMP JUMPDEST PUSH2 0x1699 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DA59DB985D1D5C994E88125B9D985B1A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x43B938C5 PUSH2 0x16BB PUSH2 0x100 DUP7 ADD PUSH1 0xE0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1723 SWAP2 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH2 0x176F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420696E2043757272656E63792077686974656C697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x999BA27C PUSH2 0x1790 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17F8 SWAP2 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH2 0x1844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420696E2053747261746567792077686974656C697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x1856 DUP11 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1872 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x18A0 JUMPI PUSH1 0x2 SLOAD PUSH2 0x1893 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP10 SWAP2 AND DUP5 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x189D DUP2 DUP4 PUSH2 0x2AF7 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7A7B1AFD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xF4F635FA SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x191F SWAP2 SWAP1 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x193B JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x19C4 JUMPI PUSH2 0x1955 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP10 DUP5 DUP5 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x195F DUP2 DUP6 PUSH2 0x2AF7 JUMP JUMPDEST SWAP4 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D DUP13 DUP6 PUSH1 0x40 MLOAD PUSH2 0x19BB SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH2 0x19CE DUP7 DUP7 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x19DA DUP6 PUSH2 0x2710 PUSH2 0x2D01 JUMP JUMPDEST LT ISZERO PUSH2 0x19F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH2 0x1A0D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP10 DUP10 DUP8 PUSH2 0x1B63 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xCC159493 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xCC159493 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A8A SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1AE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420666F756E74207472616E73666572206D616E6167657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x33F2FA9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0x33F2FA9F SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1BCE SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x202B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x1BE1 DUP9 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BFD JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x2 SLOAD PUSH2 0x1C3C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x1C46 DUP2 DUP4 PUSH2 0x2AF7 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7A7B1AFD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xF4F635FA SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC8 SWAP2 SWAP1 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1CE4 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1DAC JUMPI PUSH2 0x1D1D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x1D27 DUP2 DUP6 PUSH2 0x2AF7 JUMP JUMPDEST SWAP4 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D PUSH32 0x0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1DA3 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH2 0x1DB6 DUP7 DUP7 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x1DC2 DUP6 PUSH2 0x2710 PUSH2 0x2D01 JUMP JUMPDEST LT ISZERO PUSH2 0x1DE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH2 0x1B57 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP9 DUP7 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1EB5 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1F77 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xF8 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x41 DUP2 DUP4 SUB ADD DUP2 MSTORE PUSH1 0x61 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x1626BA7E SWAP2 PUSH2 0x1F1B SWAP2 DUP6 SWAP2 PUSH1 0x65 ADD PUSH2 0x2DC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F5C SWAP2 SWAP1 PUSH2 0x2DE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL EQ SWAP2 POP POP PUSH2 0x1F9B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F8D DUP3 DUP9 DUP9 DUP9 PUSH2 0x212D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP2 POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9DD1CDA6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200A SWAP2 SWAP1 PUSH2 0x2E0A JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 PUSH2 0x2019 DUP5 DUP4 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x2023 SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2080 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x229F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1844 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x209E SWAP2 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH2 0x1844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1844 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x2196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1024B73B30B634B21039903830B930B6B2BA32B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x21AB JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x21ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B2103B103830B930B6B2BA32B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1024B73B30B634B21039B4B3B732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x22AE DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2319 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x238C SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x23DE DUP3 DUP3 DUP7 PUSH2 0x23E9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x23F8 JUMPI POP DUP2 PUSH2 0x22B1 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2408 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x2E61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2442 DUP2 PUSH2 0x2422 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22B1 DUP2 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2482 DUP2 PUSH2 0x2422 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x24BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x24CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x24E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x24F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x252F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x258B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2442 DUP2 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22B1 DUP2 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x4572726F722041626F7574204F726465722053696465 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F72646572206D757374206265207468652073656E6465720000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x26A0 JUMPI PUSH2 0x26A0 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x26D2 JUMPI PUSH2 0x26D2 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x26FA JUMPI PUSH2 0x26FA PUSH2 0x2666 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x2757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x275F PUSH2 0x267C JUMP JUMPDEST PUSH2 0x2768 DUP4 PUSH2 0x25D7 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2776 PUSH1 0x20 DUP5 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2787 PUSH1 0x40 DUP5 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x27B6 PUSH1 0xC0 DUP5 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x27C7 PUSH1 0xE0 DUP5 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x160 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x180 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2820 CALLDATASIZE DUP3 DUP8 ADD PUSH2 0x26A6 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x1A0 PUSH2 0x2834 DUP2 DUP6 ADD PUSH2 0x2733 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x286C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x289B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x100 DUP5 CALLDATALOAD PUSH2 0x28DF DUP2 PUSH2 0x25C9 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x28F4 DUP2 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x292E PUSH1 0xA0 DUP7 ADD DUP7 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x2942 DUP4 DUP7 ADD DUP3 DUP5 PUSH2 0x28A2 JUMP JUMPDEST SWAP2 POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x200 PUSH2 0x2963 DUP3 PUSH2 0x295D DUP9 PUSH2 0x25D7 JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x296F PUSH1 0x20 DUP8 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2989 PUSH1 0x40 DUP8 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP7 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x29C3 PUSH1 0xC0 DUP8 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x29DD PUSH1 0xE0 DUP8 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xE0 DUP4 ADD MSTORE DUP3 DUP7 ADD CALLDATALOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x120 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x160 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x180 SWAP2 PUSH2 0x2A27 DUP4 DUP8 ADD DUP8 PUSH2 0x2855 JUMP JUMPDEST DUP3 DUP6 DUP6 ADD MSTORE PUSH2 0x2A39 DUP4 DUP6 ADD DUP3 DUP5 PUSH2 0x28A2 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH2 0x1A0 PUSH2 0x2A4C DUP2 DUP8 ADD PUSH2 0x2733 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP6 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 SWAP5 DUP6 ADD CALLDATALOAD SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x2A93 DUP2 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x53747261746567792073686F756C642062652076616C69640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E63656C204F72646572206E6F6E63652063616E6E6F74206C6F77657220 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x1D1A185B8818DD5C9C995B9D PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2BB5 JUMPI PUSH2 0x2BB5 PUSH2 0x2AE1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x2BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0x2AE1 JUMP JUMPDEST DUP15 DUP2 MSTORE DUP14 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP13 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE DUP10 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2C56 PUSH1 0xE0 DUP4 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x140 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH2 0x160 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 SWAP1 SWAP2 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B1 DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22B1 DUP2 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x2CF1 DUP2 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5468652066656520697320746F6F206869676820666F72207468652073656C6C PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22B1 DUP2 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D92 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D7A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2DB3 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x22AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2D9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x22B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E40 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2E57 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2D77 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22B1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D9B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 ADDRESS JUMP PUSH7 0x772370E093EE4C DUP15 0xE6 0xBD ISZERO SWAP8 EQ 0xDA MULMOD PUSH13 0x97BB98D5634B3E049397EC7864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "995:22314:8:-:0;;;3921:572;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:2;1806:7;:22;936:32:0;719:10:7;936:18:0;:32::i;:::-;4229:15:8;:54;;-1:-1:-1;;;;;4229:54:8;;;-1:-1:-1;;;;;;4229:54:8;;;;;;;4293:16;:50;;;;;;;;;;;;;;;4353:17;:57;;;;;;;;;;;;;;;4420:12;;;;4442:20;:44;;;;;;;;;;;995:22314;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:177:19:-;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:550::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:50;735:3;724:9;720:19;690:50;:::i;:::-;680:60;;196:550;;;;;;;;:::o;:::-;995:22314:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH_960": {
									"entryPoint": null,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_calculateProtocolFee_1929": {
									"entryPoint": 8101,
									"id": 1929,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_callOptionalReturn_560": {
									"entryPoint": 8235,
									"id": 560,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 4803,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_868": {
									"entryPoint": null,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferFeesAndFundsWithWETH_1862": {
									"entryPoint": 7124,
									"id": 1862,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_transferFeesAndFunds_1740": {
									"entryPoint": 6217,
									"id": 1740,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@_transferNonFungibleToken_1904": {
									"entryPoint": 6683,
									"id": 1904,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 7700,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOrder_2031": {
									"entryPoint": 5060,
									"id": 2031,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cancelAllOrdersForSender_1541": {
									"entryPoint": 4210,
									"id": 1541,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cancelMultipleMakerOrders_1598": {
									"entryPoint": 3760,
									"id": 1598,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@currencyManager_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executionManager_968": {
									"entryPoint": null,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_720": {
									"entryPoint": 8888,
									"id": 720,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_650": {
									"entryPoint": 8863,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hash_2463": {
									"entryPoint": 4893,
									"id": 2463,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_579": {
									"entryPoint": null,
									"id": 579,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isUserOrderNonceExecutedOrCancelled_1614": {
									"entryPoint": 1125,
									"id": 1614,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@matchSellerOrdersWETH_1252": {
									"entryPoint": 1994,
									"id": 1252,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@matchSellerOrders_1376": {
									"entryPoint": 1171,
									"id": 1376,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@matchesBuyerOrder_1500": {
									"entryPoint": 3034,
									"id": 1500,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@protocolFeeRecipient_962": {
									"entryPoint": null,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recover_2527": {
									"entryPoint": 8493,
									"id": 2527,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 3740,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeManager_971": {
									"entryPoint": null,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_338": {
									"entryPoint": 7011,
									"id": 338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_312": {
									"entryPoint": 8445,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 4562,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferSelectorNFT_974": {
									"entryPoint": null,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCurrencyManager_2059": {
									"entryPoint": 2914,
									"id": 2059,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateExecutionManager_2087": {
									"entryPoint": 4442,
									"id": 2087,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateProtocolFeeRecipient_2103": {
									"entryPoint": 1043,
									"id": 2103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeManager_2131": {
									"entryPoint": 4090,
									"id": 2131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTransferSelectorNFT_2159": {
									"entryPoint": 4683,
									"id": 2159,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userMinOrderNonce_978": {
									"entryPoint": null,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_855": {
									"entryPoint": 9193,
									"id": 855,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@verify_2587": {
									"entryPoint": 7782,
									"id": 2587,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 9687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 9894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 11610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 11475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 9476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 9698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256t_uint256_fromMemory": {
									"entryPoint": 10867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_TakerOrder_$2419_calldata_ptrt_struct$_MakerOrder_$2406_calldata_ptr": {
									"entryPoint": 9360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 11419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint8": {
									"entryPoint": 10035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_bytes": {
									"entryPoint": 11675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 10402,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 11196,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed": {
									"entryPoint": 11272,
									"id": null,
									"parameterSlots": 15,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11719,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TheCurrencyManager_$2257__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TheExManager_$2294__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TheRoyaltyManager_$2310__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TheTransferSelector_$2368__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1_t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1_t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_TakerOrder_$2419_calldata_ptr_t_struct$_MakerOrder_$2406_calldata_ptr__to_t_struct$_TakerOrder_$2419_memory_ptr_t_struct$_MakerOrder_$2406_memory_ptr__fromStack_reversed": {
									"entryPoint": 10443,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_memory": {
									"entryPoint": 9852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"calldata_access_bytes_calldata": {
									"entryPoint": 10325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_add_t_uint256": {
									"entryPoint": 11253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"convert_t_struct$_MakerOrder_$2406_calldata_ptr_to_t_struct$_MakerOrder_$2406_memory_ptr": {
									"entryPoint": 10052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 11639,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 11171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 9250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 9673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:30683:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "142:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "152:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "164:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "175:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "160:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "152:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "194:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "209:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "225:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "230:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "221:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "221:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "234:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "217:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "217:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "205:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "205:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TheCurrencyManager_$2257__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "111:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "122:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "133:4:19",
														"type": ""
													}
												],
												"src": "14:230:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:86:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "358:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "367:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "360:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "360:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "360:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "317:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "328:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "343:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "348:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "339:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "339:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "352:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "335:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "335:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "324:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "314:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "314:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "307:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:50:19"
															},
															"nodeType": "YulIf",
															"src": "304:70:19"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "283:5:19",
														"type": ""
													}
												],
												"src": "249:131:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "434:85:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "444:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "466:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "453:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "453:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "507:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "482:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "482:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "482:31:19"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "413:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "424:5:19",
														"type": ""
													}
												],
												"src": "385:134:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "594:177:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "640:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "649:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "652:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "642:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "642:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "642:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "615:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "624:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "636:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:32:19"
															},
															"nodeType": "YulIf",
															"src": "604:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "665:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "691:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "678:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "669:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "735:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "710:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "710:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "750:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "760:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "560:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "571:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "583:6:19",
														"type": ""
													}
												],
												"src": "524:247:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "863:228:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "909:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "918:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "921:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "911:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "911:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "884:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "893:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "880:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "880:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "876:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:32:19"
															},
															"nodeType": "YulIf",
															"src": "873:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "934:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "960:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "947:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "947:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "938:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "979:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "979:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1019:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1029:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1043:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1070:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1081:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1053:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:32:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "821:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "832:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "844:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "852:6:19",
														"type": ""
													}
												],
												"src": "776:315:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1137:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1154:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1173:5:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1166:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1166:13:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1159:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1159:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1147:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1147:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1147:34:19"
														}
													]
												},
												"name": "abi_encode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1121:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1128:3:19",
														"type": ""
													}
												],
												"src": "1096:91:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1287:92:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1297:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1309:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1320:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1297:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1339:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1364:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1357:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1357:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1350:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1332:41:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1256:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1267:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1278:4:19",
														"type": ""
													}
												],
												"src": "1192:187:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1485:76:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1495:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1518:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1503:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1503:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1495:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1537:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1548:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1530:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1454:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:19",
														"type": ""
													}
												],
												"src": "1384:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:532:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1759:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1768:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1771:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1761:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1761:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1761:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1734:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1743:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1726:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:32:19"
															},
															"nodeType": "YulIf",
															"src": "1723:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1784:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1811:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1798:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:23:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1788:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1830:28:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1840:18:19",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1834:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1885:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1894:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1897:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1887:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1887:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1887:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1873:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1881:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1870:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:14:19"
															},
															"nodeType": "YulIf",
															"src": "1867:34:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1910:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1924:9:19"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1935:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1920:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:22:19"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1914:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1981:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1993:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1983:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1983:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1983:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1962:7:19"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1971:2:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1958:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1976:3:19",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1954:26:19"
															},
															"nodeType": "YulIf",
															"src": "1951:46:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2006:12:19",
															"value": {
																"name": "_2",
																"nodeType": "YulIdentifier",
																"src": "2016:2:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2027:48:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2060:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2071:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2056:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2056:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2043:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:32:19"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2031:8:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2104:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2113:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2116:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2106:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2106:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2106:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2090:8:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2100:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2087:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:16:19"
															},
															"nodeType": "YulIf",
															"src": "2084:36:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2129:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2143:9:19"
																	},
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2154:8:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2139:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2139:24:19"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2133:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2202:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2214:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2204:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2204:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2204:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2183:7:19"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2192:2:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2179:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2179:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:3:19",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2175:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2175:26:19"
															},
															"nodeType": "YulIf",
															"src": "2172:46:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2227:12:19",
															"value": {
																"name": "_3",
																"nodeType": "YulIdentifier",
																"src": "2237:2:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2227:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_TakerOrder_$2419_calldata_ptrt_struct$_MakerOrder_$2406_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1671:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1682:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1694:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1702:6:19",
														"type": ""
													}
												],
												"src": "1566:679:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2372:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2382:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2394:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2405:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2382:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2424:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2439:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2455:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2460:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2451:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2451:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2464:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2447:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2447:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2417:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2417:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TheExManager_$2294__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2341:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2352:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2363:4:19",
														"type": ""
													}
												],
												"src": "2250:224:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2608:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2618:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2630:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2641:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2626:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2618:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2660:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2675:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2691:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2696:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2687:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2687:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2700:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2683:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2683:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2653:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TheTransferSelector_$2368__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2577:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2588:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2599:4:19",
														"type": ""
													}
												],
												"src": "2479:231:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2759:60:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2776:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2785:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2800:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2805:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2796:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2796:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2809:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2792:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2792:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2781:31:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2769:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:44:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2769:44:19"
														}
													]
												},
												"name": "abi_encode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2743:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2750:3:19",
														"type": ""
													}
												],
												"src": "2715:104:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2925:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2935:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2947:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2958:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2943:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2943:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2935:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2977:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2992:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3008:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3013:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3004:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3004:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3017:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3000:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3000:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2988:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2970:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2894:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2905:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2916:4:19",
														"type": ""
													}
												],
												"src": "2824:203:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3159:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3169:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3181:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3192:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3177:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3177:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3169:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3226:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3242:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3247:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3238:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3238:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3251:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3234:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3234:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3222:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3222:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TheRoyaltyManager_$2310__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3128:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3139:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3150:4:19",
														"type": ""
													}
												],
												"src": "3032:229:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3371:510:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3417:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3426:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3429:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3419:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3419:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3419:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3392:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3401:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3413:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3384:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:32:19"
															},
															"nodeType": "YulIf",
															"src": "3381:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3442:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3469:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3456:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:23:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3446:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3488:28:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3498:18:19",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3492:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3543:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3555:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3545:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3545:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3545:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3531:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3539:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3528:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3528:14:19"
															},
															"nodeType": "YulIf",
															"src": "3525:34:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3568:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3582:9:19"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3593:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3578:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:22:19"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3572:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3648:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3657:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3660:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3650:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3650:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3650:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3627:2:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3631:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3623:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3623:13:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3638:7:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3619:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3619:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3612:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:35:19"
															},
															"nodeType": "YulIf",
															"src": "3609:55:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3673:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3700:2:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3687:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:16:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3677:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3730:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3739:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3742:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3732:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3732:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3732:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3718:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3726:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3715:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3715:14:19"
															},
															"nodeType": "YulIf",
															"src": "3712:34:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3804:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3816:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3806:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3806:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3806:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3769:2:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3777:1:19",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3780:6:19"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3773:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3773:14:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3765:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3765:23:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3790:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:32:19"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3795:7:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3758:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3758:45:19"
															},
															"nodeType": "YulIf",
															"src": "3755:65:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3829:21:19",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3843:2:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3839:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3839:11:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3859:16:19",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "3869:6:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3329:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3340:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3352:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3360:6:19",
														"type": ""
													}
												],
												"src": "3266:615:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3956:110:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4002:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4011:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4004:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4004:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4004:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3977:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3986:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3973:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3973:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3998:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3969:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:32:19"
															},
															"nodeType": "YulIf",
															"src": "3966:52:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4027:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4050:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4037:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4027:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3922:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3933:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3945:6:19",
														"type": ""
													}
												],
												"src": "3886:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4245:181:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4262:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4273:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4255:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4255:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4255:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4296:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4307:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4292:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4292:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4312:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4285:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4285:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4335:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:18:19"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4351:33:19",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:61:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4324:61:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4394:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4406:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4417:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4402:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4402:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4394:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4222:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4236:4:19",
														"type": ""
													}
												],
												"src": "4071:355:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4473:76:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4527:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4536:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4539:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4529:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4529:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4529:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4496:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4517:5:19"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4510:6:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4510:13:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4503:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4503:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4493:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4493:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:40:19"
															},
															"nodeType": "YulIf",
															"src": "4483:60:19"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4462:5:19",
														"type": ""
													}
												],
												"src": "4431:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4600:82:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4610:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4632:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4619:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4610:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4670:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4648:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4648:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4648:28:19"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4579:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4590:5:19",
														"type": ""
													}
												],
												"src": "4554:128:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4754:174:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4800:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4809:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4812:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4802:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4802:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4802:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4775:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4784:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4771:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4796:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4767:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4767:32:19"
															},
															"nodeType": "YulIf",
															"src": "4764:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4825:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4851:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4838:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4838:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4829:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4892:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4870:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4870:28:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4907:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4917:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4907:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4720:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4731:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4743:6:19",
														"type": ""
													}
												],
												"src": "4687:241:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5107:172:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5124:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5117:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5117:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5158:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5169:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5154:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5154:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5174:2:19",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5197:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5208:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5193:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5193:18:19"
																	},
																	{
																		"hexValue": "4572726f722041626f7574204f726465722053696465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5213:24:19",
																		"type": "",
																		"value": "Error About Order Side"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5186:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:52:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5186:52:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5247:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5259:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5255:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5247:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5098:4:19",
														"type": ""
													}
												],
												"src": "4933:346:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5458:174:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5475:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5486:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5468:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5468:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5509:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5520:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5505:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5505:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5525:2:19",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5498:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5498:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5498:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5548:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5544:18:19"
																	},
																	{
																		"hexValue": "4f72646572206d757374206265207468652073656e646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5564:26:19",
																		"type": "",
																		"value": "Order must be the sender"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5537:54:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5600:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5612:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5608:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5608:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5600:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5435:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5449:4:19",
														"type": ""
													}
												],
												"src": "5284:348:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5669:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5686:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5693:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5698:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5689:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5689:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5729:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5719:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5750:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5753:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5743:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5743:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5637:127:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5810:209:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5820:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5830:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5830:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5820:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5848:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5870:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5878:6:19",
																		"type": "",
																		"value": "0x0200"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5866:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:19:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5852:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5960:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5962:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5962:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5962:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5903:10:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5915:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5900:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5939:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5951:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5936:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5936:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5897:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5897:62:19"
															},
															"nodeType": "YulIf",
															"src": "5894:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6002:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5991:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:22:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5991:22:19"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5799:6:19",
														"type": ""
													}
												],
												"src": "5769:250:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6076:666:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6125:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6134:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6137:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6127:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6127:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6127:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6104:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6112:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6100:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6100:17:19"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6119:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6096:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6096:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6089:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:35:19"
															},
															"nodeType": "YulIf",
															"src": "6086:55:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6150:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6173:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6160:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:20:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6154:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6189:28:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6199:18:19",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6193:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6240:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6242:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6242:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6242:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6232:2:19"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6236:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6229:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:10:19"
															},
															"nodeType": "YulIf",
															"src": "6226:36:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6271:17:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6285:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6281:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6281:7:19"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6275:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6297:23:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6317:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6311:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6311:9:19"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6301:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6329:71:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6351:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "6375:2:19"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6379:4:19",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6371:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6371:13:19"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "6386:2:19"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "6367:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6367:22:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6391:2:19",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6363:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6363:31:19"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "6396:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6359:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6359:40:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6347:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6347:53:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6333:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6459:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6461:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6461:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6461:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6418:10:19"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6430:2:19"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6415:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6415:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6438:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6450:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6435:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6435:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6412:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6412:46:19"
															},
															"nodeType": "YulIf",
															"src": "6409:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6497:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6501:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6490:22:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6490:22:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6536:2:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6521:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:18:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6521:18:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6587:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6596:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6599:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6589:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6589:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6589:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6562:6:19"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6570:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6558:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6558:15:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6575:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6554:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6554:26:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6582:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6551:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:35:19"
															},
															"nodeType": "YulIf",
															"src": "6548:55:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6629:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6637:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6625:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6625:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6648:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6656:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6644:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6644:17:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6663:2:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6612:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6612:54:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "6690:6:19"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6698:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6686:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6686:15:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6703:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6682:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6682:26:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6710:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6675:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6675:37:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6721:15:19",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6730:6:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6721:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6050:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6058:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6066:5:19",
														"type": ""
													}
												],
												"src": "6024:718:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6794:109:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6804:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6826:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6813:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6813:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6804:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6881:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6890:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6893:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6883:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6883:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6883:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6855:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6866:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6873:4:19",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6862:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6862:16:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6852:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6852:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6845:35:19"
															},
															"nodeType": "YulIf",
															"src": "6842:55:19"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6773:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6784:5:19",
														"type": ""
													}
												],
												"src": "6747:156:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7030:1484:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7083:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7092:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7095:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7085:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7085:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7085:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "7051:12:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7051:14:19"
																			},
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7067:5:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:26:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7075:6:19",
																		"type": "",
																		"value": "0x0200"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7043:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:39:19"
															},
															"nodeType": "YulIf",
															"src": "7040:59:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7108:32:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7123:15:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:17:19"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "7112:7:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "7156:7:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7181:5:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7165:15:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7165:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7149:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7149:39:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7149:39:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7208:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7217:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7204:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7204:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7245:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7252:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7241:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7241:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "7222:18:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7222:34:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7197:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7197:60:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7197:60:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7277:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7286:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7273:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7273:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7314:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7321:2:19",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7310:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7310:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "7291:18:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7291:34:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7266:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7266:60:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7266:60:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7346:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7355:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7342:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7342:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7377:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7384:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7373:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7373:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7360:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7360:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7335:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7335:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7335:54:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7409:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7418:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7405:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7405:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7441:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7448:3:19",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7437:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7437:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7424:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7424:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7398:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7398:56:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7398:56:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7474:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7483:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7470:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7470:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7506:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7513:3:19",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7502:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7502:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7489:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7489:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7463:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7463:56:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7463:56:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7539:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7548:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7535:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7535:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7577:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7584:3:19",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7573:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7573:15:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "7554:18:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:35:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7528:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7528:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7610:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7619:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7606:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7606:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7648:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7655:3:19",
																						"type": "",
																						"value": "224"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7644:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7644:15:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "7625:18:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7625:35:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7599:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7599:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7599:62:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7670:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7680:3:19",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7674:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7703:7:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7712:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7699:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7699:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7734:5:19"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "7741:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7730:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7730:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7717:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7717:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7692:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7692:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7755:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7765:3:19",
																"type": "",
																"value": "288"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "7759:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7788:7:19"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7797:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7784:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7784:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7819:5:19"
																					},
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "7826:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7815:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7815:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7802:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7802:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7777:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7777:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7777:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7840:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7850:3:19",
																"type": "",
																"value": "320"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "7844:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7873:7:19"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "7882:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7869:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7869:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7904:5:19"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "7911:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7900:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7900:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7887:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7887:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7862:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7862:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7862:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7925:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7935:3:19",
																"type": "",
																"value": "352"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "7929:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7958:7:19"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "7967:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7954:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7954:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7989:5:19"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "7996:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7985:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7985:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7972:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7972:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7947:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7947:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8010:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8020:3:19",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "8014:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8032:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8063:5:19"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "8070:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8059:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8059:14:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8046:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8046:28:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8036:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8117:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8126:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8129:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8119:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8119:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8119:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8089:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8097:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8086:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:30:19"
															},
															"nodeType": "YulIf",
															"src": "8083:50:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8153:7:19"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "8162:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8149:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8149:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8188:5:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8195:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8184:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8184:18:19"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "8204:12:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8204:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bytes",
																			"nodeType": "YulIdentifier",
																			"src": "8167:16:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:52:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8142:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8142:78:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8142:78:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8229:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8239:3:19",
																"type": "",
																"value": "416"
															},
															"variables": [
																{
																	"name": "_6",
																	"nodeType": "YulTypedName",
																	"src": "8233:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8262:7:19"
																			},
																			{
																				"name": "_6",
																				"nodeType": "YulIdentifier",
																				"src": "8271:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8258:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8258:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8297:5:19"
																					},
																					{
																						"name": "_6",
																						"nodeType": "YulIdentifier",
																						"src": "8304:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8293:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8293:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "8276:16:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8276:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8251:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8251:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8251:58:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8318:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8328:3:19",
																"type": "",
																"value": "448"
															},
															"variables": [
																{
																	"name": "_7",
																	"nodeType": "YulTypedName",
																	"src": "8322:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8351:7:19"
																			},
																			{
																				"name": "_7",
																				"nodeType": "YulIdentifier",
																				"src": "8360:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8347:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8347:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8382:5:19"
																					},
																					{
																						"name": "_7",
																						"nodeType": "YulIdentifier",
																						"src": "8389:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8378:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8378:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8365:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8365:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8340:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8340:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8340:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8403:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8413:3:19",
																"type": "",
																"value": "480"
															},
															"variables": [
																{
																	"name": "_8",
																	"nodeType": "YulTypedName",
																	"src": "8407:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8436:7:19"
																			},
																			{
																				"name": "_8",
																				"nodeType": "YulIdentifier",
																				"src": "8445:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8467:5:19"
																					},
																					{
																						"name": "_8",
																						"nodeType": "YulIdentifier",
																						"src": "8474:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8463:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8463:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8450:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8450:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:54:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8488:20:19",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "8501:7:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8488:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_struct$_MakerOrder_$2406_calldata_ptr_to_t_struct$_MakerOrder_$2406_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7006:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7016:9:19",
														"type": ""
													}
												],
												"src": "6908:1606:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8595:424:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8605:43:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8644:3:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8631:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8631:17:19"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "8609:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8737:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8746:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8749:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8739:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "8671:18:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "8699:12:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8699:14:19"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "8715:8:19"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "8695:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8695:29:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8730:2:19",
																								"type": "",
																								"value": "30"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8726:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8726:7:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8691:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8691:43:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8667:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8667:68:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8660:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8660:76:19"
															},
															"nodeType": "YulIf",
															"src": "8657:96:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8762:48:19",
															"value": {
																"arguments": [
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "8781:18:19"
																	},
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "8801:8:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8777:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8777:33:19"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "8766:7:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8819:31:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "8842:7:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8829:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8829:21:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8819:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8859:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "8872:7:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8881:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8868:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8868:18:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8859:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8929:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8938:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8941:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8931:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8931:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8931:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8901:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8909:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8898:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8898:30:19"
															},
															"nodeType": "YulIf",
															"src": "8895:50:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8997:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9006:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9009:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8999:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8999:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8999:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8961:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "8972:12:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8972:14:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8988:6:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8968:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8968:27:19"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "8957:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:39:19"
															},
															"nodeType": "YulIf",
															"src": "8954:59:19"
														}
													]
												},
												"name": "calldata_access_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "8559:8:19",
														"type": ""
													},
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8569:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8577:5:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8584:6:19",
														"type": ""
													}
												],
												"src": "8519:500:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9090:200:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9107:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9112:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9100:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9100:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9100:19:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9145:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9150:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9141:14:19"
																	},
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "9157:5:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9164:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "9128:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9128:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9128:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9195:3:19"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "9200:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9191:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9191:16:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9209:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9187:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9187:27:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9216:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9180:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9180:38:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9180:38:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9227:57:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9242:3:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "9255:6:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9263:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9251:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9251:15:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9272:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9268:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9268:7:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9247:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9247:29:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9238:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9238:39:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9279:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9234:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9234:50:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9227:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "9059:5:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9066:6:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9074:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9082:3:19",
														"type": ""
													}
												],
												"src": "9024:266:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9337:33:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9346:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9355:5:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9362:4:19",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9351:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9351:16:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9339:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9339:29:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9339:29:19"
														}
													]
												},
												"name": "abi_encode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9321:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9328:3:19",
														"type": ""
													}
												],
												"src": "9295:75:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9620:2529:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9637:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9648:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9630:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9630:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9630:21:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9660:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9670:3:19",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9664:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9682:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9708:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9695:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9695:20:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9686:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9746:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9724:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:28:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9772:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9783:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9768:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9802:5:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9795:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9795:13:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9788:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9788:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9761:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9761:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9761:49:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9819:46:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9851:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9859:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9847:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9847:17:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9834:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9834:31:19"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "9823:7:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "9899:7:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "9874:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9874:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9874:33:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9927:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9938:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9923:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9923:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "9947:7:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9964:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9969:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9960:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9960:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9973:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9956:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9956:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9943:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9943:33:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9916:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9916:61:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9916:61:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9997:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10008:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9993:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9993:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10031:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10039:2:19",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10027:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10027:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10014:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10014:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9986:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9986:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9986:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10064:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10075:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10060:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10060:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10098:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10106:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10094:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10094:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10081:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10081:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10053:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10053:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10053:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10131:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10142:4:19",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10127:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10127:20:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10166:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10174:3:19",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10162:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10162:16:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10149:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10149:30:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10120:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10120:60:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10120:60:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10189:90:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10254:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10266:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10274:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10262:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10262:16:19"
																	}
																],
																"functionName": {
																	"name": "calldata_access_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10223:30:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10223:56:19"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "10193:12:19",
																	"type": ""
																},
																{
																	"name": "memberValue1",
																	"nodeType": "YulTypedName",
																	"src": "10207:12:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10299:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10310:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10295:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10295:19:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10316:4:19",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10288:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10288:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10288:33:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10330:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "10367:12:19"
																	},
																	{
																		"name": "memberValue1",
																		"nodeType": "YulIdentifier",
																		"src": "10381:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10399:9:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10410:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10395:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10341:25:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10341:73:19"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "10334:3:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10434:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10445:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10430:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10430:20:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10456:3:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10461:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10452:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10452:19:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10423:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10423:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10423:49:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10481:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10491:6:19",
																"type": "",
																"value": "0x0200"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "10485:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10538:6:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10522:15:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10522:23:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10547:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10506:15:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10506:45:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10506:45:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10560:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10605:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10613:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10601:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10601:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10582:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10582:37:19"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "10564:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "10647:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10667:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10672:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10663:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10663:14:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10628:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10628:50:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10628:50:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10687:57:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10732:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10740:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10728:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10728:15:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10709:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10709:35:19"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nodeType": "YulTypedName",
																	"src": "10691:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "10772:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10792:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10797:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10788:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10788:12:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10753:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10753:48:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10753:48:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10821:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10826:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10817:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10817:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "10848:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10856:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10844:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10844:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10831:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10831:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10810:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10810:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10810:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10881:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10886:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10877:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10877:13:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "10909:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10917:3:19",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10905:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10905:16:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10892:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10892:30:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10870:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10870:53:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10870:53:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10943:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10948:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10939:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10939:13:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "10971:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10979:3:19",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10967:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10967:16:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10954:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10954:30:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10932:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10932:53:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10932:53:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10994:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11039:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11047:4:19",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11035:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11035:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11016:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11016:37:19"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nodeType": "YulTypedName",
																	"src": "10998:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nodeType": "YulIdentifier",
																		"src": "11081:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11101:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11106:4:19",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11097:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11097:14:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11062:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11062:50:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11062:50:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11121:58:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11166:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11174:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11162:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11162:16:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11143:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11143:36:19"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nodeType": "YulTypedName",
																	"src": "11125:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nodeType": "YulIdentifier",
																		"src": "11207:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11227:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11232:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11223:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11223:13:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11188:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11188:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11188:49:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11257:3:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11262:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11253:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11253:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11284:6:19"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "11292:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11280:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11280:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11267:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11267:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11246:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11246:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11246:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11306:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11316:6:19",
																"type": "",
																"value": "0x0120"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "11310:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11342:3:19"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "11347:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11338:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11338:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11369:6:19"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "11377:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11365:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11365:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11352:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11352:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11331:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11331:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11331:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11391:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11401:6:19",
																"type": "",
																"value": "0x0140"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "11395:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11427:3:19"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "11432:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11423:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11423:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11454:6:19"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "11462:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11450:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11450:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11437:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11437:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11416:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11416:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11416:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11476:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11486:6:19",
																"type": "",
																"value": "0x0160"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "11480:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11512:3:19"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "11517:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11508:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11508:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11539:6:19"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "11547:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11535:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11535:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11522:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11522:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11501:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11501:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11501:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11561:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11571:6:19",
																"type": "",
																"value": "0x0180"
															},
															"variables": [
																{
																	"name": "_6",
																	"nodeType": "YulTypedName",
																	"src": "11565:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11586:93:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11655:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11667:6:19"
																			},
																			{
																				"name": "_6",
																				"nodeType": "YulIdentifier",
																				"src": "11675:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11663:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11663:15:19"
																	}
																],
																"functionName": {
																	"name": "calldata_access_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "11624:30:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11624:55:19"
															},
															"variables": [
																{
																	"name": "memberValue0_5",
																	"nodeType": "YulTypedName",
																	"src": "11590:14:19",
																	"type": ""
																},
																{
																	"name": "memberValue1_1",
																	"nodeType": "YulTypedName",
																	"src": "11606:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11699:3:19"
																			},
																			{
																				"name": "_6",
																				"nodeType": "YulIdentifier",
																				"src": "11704:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11695:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11695:12:19"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "11709:2:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11688:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11688:24:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11688:24:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11721:85:19",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_5",
																		"nodeType": "YulIdentifier",
																		"src": "11761:14:19"
																	},
																	{
																		"name": "memberValue1_1",
																		"nodeType": "YulIdentifier",
																		"src": "11777:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11797:3:19"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11802:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11793:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11793:12:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "11735:25:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:71:19"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11725:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11815:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11825:6:19",
																"type": "",
																"value": "0x01a0"
															},
															"variables": [
																{
																	"name": "_7",
																	"nodeType": "YulTypedName",
																	"src": "11819:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11840:55:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11883:6:19"
																			},
																			{
																				"name": "_7",
																				"nodeType": "YulIdentifier",
																				"src": "11891:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11879:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11879:15:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "11862:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11862:33:19"
															},
															"variables": [
																{
																	"name": "memberValue0_6",
																	"nodeType": "YulTypedName",
																	"src": "11844:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_6",
																		"nodeType": "YulIdentifier",
																		"src": "11921:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11941:3:19"
																			},
																			{
																				"name": "_7",
																				"nodeType": "YulIdentifier",
																				"src": "11946:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11937:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11937:12:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "11904:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11904:46:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11904:46:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11959:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11969:6:19",
																"type": "",
																"value": "0x01c0"
															},
															"variables": [
																{
																	"name": "_8",
																	"nodeType": "YulTypedName",
																	"src": "11963:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11995:3:19"
																			},
																			{
																				"name": "_8",
																				"nodeType": "YulIdentifier",
																				"src": "12000:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11991:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11991:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "12022:6:19"
																					},
																					{
																						"name": "_8",
																						"nodeType": "YulIdentifier",
																						"src": "12030:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12018:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12018:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12005:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12005:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11984:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11984:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11984:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12044:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12054:6:19",
																"type": "",
																"value": "0x01e0"
															},
															"variables": [
																{
																	"name": "_9",
																	"nodeType": "YulTypedName",
																	"src": "12048:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12080:3:19"
																			},
																			{
																				"name": "_9",
																				"nodeType": "YulIdentifier",
																				"src": "12085:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12076:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12076:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "12107:6:19"
																					},
																					{
																						"name": "_9",
																						"nodeType": "YulIdentifier",
																						"src": "12115:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12103:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12103:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12090:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12090:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12069:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12069:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12069:51:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12129:14:19",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "12137:6:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12129:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_TakerOrder_$2419_calldata_ptr_t_struct$_MakerOrder_$2406_calldata_ptr__to_t_struct$_TakerOrder_$2419_memory_ptr_t_struct$_MakerOrder_$2406_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9581:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9592:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9600:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9611:4:19",
														"type": ""
													}
												],
												"src": "9375:2774:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12266:255:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12312:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12321:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12324:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12314:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12314:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12314:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12287:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12296:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12283:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12283:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12308:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12279:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12279:32:19"
															},
															"nodeType": "YulIf",
															"src": "12276:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12337:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12356:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12350:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12350:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12341:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12397:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "12375:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12375:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12375:28:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12412:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12422:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12412:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12436:35:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12456:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12467:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12452:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12452:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12446:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12446:25:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "12436:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12480:35:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12500:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12511:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12496:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12496:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12490:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12490:25:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "12480:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12216:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12227:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12239:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12247:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12255:6:19",
														"type": ""
													}
												],
												"src": "12154:367:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12700:174:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12717:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12728:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12710:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12710:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12710:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12751:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12762:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12747:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12747:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12767:2:19",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12740:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12740:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12740:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12790:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12801:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12786:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12786:18:19"
																	},
																	{
																		"hexValue": "53747261746567792073686f756c642062652076616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12806:26:19",
																		"type": "",
																		"value": "Strategy should be valid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12779:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12779:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12779:54:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12842:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12854:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12865:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12850:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12850:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12842:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12677:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12691:4:19",
														"type": ""
													}
												],
												"src": "12526:348:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13148:394:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13158:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13170:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13181:3:19",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13166:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13166:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13158:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13201:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13212:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13194:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13194:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13194:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13239:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13250:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13235:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13235:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13255:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13228:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13228:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13228:34:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13271:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13289:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13294:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13285:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13285:11:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13298:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13281:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13281:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13275:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13320:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13331:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13316:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13316:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "13340:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13348:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13336:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13336:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13309:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13309:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13309:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13372:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13383:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13368:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13368:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "13392:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13400:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13388:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13388:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13361:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13361:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13361:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13424:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13435:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13420:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13420:19:19"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13441:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13413:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13413:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13413:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13468:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13479:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13464:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13464:19:19"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "13485:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13457:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13457:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13457:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13512:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13523:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13508:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13508:19:19"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "13529:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13501:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13501:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13501:35:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13069:9:19",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "13080:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "13088:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13096:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13104:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13112:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13120:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13128:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13139:4:19",
														"type": ""
													}
												],
												"src": "12879:663:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13721:171:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13738:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13749:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13731:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13731:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13731:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13772:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13783:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13768:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13768:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13788:2:19",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13761:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13761:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13761:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13811:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13822:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13807:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13807:18:19"
																	},
																	{
																		"hexValue": "43757272656e6379206d7573742062652057455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13827:23:19",
																		"type": "",
																		"value": "Currency must be WETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13800:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13800:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13800:51:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13860:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13872:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13883:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13868:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13868:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13860:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13698:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13712:4:19",
														"type": ""
													}
												],
												"src": "13547:345:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13929:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13946:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13953:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13958:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13949:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13949:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13939:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13939:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13939:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13986:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13989:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13979:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13979:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13979:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14010:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14013:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14003:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14003:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14003:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13897:127:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14078:79:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14088:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14100:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14103:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14096:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14096:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14088:4:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14129:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14131:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14131:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14131:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14120:4:19"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14126:1:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14117:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14117:11:19"
															},
															"nodeType": "YulIf",
															"src": "14114:37:19"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14060:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14063:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14069:4:19",
														"type": ""
													}
												],
												"src": "14029:128:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14336:171:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14353:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14364:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14346:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14346:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14346:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14387:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14398:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14383:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14383:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14403:2:19",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14376:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14376:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14376:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14426:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14437:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14422:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14422:18:19"
																	},
																	{
																		"hexValue": "4d73672e76616c756520697320746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14442:23:19",
																		"type": "",
																		"value": "Msg.value is too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14415:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14415:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14415:51:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14475:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14487:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14498:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14483:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14483:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14475:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14313:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14327:4:19",
														"type": ""
													}
												],
												"src": "14162:345:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14686:181:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14703:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14714:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14696:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14696:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14696:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14737:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14748:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14733:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14733:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14753:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14726:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14726:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14726:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14776:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14787:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14772:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14772:18:19"
																	},
																	{
																		"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14792:33:19",
																		"type": "",
																		"value": "Cannot update to a null address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14765:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14765:61:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14765:61:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14835:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14847:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14858:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14843:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14843:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14835:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14663:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14677:4:19",
														"type": ""
													}
												],
												"src": "14512:355:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15046:177:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15063:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15074:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15056:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15056:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15056:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15097:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15108:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15093:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15093:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15113:2:19",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15086:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15086:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15086:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15136:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15147:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15132:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15132:18:19"
																	},
																	{
																		"hexValue": "43616e6e6f7420626520656d7074792043616e63656c206c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15152:29:19",
																		"type": "",
																		"value": "Cannot be empty Cancel list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15125:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15125:57:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15125:57:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15191:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15203:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15214:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15199:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15199:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15191:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15023:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15037:4:19",
														"type": ""
													}
												],
												"src": "14872:351:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15260:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15277:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15284:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15289:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15280:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15280:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15270:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15270:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15270:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15317:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15320:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15310:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15310:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15310:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15341:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15344:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15334:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15334:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15334:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15228:127:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15534:234:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15551:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15562:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15544:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15544:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15544:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15585:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15596:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15581:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15581:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15601:2:19",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15574:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15574:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15574:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15624:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15635:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15620:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15620:18:19"
																	},
																	{
																		"hexValue": "43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f77657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15640:34:19",
																		"type": "",
																		"value": "Cancel Order nonce cannot lower "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15613:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15613:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15613:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15695:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15706:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15691:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15691:18:19"
																	},
																	{
																		"hexValue": "7468616e2063757272656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15711:14:19",
																		"type": "",
																		"value": "than current"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15684:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15684:42:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15684:42:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15735:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15747:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15758:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15743:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15743:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15735:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15511:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15525:4:19",
														"type": ""
													}
												],
												"src": "15360:408:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15820:88:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15851:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15853:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15853:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15853:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15836:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15847:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15843:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15843:6:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15833:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15833:17:19"
															},
															"nodeType": "YulIf",
															"src": "15830:43:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15882:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15893:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15900:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15889:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15889:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15882:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15802:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15812:3:19",
														"type": ""
													}
												],
												"src": "15773:135:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16074:282:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16091:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16102:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16084:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16084:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16084:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16125:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16136:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16121:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16121:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16141:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16114:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16114:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16114:34:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16192:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16201:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16204:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16194:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16194:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16194:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16163:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16179:3:19",
																						"type": "",
																						"value": "251"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16184:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "16175:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16175:11:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16188:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16171:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16171:19:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16160:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16160:31:19"
															},
															"nodeType": "YulIf",
															"src": "16157:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16217:28:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16235:1:19",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16238:6:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "16231:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16231:14:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16221:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16271:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16282:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16267:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16267:18:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16287:6:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16295:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "16254:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16254:48:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16254:48:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16311:39:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16327:9:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16338:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16323:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16323:22:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16347:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16319:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16319:31:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16311:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16035:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16046:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16054:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16065:4:19",
														"type": ""
													}
												],
												"src": "15913:443:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16409:77:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16419:16:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16430:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16433:1:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16426:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16426:9:19"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16419:3:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16458:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16460:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16460:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16460:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16450:1:19"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "16453:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16447:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16447:10:19"
															},
															"nodeType": "YulIf",
															"src": "16444:36:19"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16392:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16395:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16401:3:19",
														"type": ""
													}
												],
												"src": "16361:125:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16665:179:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16682:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16693:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16675:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16675:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16675:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16716:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16727:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16712:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16712:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16732:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16705:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16705:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16705:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16755:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16766:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16751:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16751:18:19"
																	},
																	{
																		"hexValue": "43616e6e6f742063616e63656c20746f6f206d616e79206f7264657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16771:31:19",
																		"type": "",
																		"value": "Cannot cancel too many orders"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16744:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16744:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16744:59:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16812:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16824:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16835:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16820:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16820:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16812:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16642:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16656:4:19",
														"type": ""
													}
												],
												"src": "16491:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17023:228:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17040:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17051:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17033:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17033:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17033:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17074:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17085:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17070:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17070:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17090:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17063:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17063:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17063:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17113:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17124:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17109:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17109:18:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17129:34:19",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17102:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17102:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17102:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17184:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17195:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17180:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17180:18:19"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17200:8:19",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17173:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17173:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17173:36:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17218:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17230:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17241:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17226:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17226:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17218:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17000:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17014:4:19",
														"type": ""
													}
												],
												"src": "16849:402:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17430:182:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17447:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17458:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17440:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17440:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17440:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17481:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17492:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17477:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17477:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17497:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17470:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17470:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17470:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17520:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17531:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17516:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17516:18:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17536:34:19",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17509:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17509:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17509:62:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17580:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17592:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17603:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17588:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17588:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17580:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17407:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17421:4:19",
														"type": ""
													}
												],
												"src": "17256:356:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18080:728:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18090:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18102:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18113:3:19",
																		"type": "",
																		"value": "448"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18098:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18098:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18090:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18133:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18144:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18126:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18126:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18126:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18171:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18182:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18167:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18167:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "18201:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18194:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18194:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18187:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18187:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18160:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18160:50:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18160:50:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18230:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18241:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18226:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18226:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "18250:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18266:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18271:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "18262:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18262:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18275:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "18258:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18258:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18246:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18246:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18219:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18219:60:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18219:60:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18307:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18319:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18330:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18315:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18315:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "18288:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18288:46:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18288:46:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18354:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18365:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18350:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18350:19:19"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "18371:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18343:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18343:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18343:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18398:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18409:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18394:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18394:19:19"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "18415:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18387:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18387:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18387:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18442:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18453:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18438:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18438:19:19"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "18459:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18431:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18431:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18431:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "18494:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18506:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18517:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18502:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18502:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "18475:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18475:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18475:47:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "18550:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18562:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18573:3:19",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18558:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18558:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "18531:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18531:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18531:47:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18598:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18609:3:19",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18594:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18594:19:19"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "18615:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18587:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18587:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18587:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18642:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18653:3:19",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18638:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18638:19:19"
																	},
																	{
																		"name": "value10",
																		"nodeType": "YulIdentifier",
																		"src": "18659:7:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18631:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18631:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18631:36:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18687:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18698:3:19",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18683:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18683:19:19"
																	},
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "18704:7:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18676:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18676:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18676:36:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18732:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18743:3:19",
																				"type": "",
																				"value": "384"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18728:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18728:19:19"
																	},
																	{
																		"name": "value12",
																		"nodeType": "YulIdentifier",
																		"src": "18749:7:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18721:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18721:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18721:36:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18777:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18788:3:19",
																				"type": "",
																				"value": "416"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18773:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18773:19:19"
																	},
																	{
																		"name": "value13",
																		"nodeType": "YulIdentifier",
																		"src": "18794:7:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18766:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18766:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18766:36:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17941:9:19",
														"type": ""
													},
													{
														"name": "value13",
														"nodeType": "YulTypedName",
														"src": "17952:7:19",
														"type": ""
													},
													{
														"name": "value12",
														"nodeType": "YulTypedName",
														"src": "17961:7:19",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "17970:7:19",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "17979:7:19",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "17988:6:19",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "17996:6:19",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "18004:6:19",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "18012:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "18020:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "18028:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18036:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18044:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18052:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18060:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18071:4:19",
														"type": ""
													}
												],
												"src": "17617:1191:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18987:179:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19004:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19015:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18997:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18997:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18997:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19038:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19049:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19034:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19034:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19054:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19027:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19027:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19027:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19077:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19088:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19073:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19073:18:19"
																	},
																	{
																		"hexValue": "4f726465723a204d61746368696e67206f726465722065787069726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19093:31:19",
																		"type": "",
																		"value": "Order: Matching order expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19066:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19066:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19066:59:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19134:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19146:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19157:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19142:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19142:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19134:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18964:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18978:4:19",
														"type": ""
													}
												],
												"src": "18813:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19345:233:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19362:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19373:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19355:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19355:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19355:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19396:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19407:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19392:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19392:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19412:2:19",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19385:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19385:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19385:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19435:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19446:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19431:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19431:18:19"
																	},
																	{
																		"hexValue": "546865204f72646572207369676e65722063616e6e6f7420626520746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19451:34:19",
																		"type": "",
																		"value": "The Order signer cannot be the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19424:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19424:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19424:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19506:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19517:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19502:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19502:18:19"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19522:13:19",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19495:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19495:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19495:41:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19545:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19557:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19568:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19553:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19553:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19545:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19322:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19336:4:19",
														"type": ""
													}
												],
												"src": "19171:407:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19757:231:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19774:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19785:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19767:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19767:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19767:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19808:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19819:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19804:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19804:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19824:2:19",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19797:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19797:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19797:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19847:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19858:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19843:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19843:18:19"
																	},
																	{
																		"hexValue": "546865206f7264657220616d6f756e742073686f756c64206265206772656174",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19863:34:19",
																		"type": "",
																		"value": "The order amount should be great"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19836:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19836:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19836:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19918:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19929:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19914:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19914:18:19"
																	},
																	{
																		"hexValue": "6572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19934:11:19",
																		"type": "",
																		"value": "er than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19907:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19907:39:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19907:39:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19955:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19967:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19978:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19963:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19963:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19955:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19734:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19748:4:19",
														"type": ""
													}
												],
												"src": "19583:405:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20458:276:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20468:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20480:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20491:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20476:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20476:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20468:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20511:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20522:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20504:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20504:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20504:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20549:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20560:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20545:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20545:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20565:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20538:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20538:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20538:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20592:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20603:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20588:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20588:18:19"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20608:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20581:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20581:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20581:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20635:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20646:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20631:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20631:18:19"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "20651:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20624:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20624:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20624:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20678:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20689:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20674:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20674:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "20699:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20715:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20720:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "20711:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20711:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20724:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "20707:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20707:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20695:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20695:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20667:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20667:61:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20667:61:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1_t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1_t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20395:9:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "20406:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20414:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20422:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20430:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20438:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20449:4:19",
														"type": ""
													}
												],
												"src": "19993:741:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20807:114:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20853:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20862:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20865:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20855:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20855:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20855:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20828:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20837:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20824:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20824:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20849:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20820:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20820:32:19"
															},
															"nodeType": "YulIf",
															"src": "20817:52:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20878:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20905:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "20888:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20888:27:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "20878:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20773:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20784:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20796:6:19",
														"type": ""
													}
												],
												"src": "20739:182:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21100:168:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21117:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21128:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21110:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21110:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21110:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21151:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21162:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21147:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21147:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21167:2:19",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21140:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21140:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21140:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21190:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21201:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21186:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21186:18:19"
																	},
																	{
																		"hexValue": "5369676e61747572653a20496e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21206:20:19",
																		"type": "",
																		"value": "Signature: Invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21179:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21179:48:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21179:48:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21236:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21248:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21259:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21244:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21244:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21236:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21077:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21091:4:19",
														"type": ""
													}
												],
												"src": "20926:342:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21351:167:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21397:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21406:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21409:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21399:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21399:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21399:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21372:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21381:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21368:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21368:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21393:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21364:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21364:32:19"
															},
															"nodeType": "YulIf",
															"src": "21361:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21422:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21441:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21435:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21435:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "21426:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21482:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "21460:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21460:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21460:28:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21497:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "21507:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "21497:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21317:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21328:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21340:6:19",
														"type": ""
													}
												],
												"src": "21273:245:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21697:176:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21714:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21725:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21707:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21707:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21707:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21748:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21759:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21744:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21744:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21764:2:19",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21737:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21737:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21737:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21787:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21798:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21783:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21783:18:19"
																	},
																	{
																		"hexValue": "204e6f7420696e2043757272656e63792077686974656c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21803:28:19",
																		"type": "",
																		"value": " Not in Currency whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21776:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21776:56:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21776:56:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21841:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21853:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21864:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21849:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21849:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21841:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21674:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21688:4:19",
														"type": ""
													}
												],
												"src": "21523:350:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22052:176:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22069:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22080:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22062:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22062:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22062:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22103:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22114:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22099:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22099:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22119:2:19",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22092:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22092:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22092:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22142:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22153:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22138:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22138:18:19"
																	},
																	{
																		"hexValue": "204e6f7420696e2053747261746567792077686974656c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22158:28:19",
																		"type": "",
																		"value": " Not in Strategy whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22131:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22131:56:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22131:56:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22196:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22208:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22219:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22204:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22204:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22196:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22029:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22043:4:19",
														"type": ""
													}
												],
												"src": "21878:350:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22390:188:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22400:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22412:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22423:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22408:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22408:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22400:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22442:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "22457:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "22473:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "22478:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "22469:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22469:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "22482:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "22465:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22465:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "22453:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22453:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22435:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22435:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22435:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22506:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22517:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22502:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22502:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22522:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22495:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22495:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22495:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22549:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22560:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22545:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22545:18:19"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22565:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22538:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22538:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22538:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22343:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22354:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22362:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22370:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22381:4:19",
														"type": ""
													}
												],
												"src": "22233:345:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22681:214:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22727:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22736:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22739:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22729:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22729:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22729:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22702:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22711:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22698:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22698:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22723:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "22694:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22694:32:19"
															},
															"nodeType": "YulIf",
															"src": "22691:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22752:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22771:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22765:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22765:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "22756:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22815:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "22790:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22790:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22790:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22830:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "22840:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "22830:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22854:35:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22874:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22885:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22870:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22870:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22864:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22864:25:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "22854:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22639:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "22650:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22662:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22670:6:19",
														"type": ""
													}
												],
												"src": "22583:312:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23029:145:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23039:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23051:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23062:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23047:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23047:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23039:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23081:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "23096:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23112:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23117:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "23108:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23108:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23121:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "23104:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23104:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23092:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23092:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23074:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23074:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23074:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23145:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23156:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23141:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23141:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23161:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23134:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23134:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23134:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22990:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23001:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23009:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23020:4:19",
														"type": ""
													}
												],
												"src": "22900:274:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23231:116:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23241:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23256:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23259:1:19"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23252:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23252:9:19"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "23241:7:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23319:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23321:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23321:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23321:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "23290:1:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "23283:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23283:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "23297:1:19"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "23304:7:19"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "23313:1:19"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "23300:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23300:15:19"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "23294:2:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23294:22:19"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "23280:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23280:37:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23273:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23273:45:19"
															},
															"nodeType": "YulIf",
															"src": "23270:71:19"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23210:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23213:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "23219:7:19",
														"type": ""
													}
												],
												"src": "23179:168:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23526:224:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23543:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23554:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23536:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23536:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23536:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23577:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23588:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23573:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23573:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23593:2:19",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23566:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23566:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23566:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23616:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23627:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23612:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23612:18:19"
																	},
																	{
																		"hexValue": "5468652066656520697320746f6f206869676820666f72207468652073656c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23632:34:19",
																		"type": "",
																		"value": "The fee is too high for the sell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23605:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23605:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23605:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23687:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23698:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23683:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23683:18:19"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23703:4:19",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23676:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23676:32:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23676:32:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23717:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23729:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23740:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23725:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23725:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23717:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23503:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23517:4:19",
														"type": ""
													}
												],
												"src": "23352:398:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23836:170:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23882:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23891:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23894:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23884:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23884:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23884:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23857:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23866:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23853:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23853:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23878:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "23849:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23849:32:19"
															},
															"nodeType": "YulIf",
															"src": "23846:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23907:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23926:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23920:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23920:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "23911:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23970:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "23945:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23945:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23945:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23985:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23995:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "23985:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23802:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "23813:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23825:6:19",
														"type": ""
													}
												],
												"src": "23755:251:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24185:178:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24202:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24213:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24195:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24195:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24195:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24236:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24247:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24232:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24232:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24252:2:19",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24225:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24225:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24225:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24275:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24286:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24271:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24271:18:19"
																	},
																	{
																		"hexValue": "43616e277420666f756e74207472616e73666572206d616e61676572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24291:30:19",
																		"type": "",
																		"value": "Can't fount transfer manager"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24264:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24264:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24264:58:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24331:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24343:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24354:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24339:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24339:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24331:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24162:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24176:4:19",
														"type": ""
													}
												],
												"src": "24011:352:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24581:315:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24591:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24603:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24614:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24599:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24599:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24591:4:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24627:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24645:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24650:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "24641:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24641:11:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24654:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "24637:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24637:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "24631:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24672:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "24687:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "24695:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "24683:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24683:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24665:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24665:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24665:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24719:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24730:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24715:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24715:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "24739:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "24747:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "24735:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24735:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24708:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24708:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24708:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24771:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24782:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24767:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24767:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "24791:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "24799:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "24787:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24787:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24760:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24760:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24760:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24823:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24834:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24819:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24819:18:19"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "24839:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24812:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24812:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24812:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24866:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24877:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24862:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24862:19:19"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "24883:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24855:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24855:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24855:35:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24518:9:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "24529:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "24537:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24545:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24553:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24561:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24572:4:19",
														"type": ""
													}
												],
												"src": "24368:528:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25058:218:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25068:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25080:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25091:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25076:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25076:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25068:4:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25103:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25121:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25126:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "25117:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25117:11:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25130:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "25113:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25113:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "25107:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25148:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "25163:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "25171:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "25159:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25159:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25141:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25141:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25141:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25195:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25206:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25191:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25191:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "25215:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "25223:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "25211:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25211:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25184:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25184:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25184:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25247:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25258:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25243:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25243:18:19"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25263:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25236:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25236:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25236:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25011:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25022:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25030:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25038:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25049:4:19",
														"type": ""
													}
												],
												"src": "24901:375:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25529:144:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25546:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25555:3:19",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25560:4:19",
																				"type": "",
																				"value": "6401"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "25551:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25551:14:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25539:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25539:27:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25539:27:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "25586:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25591:1:19",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25582:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25582:11:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25595:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25575:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25575:27:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25575:27:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "25622:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25627:2:19",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25618:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25618:12:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25632:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25611:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25611:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25611:28:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25648:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25659:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25664:2:19",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25655:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25655:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25648:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25497:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25502:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25510:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25521:3:19",
														"type": ""
													}
												],
												"src": "25281:392:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25849:167:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25866:3:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25871:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25859:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25859:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25859:19:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "25898:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25903:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25894:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25894:12:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25908:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25887:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25887:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25887:28:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "25935:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25940:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25931:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25931:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25953:3:19",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "25958:6:19"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "25949:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25949:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25971:3:19",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25976:3:19",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "25967:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25967:13:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "25945:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25945:36:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25924:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25924:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25924:58:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25991:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26002:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26007:2:19",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25998:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25998:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25991:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25809:3:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25814:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25822:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25830:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25841:3:19",
														"type": ""
													}
												],
												"src": "25678:338:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26087:184:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26097:10:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26106:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "26101:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26166:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26191:3:19"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26196:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26187:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26187:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "26210:3:19"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26215:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26206:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26206:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26200:5:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26200:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26180:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26180:39:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26180:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26127:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26130:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26124:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26124:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26138:19:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26140:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "26149:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26152:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26145:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26145:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "26140:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26120:3:19",
																"statements": []
															},
															"src": "26116:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "26249:3:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26254:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26245:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26245:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26263:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26238:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26238:27:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26238:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26065:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26070:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26075:6:19",
														"type": ""
													}
												],
												"src": "26021:250:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26325:221:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26335:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26355:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26349:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26349:12:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26339:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26377:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26382:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26370:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26370:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26370:19:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26437:5:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26444:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26433:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26433:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26455:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26460:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26451:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26451:14:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26467:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "26398:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26398:76:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26398:76:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26483:57:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26498:3:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "26511:6:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "26519:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "26507:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "26507:15:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "26528:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "26524:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "26524:7:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "26503:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26503:29:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26494:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26494:39:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26535:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26490:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26490:50:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26483:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26302:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26309:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26317:3:19",
														"type": ""
													}
												],
												"src": "26276:270:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26698:141:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26715:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26726:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26708:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26708:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26708:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26753:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26764:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26749:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26749:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26769:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26742:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26742:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26742:30:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26781:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26806:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26818:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26829:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26814:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26814:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "26789:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26789:44:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26781:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26659:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26670:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26678:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26689:4:19",
														"type": ""
													}
												],
												"src": "26551:288:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26924:210:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26970:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26979:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26982:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26972:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26972:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26972:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "26945:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26954:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26941:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26941:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26966:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "26937:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26937:32:19"
															},
															"nodeType": "YulIf",
															"src": "26934:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26995:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27014:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27008:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27008:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "26999:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27088:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27097:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27100:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "27090:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27090:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27090:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27046:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "27057:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "27068:3:19",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "27073:10:19",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "27064:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "27064:20:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "27053:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27053:32:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "27043:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27043:43:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "27036:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27036:51:19"
															},
															"nodeType": "YulIf",
															"src": "27033:71:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27113:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "27123:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "27113:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26890:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "26901:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26913:6:19",
														"type": ""
													}
												],
												"src": "26844:290:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27220:103:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27266:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27275:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27278:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "27268:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27268:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27268:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27241:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27250:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27237:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27237:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27262:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "27233:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27233:32:19"
															},
															"nodeType": "YulIf",
															"src": "27230:52:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27291:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27307:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27301:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27301:16:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "27291:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27186:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "27197:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27209:6:19",
														"type": ""
													}
												],
												"src": "27139:184:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27374:171:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27405:111:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27426:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "27433:3:19",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "27438:10:19",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "27429:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27429:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27419:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27419:31:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27419:31:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27470:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27473:4:19",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27463:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27463:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27463:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27498:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27501:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "27491:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27491:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27491:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27394:1:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "27387:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27387:9:19"
															},
															"nodeType": "YulIf",
															"src": "27384:132:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27525:14:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27534:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27537:1:19"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "27530:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27530:9:19"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "27525:1:19"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "27359:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "27362:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "27368:1:19",
														"type": ""
													}
												],
												"src": "27328:217:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27724:232:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27741:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27752:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27734:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27734:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27734:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27775:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27786:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27771:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27771:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27791:2:19",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27764:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27764:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27764:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27814:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27825:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27810:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27810:18:19"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27830:34:19",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27803:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27803:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27803:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27885:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27896:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27881:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27881:18:19"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27901:12:19",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27874:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27874:40:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27874:40:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27923:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27935:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27946:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27931:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27931:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27923:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27701:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27715:4:19",
														"type": ""
													}
												],
												"src": "27550:406:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28135:170:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28152:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28163:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28145:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28145:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28145:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28186:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28197:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28182:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28182:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28202:2:19",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28175:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28175:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28175:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28225:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28236:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28221:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28221:18:19"
																	},
																	{
																		"hexValue": "20496e76616c6964207320706172616d65746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28241:22:19",
																		"type": "",
																		"value": " Invalid s parameter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28214:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28214:50:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28214:50:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28273:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28285:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28296:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28281:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28281:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28273:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28112:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28126:4:19",
														"type": ""
													}
												],
												"src": "27961:344:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28484:169:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28501:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28512:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28494:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28494:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28494:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28535:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28546:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28531:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28531:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28551:2:19",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28524:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28524:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28524:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28574:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28585:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28570:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28570:18:19"
																	},
																	{
																		"hexValue": "496e76616c6964207620706172616d65746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28590:21:19",
																		"type": "",
																		"value": "Invalid v parameter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28563:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28563:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28563:49:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28621:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28633:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28644:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28629:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28629:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28621:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28461:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28475:4:19",
														"type": ""
													}
												],
												"src": "28310:343:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28839:217:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28849:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28861:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28872:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28857:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28857:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28849:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28892:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28903:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28885:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28885:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28885:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28930:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28941:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28926:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28926:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "28950:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28958:4:19",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "28946:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28946:17:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28919:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28919:45:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28919:45:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28984:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28995:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28980:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28980:18:19"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "29000:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28973:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28973:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28973:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29027:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29038:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29023:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29023:18:19"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "29043:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29016:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29016:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29016:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28784:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "28795:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28803:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28811:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28819:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28830:4:19",
														"type": ""
													}
												],
												"src": "28658:398:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29235:165:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29252:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29263:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29245:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29245:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29245:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29286:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29297:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29282:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29282:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29302:2:19",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29275:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29275:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29275:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29325:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29336:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29321:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29321:18:19"
																	},
																	{
																		"hexValue": "20496e76616c6964207369676e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29341:17:19",
																		"type": "",
																		"value": " Invalid signer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29314:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29314:45:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29314:45:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29368:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29380:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29391:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29376:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29376:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29368:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29212:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29226:4:19",
														"type": ""
													}
												],
												"src": "29061:339:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29579:228:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29596:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29607:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29589:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29589:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29589:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29630:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29641:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29626:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29626:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29646:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29619:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29619:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29619:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29669:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29680:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29665:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29665:18:19"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29685:34:19",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29658:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29658:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29658:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29740:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29751:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29736:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29736:18:19"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29756:8:19",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29729:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29729:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29729:36:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29774:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29786:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29797:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29782:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29782:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29774:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29556:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29570:4:19",
														"type": ""
													}
												],
												"src": "29405:402:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29986:179:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30003:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30014:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29996:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29996:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29996:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30037:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30048:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30033:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30033:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30053:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30026:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30026:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30026:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30076:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30087:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30072:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30072:18:19"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30092:31:19",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30065:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30065:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30065:59:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30133:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30145:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30156:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30141:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30141:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30133:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29963:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29977:4:19",
														"type": ""
													}
												],
												"src": "29812:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30307:150:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30317:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "30337:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30331:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30331:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "30321:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "30392:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30400:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30388:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30388:17:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30407:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30412:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "30353:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30353:66:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30353:66:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30428:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30439:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30444:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30435:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30435:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30428:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30283:3:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30288:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30299:3:19",
														"type": ""
													}
												],
												"src": "30170:287:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30583:98:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30600:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30611:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30593:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30593:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30593:21:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30623:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "30648:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30660:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30671:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30656:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30656:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "30631:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30631:44:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30623:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30552:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30563:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30574:4:19",
														"type": ""
													}
												],
												"src": "30462:219:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_TheCurrencyManager_$2257__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_TakerOrder_$2419_calldata_ptrt_struct$_MakerOrder_$2406_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 192) { revert(0, 0) }\n        value0 := _2\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if slt(sub(dataEnd, _3), 512) { revert(0, 0) }\n        value1 := _3\n    }\n    function abi_encode_tuple_t_contract$_TheExManager_$2294__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_TheTransferSelector_$2368__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_TheRoyaltyManager_$2310__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Error About Order Side\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Order must be the sender\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0200)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function convert_t_struct$_MakerOrder_$2406_calldata_ptr_to_t_struct$_MakerOrder_$2406_memory_ptr(value) -> converted\n    {\n        if slt(sub(calldatasize(), value), 0x0200) { revert(0, 0) }\n        let value_1 := allocate_memory()\n        mstore(value_1, abi_decode_bool(value))\n        mstore(add(value_1, 32), abi_decode_address(add(value, 32)))\n        mstore(add(value_1, 64), abi_decode_address(add(value, 64)))\n        mstore(add(value_1, 96), calldataload(add(value, 96)))\n        mstore(add(value_1, 128), calldataload(add(value, 128)))\n        mstore(add(value_1, 160), calldataload(add(value, 160)))\n        mstore(add(value_1, 192), abi_decode_address(add(value, 192)))\n        mstore(add(value_1, 224), abi_decode_address(add(value, 224)))\n        let _1 := 256\n        mstore(add(value_1, _1), calldataload(add(value, _1)))\n        let _2 := 288\n        mstore(add(value_1, _2), calldataload(add(value, _2)))\n        let _3 := 320\n        mstore(add(value_1, _3), calldataload(add(value, _3)))\n        let _4 := 352\n        mstore(add(value_1, _4), calldataload(add(value, _4)))\n        let _5 := 384\n        let offset := calldataload(add(value, _5))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        mstore(add(value_1, _5), abi_decode_bytes(add(value, offset), calldatasize()))\n        let _6 := 416\n        mstore(add(value_1, _6), abi_decode_uint8(add(value, _6)))\n        let _7 := 448\n        mstore(add(value_1, _7), calldataload(add(value, _7)))\n        let _8 := 480\n        mstore(add(value_1, _8), calldataload(add(value, _8)))\n        converted := value_1\n    }\n    function calldata_access_bytes_calldata(base_ref, ptr) -> value, length\n    {\n        let rel_offset_of_tail := calldataload(ptr)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let value_1 := add(rel_offset_of_tail, base_ref)\n        length := calldataload(value_1)\n        value := add(value_1, 0x20)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_tuple_t_struct$_TakerOrder_$2419_calldata_ptr_t_struct$_MakerOrder_$2406_calldata_ptr__to_t_struct$_TakerOrder_$2419_memory_ptr_t_struct$_MakerOrder_$2406_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let _1 := 256\n        let value := calldataload(value0)\n        validator_revert_bool(value)\n        mstore(add(headStart, 64), iszero(iszero(value)))\n        let value_1 := calldataload(add(value0, 0x20))\n        validator_revert_address(value_1)\n        mstore(add(headStart, 96), and(value_1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), calldataload(add(value0, 64)))\n        mstore(add(headStart, 160), calldataload(add(value0, 96)))\n        mstore(add(headStart, 0xc0), calldataload(add(value0, 128)))\n        let memberValue0, memberValue1 := calldata_access_bytes_calldata(value0, add(value0, 160))\n        mstore(add(headStart, 224), 0xc0)\n        let end := abi_encode_bytes_calldata(memberValue0, memberValue1, add(headStart, _1))\n        mstore(add(headStart, 0x20), sub(end, headStart))\n        let _2 := 0x0200\n        abi_encode_bool(abi_decode_bool(value1), end)\n        let memberValue0_1 := abi_decode_address(add(value1, 0x20))\n        abi_encode_address(memberValue0_1, add(end, 0x20))\n        let memberValue0_2 := abi_decode_address(add(value1, 64))\n        abi_encode_address(memberValue0_2, add(end, 64))\n        mstore(add(end, 96), calldataload(add(value1, 96)))\n        mstore(add(end, 128), calldataload(add(value1, 128)))\n        mstore(add(end, 160), calldataload(add(value1, 160)))\n        let memberValue0_3 := abi_decode_address(add(value1, 0xc0))\n        abi_encode_address(memberValue0_3, add(end, 0xc0))\n        let memberValue0_4 := abi_decode_address(add(value1, 224))\n        abi_encode_address(memberValue0_4, add(end, 224))\n        mstore(add(end, _1), calldataload(add(value1, _1)))\n        let _3 := 0x0120\n        mstore(add(end, _3), calldataload(add(value1, _3)))\n        let _4 := 0x0140\n        mstore(add(end, _4), calldataload(add(value1, _4)))\n        let _5 := 0x0160\n        mstore(add(end, _5), calldataload(add(value1, _5)))\n        let _6 := 0x0180\n        let memberValue0_5, memberValue1_1 := calldata_access_bytes_calldata(value1, add(value1, _6))\n        mstore(add(end, _6), _2)\n        let tail_1 := abi_encode_bytes_calldata(memberValue0_5, memberValue1_1, add(end, _2))\n        let _7 := 0x01a0\n        let memberValue0_6 := abi_decode_uint8(add(value1, _7))\n        abi_encode_uint8(memberValue0_6, add(end, _7))\n        let _8 := 0x01c0\n        mstore(add(end, _8), calldataload(add(value1, _8)))\n        let _9 := 0x01e0\n        mstore(add(end, _9), calldataload(add(value1, _9)))\n        tail := tail_1\n    }\n    function abi_decode_tuple_t_boolt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Strategy should be valid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Currency must be WETH\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Msg.value is too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Cannot update to a null address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cannot be empty Cancel list\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Cancel Order nonce cannot lower \")\n        mstore(add(headStart, 96), \"than current\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        if gt(value1, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value1)\n        calldatacopy(add(headStart, 64), value0, length)\n        tail := add(add(headStart, length), 64)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Cannot cancel too many orders\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value13, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        abi_encode_address(value3, add(headStart, 96))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        abi_encode_address(value7, add(headStart, 224))\n        abi_encode_address(value8, add(headStart, 256))\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), value12)\n        mstore(add(headStart, 416), value13)\n    }\n    function abi_encode_tuple_t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Order: Matching order expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"The Order signer cannot be the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"The order amount should be great\")\n        mstore(add(headStart, 96), \"er than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1_t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1_t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Signature: Invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \" Not in Currency whitelist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \" Not in Strategy whitelist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"The fee is too high for the sell\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Can't fount transfer manager\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), and(shl(248, value2), shl(248, 255)))\n        end := add(pos, 65)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \" Invalid s parameter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid v parameter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \" Invalid signer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"960": [
									{
										"length": 32,
										"start": 849
									},
									{
										"length": 32,
										"start": 2106
									},
									{
										"length": 32,
										"start": 2338
									},
									{
										"length": 32,
										"start": 2460
									},
									{
										"length": 32,
										"start": 7187
									},
									{
										"length": 32,
										"start": 7414
									},
									{
										"length": 32,
										"start": 7521
									},
									{
										"length": 32,
										"start": 7661
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64DF049E GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAD5C4648 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xC5498769 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xCBD2EC65 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xD4FF41DC EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xF75FF53F EQ PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x64DF049E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x87E4401F EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x9E53A69A EQ PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x483ABB9F GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x483ABB9F EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x509A1A41 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x5CE052D7 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x5E14F68E EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x63521DEF EQ PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF747D74 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x1DF47F80 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x31E27E27 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x4266581E EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x45EA7231 EQ PUSH2 0x1F9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x163 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x163 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0xE9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x2504 JUMP JUMPDEST PUSH2 0xEB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x115A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x124B JUMP JUMPDEST PUSH2 0x41B PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8CFFB07FAA2874440346743BDC0A86B06C3335CC47DC49B327D10E77B73CEB10 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x4D0 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x25E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E6 JUMPI POP PUSH2 0x4E4 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x25E2 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x512 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x555 PUSH2 0x550 DUP4 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x131D JUMP JUMPDEST SWAP1 POP PUSH2 0x561 DUP3 DUP3 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x575 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD310677D DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP3 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x606 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x61C PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x6AC PUSH2 0x669 PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x679 PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x2447 JUMP JUMPDEST DUP5 PUSH2 0x68B PUSH2 0x100 DUP11 ADD PUSH1 0xE0 DUP12 ADD PUSH2 0x2447 JUMP JUMPDEST CALLER PUSH2 0x69C PUSH1 0x40 DUP13 ADD PUSH1 0x20 DUP14 ADD PUSH2 0x2447 JUMP JUMPDEST DUP13 PUSH1 0x40 ADD CALLDATALOAD DUP13 PUSH2 0x160 ADD CALLDATALOAD PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x6E6 PUSH2 0x6BF PUSH1 0x60 DUP8 ADD PUSH1 0x40 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x6CF PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x6DF PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2447 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x6F6 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x70F PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x728 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x95FB6205E23FF6BDA16A2D1DBA56B9AD7C783F67C96FA149785052F47696F2BE DUP8 PUSH2 0x100 DUP11 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x768 SWAP1 PUSH1 0xE0 DUP14 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x778 PUSH1 0x60 DUP14 ADD PUSH1 0x40 DUP15 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP5 DUP5 ADD MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP8 SWAP1 MSTORE DUP12 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x7FE PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x25E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x814 JUMPI POP PUSH2 0x812 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x25E2 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x86B PUSH2 0x100 DUP4 ADD PUSH1 0xE0 DUP5 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x86EAE4E4CADCC6F240DAEAE6E840C4CA40AE8AA89 PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x8C9 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x262F JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x40 ADD CALLDATALOAD GT ISZERO PUSH2 0x94F JUMPI PUSH2 0x94A CALLER ADDRESS PUSH2 0x918 CALLVALUE PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x2AF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 SWAP2 SWAP1 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x40 ADD CALLDATALOAD EQ PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x9AE6CE5CECC2D8EACA40D2E640E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0xA1D DUP3 PUSH2 0x550 SWAP1 PUSH2 0x2744 JUMP JUMPDEST SWAP1 POP PUSH2 0xA29 DUP3 DUP3 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xA3D PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD310677D DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP3 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0xAE4 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x6AC PUSH2 0xB31 PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xB41 PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x2447 JUMP JUMPDEST DUP5 PUSH2 0xB52 PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2447 JUMP JUMPDEST DUP11 PUSH1 0x40 ADD CALLDATALOAD DUP11 PUSH2 0x160 ADD CALLDATALOAD PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0xB6A PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB4F5DB40DF3ACED29E88A4BABBC3B46E305E07D34098525D18B1497056E63838 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xC0E PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x25E2 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xC23 JUMPI POP PUSH2 0xC23 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0xC4F PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8D PUSH2 0x550 DUP4 PUSH2 0x2744 JUMP JUMPDEST SWAP1 POP PUSH2 0xC99 DUP3 DUP3 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xCAD PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2A75FFEE DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP3 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1B SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0xD54 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0xDB6 SWAP1 PUSH2 0xDA5 SWAP1 PUSH1 0x60 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST CALLER PUSH2 0x6DF PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xE1A PUSH2 0xDC9 PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xDD9 PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x2447 JUMP JUMPDEST DUP5 PUSH2 0xDEB PUSH2 0x100 DUP11 ADD PUSH1 0xE0 DUP12 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xDFB PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xE0B PUSH1 0x40 DUP14 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x2447 JUMP JUMPDEST DUP13 PUSH1 0x40 ADD CALLDATALOAD DUP14 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x1849 JUMP JUMPDEST PUSH2 0xE2A PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE43 PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE5C PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x68CD251D4D267C6E2034FF0088B990352B97B2002C0476587D0C4DA889C11330 DUP8 PUSH2 0x100 DUP11 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x768 SWAP1 PUSH1 0xE0 DUP14 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0xEAE PUSH1 0x0 PUSH2 0x1E14 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420626520656D7074792043616E63656C206C6973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFB2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xF2A JUMPI PUSH2 0xF2A PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT ISZERO PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xF73 JUMPI PUSH2 0xF73 PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xFAA SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF00 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFA0AE5D80FE3763C880A3839FAB0294171A6F730D1F82C4CD5392C6F67B41732 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFEE SWAP3 SWAP2 SWAP1 PUSH2 0x2BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1002 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x80E3874461EBBD918AC3E81DA0A92E5E51387D70F337237C9123E48D20E5A508 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10BD SWAP1 PUSH3 0x7A120 PUSH2 0x2BF5 JUMP JUMPDEST DUP2 LT PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C20746F6F206D616E79206F7264657273000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x1E7178D84F0B0825C65795CD62E7972809AD3AAC6917843AAEC596161B2C0A97 SWAP1 PUSH2 0x114F SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1162 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x36E2A376EABC3BC60CB88F29C288F53E36874A95A7F407330AB4F166B0905698 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x11DA PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x1248 DUP2 PUSH2 0x1E14 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1253 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x205D78AB41AFE80BD6B6AAA5D7599D5300FF8690DA3AB1302C1B552F7BAF7D8C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xE0 DUP11 ADD MLOAD PUSH2 0x100 DUP12 ADD MLOAD PUSH2 0x120 DUP13 ADD MLOAD PUSH2 0x140 DUP14 ADD MLOAD PUSH2 0x160 DUP15 ADD MLOAD PUSH2 0x180 DUP16 ADD MLOAD DUP1 MLOAD SWAP1 DUP15 ADD KECCAK256 SWAP11 MLOAD PUSH1 0x0 SWAP15 PUSH2 0x13A7 SWAP15 PUSH32 0x40261ADE532FA1D2C7293DF30AAADB9B3C616FAE525A0B56D3D411C841A85028 SWAP15 SWAP2 SWAP14 SWAP2 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 ADD PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0x13D8 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP7 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x144D JUMPI POP PUSH1 0x7 PUSH1 0x0 PUSH2 0x1423 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x100 ADD CALLDATALOAD LT ISZERO JUMPDEST PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F726465723A204D61746368696E67206F726465722065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AB PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1515 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865204F72646572207369676E65722063616E6E6F7420626520746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA0 ADD CALLDATALOAD GT PUSH2 0x157B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F7264657220616D6F756E742073686F756C64206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6572207468616E203 PUSH1 0xBC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2E3445393F211D11D7F88D325BC26CE78976B4DECD39029FEB202D9B409FC3C5 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1658 DUP3 DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1634 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1646 PUSH2 0x1C0 DUP8 ADD PUSH2 0x1A0 DUP9 ADD PUSH2 0x2C9B JUMP JUMPDEST DUP7 PUSH2 0x1C0 ADD CALLDATALOAD DUP8 PUSH2 0x1E0 ADD CALLDATALOAD DUP7 PUSH2 0x1E66 JUMP JUMPDEST PUSH2 0x1699 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DA59DB985D1D5C994E88125B9D985B1A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x43B938C5 PUSH2 0x16BB PUSH2 0x100 DUP7 ADD PUSH1 0xE0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1723 SWAP2 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH2 0x176F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420696E2043757272656E63792077686974656C697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x999BA27C PUSH2 0x1790 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17F8 SWAP2 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH2 0x1844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420696E2053747261746567792077686974656C697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x1856 DUP11 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1872 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x18A0 JUMPI PUSH1 0x2 SLOAD PUSH2 0x1893 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP10 SWAP2 AND DUP5 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x189D DUP2 DUP4 PUSH2 0x2AF7 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7A7B1AFD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xF4F635FA SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x191F SWAP2 SWAP1 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x193B JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x19C4 JUMPI PUSH2 0x1955 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP10 DUP5 DUP5 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x195F DUP2 DUP6 PUSH2 0x2AF7 JUMP JUMPDEST SWAP4 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D DUP13 DUP6 PUSH1 0x40 MLOAD PUSH2 0x19BB SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH2 0x19CE DUP7 DUP7 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x19DA DUP6 PUSH2 0x2710 PUSH2 0x2D01 JUMP JUMPDEST LT ISZERO PUSH2 0x19F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH2 0x1A0D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP10 DUP10 DUP8 PUSH2 0x1B63 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xCC159493 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xCC159493 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A8A SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1AE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420666F756E74207472616E73666572206D616E6167657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x33F2FA9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0x33F2FA9F SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1BCE SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x202B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x1BE1 DUP9 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BFD JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x2 SLOAD PUSH2 0x1C3C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x1C46 DUP2 DUP4 PUSH2 0x2AF7 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7A7B1AFD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xF4F635FA SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC8 SWAP2 SWAP1 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1CE4 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1DAC JUMPI PUSH2 0x1D1D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x1D27 DUP2 DUP6 PUSH2 0x2AF7 JUMP JUMPDEST SWAP4 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D PUSH32 0x0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1DA3 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH2 0x1DB6 DUP7 DUP7 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x1DC2 DUP6 PUSH2 0x2710 PUSH2 0x2D01 JUMP JUMPDEST LT ISZERO PUSH2 0x1DE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH2 0x1B57 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP9 DUP7 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1EB5 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1F77 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xF8 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x41 DUP2 DUP4 SUB ADD DUP2 MSTORE PUSH1 0x61 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x1626BA7E SWAP2 PUSH2 0x1F1B SWAP2 DUP6 SWAP2 PUSH1 0x65 ADD PUSH2 0x2DC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F5C SWAP2 SWAP1 PUSH2 0x2DE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL EQ SWAP2 POP POP PUSH2 0x1F9B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F8D DUP3 DUP9 DUP9 DUP9 PUSH2 0x212D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP2 POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9DD1CDA6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200A SWAP2 SWAP1 PUSH2 0x2E0A JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 PUSH2 0x2019 DUP5 DUP4 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x2023 SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2080 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x229F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1844 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x209E SWAP2 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH2 0x1844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1844 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x2196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1024B73B30B634B21039903830B930B6B2BA32B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x21AB JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x21ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B2103B103830B930B6B2BA32B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1024B73B30B634B21039B4B3B732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x22AE DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x22B8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2319 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x238C SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x23DE DUP3 DUP3 DUP7 PUSH2 0x23E9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x23F8 JUMPI POP DUP2 PUSH2 0x22B1 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2408 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x2E61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2442 DUP2 PUSH2 0x2422 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22B1 DUP2 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2482 DUP2 PUSH2 0x2422 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x24BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x24CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x24E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x24F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x252F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x258B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2442 DUP2 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22B1 DUP2 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x4572726F722041626F7574204F726465722053696465 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F72646572206D757374206265207468652073656E6465720000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x26A0 JUMPI PUSH2 0x26A0 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x26D2 JUMPI PUSH2 0x26D2 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x26FA JUMPI PUSH2 0x26FA PUSH2 0x2666 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x2757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x275F PUSH2 0x267C JUMP JUMPDEST PUSH2 0x2768 DUP4 PUSH2 0x25D7 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2776 PUSH1 0x20 DUP5 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2787 PUSH1 0x40 DUP5 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x27B6 PUSH1 0xC0 DUP5 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x27C7 PUSH1 0xE0 DUP5 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x160 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x180 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2820 CALLDATASIZE DUP3 DUP8 ADD PUSH2 0x26A6 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x1A0 PUSH2 0x2834 DUP2 DUP6 ADD PUSH2 0x2733 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x286C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x289B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x100 DUP5 CALLDATALOAD PUSH2 0x28DF DUP2 PUSH2 0x25C9 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x28F4 DUP2 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x292E PUSH1 0xA0 DUP7 ADD DUP7 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x2942 DUP4 DUP7 ADD DUP3 DUP5 PUSH2 0x28A2 JUMP JUMPDEST SWAP2 POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x200 PUSH2 0x2963 DUP3 PUSH2 0x295D DUP9 PUSH2 0x25D7 JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x296F PUSH1 0x20 DUP8 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2989 PUSH1 0x40 DUP8 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP7 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x29C3 PUSH1 0xC0 DUP8 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x29DD PUSH1 0xE0 DUP8 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xE0 DUP4 ADD MSTORE DUP3 DUP7 ADD CALLDATALOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x120 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x160 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x180 SWAP2 PUSH2 0x2A27 DUP4 DUP8 ADD DUP8 PUSH2 0x2855 JUMP JUMPDEST DUP3 DUP6 DUP6 ADD MSTORE PUSH2 0x2A39 DUP4 DUP6 ADD DUP3 DUP5 PUSH2 0x28A2 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH2 0x1A0 PUSH2 0x2A4C DUP2 DUP8 ADD PUSH2 0x2733 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP6 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 SWAP5 DUP6 ADD CALLDATALOAD SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x2A93 DUP2 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x53747261746567792073686F756C642062652076616C69640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E63656C204F72646572206E6F6E63652063616E6E6F74206C6F77657220 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x1D1A185B8818DD5C9C995B9D PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2BB5 JUMPI PUSH2 0x2BB5 PUSH2 0x2AE1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x2BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0x2AE1 JUMP JUMPDEST DUP15 DUP2 MSTORE DUP14 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP13 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE DUP10 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2C56 PUSH1 0xE0 DUP4 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x140 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH2 0x160 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 SWAP1 SWAP2 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B1 DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22B1 DUP2 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x2CF1 DUP2 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5468652066656520697320746F6F206869676820666F72207468652073656C6C PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22B1 DUP2 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D92 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D7A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2DB3 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x22AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2D9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x22B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E40 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2E57 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2D77 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22B1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D9B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 ADDRESS JUMP PUSH7 0x772370E093EE4C DUP15 0xE6 0xBD ISZERO SWAP8 EQ 0xDA MULMOD PUSH13 0x97BB98D5634B3E049397EC7864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "995:22314:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2105:41;;;;;;;;;;-1:-1:-1;2105:41:8;;;;-1:-1:-1;;;;;2105:41:8;;;;;;-1:-1:-1;;;;;205:32:19;;;187:51;;175:2;160:18;2105:41:8;;;;;;;;22179:208;;;;;;;;;;-1:-1:-1;22179:208:8;;;;;:::i;:::-;;:::i;:::-;;12455:226;;;;;;;;;;-1:-1:-1;12455:226:8;;;;;:::i;:::-;;:::i;:::-;;;1357:14:19;;1350:22;1332:41;;1320:2;1305:18;12455:226:8;1192:187:19;2328:52:8;;;;;;;;;;-1:-1:-1;2328:52:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1530:25:19;;;1518:2;1503:18;2328:52:8;1384:177:19;7032:1776:8;;;;;;;;;;-1:-1:-1;7032:1776:8;;;;;:::i;:::-;;:::i;2152:36::-;;;;;;;;;;-1:-1:-1;2152:36:8;;;;-1:-1:-1;;;;;2152:36:8;;;4711:2126;;;;;;:::i;:::-;;:::i;21282:282::-;;;;;;;;;;-1:-1:-1;21282:282:8;;;;;:::i;:::-;;:::i;2242:46::-;;;;;;;;;;-1:-1:-1;2242:46:8;;;;-1:-1:-1;;;;;2242:46:8;;;9001:1891;;;;;;;;;;-1:-1:-1;9001:1891:8;;;;;:::i;:::-;;:::i;2062:35::-;;;;;;;;;;-1:-1:-1;2062:35:8;;;;-1:-1:-1;;;;;2062:35:8;;;1831:101:0;;;;;;;;;;;;;:::i;2194:42:8:-;;;;;;;;;;-1:-1:-1;2194:42:8;;;;-1:-1:-1;;;;;2194:42:8;;;1201:85:0;;;;;;;;;;-1:-1:-1;1273:6:0;;-1:-1:-1;;;;;1273:6:0;1201:85;;11688:473:8;;;;;;;;;;-1:-1:-1;11688:473:8;;;;;:::i;:::-;;:::i;1993:29::-;;;;;;;;;;;;;;;22544:295;;;;;;;;;;-1:-1:-1;22544:295:8;;;;;:::i;:::-;;:::i;11044:475::-;;;;;;;;;;-1:-1:-1;11044:475:8;;;;;:::i;:::-;;:::i;21721:283::-;;;;;;;;;;-1:-1:-1;21721:283:8;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;22995:311:8:-;;;;;;;;;;-1:-1:-1;22995:311:8;;;;;:::i;:::-;;:::i;22179:208::-;1094:13:0;:11;:13::i;:::-;22275:20:8::1;:44:::0;;-1:-1:-1;;;;;;22275:44:8::1;-1:-1:-1::0;;;;;22275:44:8;::::1;::::0;;::::1;::::0;;;22334:46:::1;::::0;::::1;::::0;-1:-1:-1;;22334:46:8::1;22179:208:::0;:::o;12455:226::-;-1:-1:-1;;;;;12624:38:8;;12557:4;12624:38;;;:32;:38;;;;;;;;:50;;;;;;;;;;;12455:226;;;;;:::o;7032:1776::-;1744:1:2;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;7266:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;7265:47;;;;-1:-1:-1::0;7292:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;7291:20;7265:47;7257:82;;;;-1:-1:-1::0;;;7257:82:8::1;;;;;;;:::i;:::-;7412:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;7398:28:8::1;:10;-1:-1:-1::0;;;;;7398:28:8::1;;7390:65;;;;-1:-1:-1::0;;;7390:65:8::1;;;;;;;:::i;:::-;7497:15;7515;:13;:8:::0;:13:::1;:::i;:::-;;:15::i;:::-;7497:33;;7540;7555:8;7565:7;7540:14;:33::i;:::-;7596:21;::::0;;7668:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;7654:56:8::1;;7711:8;7721;7654:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7595:135;;;;;;7784:16;7776:53;;;;-1:-1:-1::0;;;7776:53:8::1;;;;;;;:::i;:::-;7997:4;7929:32;:49;7962:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;7929:49:8::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;7929:49:8;;;7979:14:::1;::::0;::::1;;7929:65:::0;;;;;;;:72;;-1:-1:-1;;7929:72:8::1;::::0;::::1;;::::0;;;::::1;::::0;;8037:269:::1;8072:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;8103:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;8136:7:::0;8157:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;8188:10;8212:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;8241:8;:14;;;8269:8;:27;;;8037:21;:269::i;:::-;8340:157;8379:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;8412:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;8441:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;8469:7;8490:6;8340:25;:157::i;:::-;8641:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;8513:288:8::1;8612:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;8513:288:8::1;8584:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;8513:288:8::1;;8535:7:::0;8556:14:::1;::::0;::::1;::::0;::::1;::::0;8672:17:::1;::::0;::::1;::::0;::::1;;:::i;:::-;8703:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;8777:14;8513:288:::0;;13194:25:19;;;13250:2;13235:18;;13228:34;;;;-1:-1:-1;;;;;13336:15:19;;;13316:18;;;13309:43;13388:15;13383:2;13368:18;;13361:43;13435:3;13420:19;;13413:35;;;13289:3;13464:19;;13457:35;;;8777:14:8;::::1;;13523:3:19::0;13508:19;;13501:35;13181:3;13166:19;8513:288:8::1;;;;;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;-1:-1:-1;;;;7032:1776:8:o;4711:2126::-;1744:1:2;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;4904:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;4903:47;;;;-1:-1:-1::0;4930:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;4929:20;4903:47;4895:82;;;;-1:-1:-1::0;;;4895:82:8::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5046:4:8::1;5025:25;:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;5025:25:8::1;;5017:59;;;::::0;-1:-1:-1;;;5017:59:8;;13749:2:19;5017:59:8::1;::::0;::::1;13731:21:19::0;13788:2;13768:18;;;13761:30;-1:-1:-1;;;13807:18:19;;;13800:51;13868:18;;5017:59:8::1;13547:345:19::0;5017:59:8::1;5108:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;5094:28:8::1;:10;-1:-1:-1::0;;;;;5094:28:8::1;;5086:65;;;;-1:-1:-1::0;;;5086:65:8::1;;;;;;;:::i;:::-;5237:9;5220:8;:14;;;:26;5216:235;;;5262:86;5292:10;5312:4;5320:26;5337:9;5320:14;::::0;::::1;;:26;:::i;:::-;-1:-1:-1::0;;;;;5269:4:8::1;5262:29;::::0;:86;;:29:::1;:86::i;:::-;5216:235;;;5405:9;5387:8;:14;;;:27;5379:61;;;::::0;-1:-1:-1;;;5379:61:8;;14364:2:19;5379:61:8::1;::::0;::::1;14346:21:19::0;14403:2;14383:18;;;14376:30;-1:-1:-1;;;14422:18:19;;;14415:51;14483:18;;5379:61:8::1;14162:345:19::0;5379:61:8::1;5490:4;-1:-1:-1::0;;;;;5484:19:8::1;;5512:9;5484:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;5578:15;5596;:8;:13;;;:::i;:15::-;5578:33;;5621;5636:8;5646:7;5621:14;:33::i;:::-;5706:21;::::0;;5778:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;5764:56:8::1;;5821:8;5831;5764:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5705:135;;;;;;5859:16;5851:53;;;;-1:-1:-1::0;;;5851:53:8::1;;;;;;;:::i;:::-;6072:4;6004:32;:49;6037:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;6004:49:8::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;6004:49:8;;;6054:14:::1;::::0;::::1;;6004:65:::0;;;;;;;:72;;-1:-1:-1;;6004:72:8::1;::::0;::::1;;::::0;;;::::1;::::0;;6112:222:::1;6155:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;6186:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;6219:7:::0;6240:15:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;6269:8;:14;;;6297:8;:27;;;6112:29;:222::i;21282:282::-:0;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;21376:30:8;::::1;21368:74;;;;-1:-1:-1::0;;;21368:74:8::1;;;;;;;:::i;:::-;21452:15;:54:::0;;-1:-1:-1;;;;;;21452:54:8::1;-1:-1:-1::0;;;;;21452:54:8;::::1;::::0;;::::1;::::0;;;21521:36:::1;::::0;::::1;::::0;-1:-1:-1;;21521:36:8::1;21282:282:::0;:::o;9001:1891::-;1744:1:2;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:2;;;;;;;:::i;:::-;1744:1;2455:7;:18;9289:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;9288:20;9287:47;;;;-1:-1:-1::0;9314:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;9279:82;;;;-1:-1:-1::0;;;9279:82:8::1;;;;;;;:::i;:::-;9434:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;9420:28:8::1;:10;-1:-1:-1::0;;;;;9420:28:8::1;;9412:65;;;;-1:-1:-1::0;;;9412:65:8::1;;;;;;;:::i;:::-;9521:15;9539;:13;:8:::0;:13:::1;:::i;:15::-;9521:33;;9606;9621:8;9631:7;9606:14;:33::i;:::-;9715:21;::::0;;9787:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;9773:55:8::1;;9829:8;9839;9773:75;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9714:134;;;;;;9867:16;9859:53;;;;-1:-1:-1::0;;;9859:53:8::1;;;;;;;:::i;:::-;10080:4;10012:32;:49;10045:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;10012:49:8::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;10012:49:8;;;10062:14:::1;::::0;::::1;;10012:65:::0;;;;;;;;;:72;;-1:-1:-1;;10012:72:8::1;::::0;::::1;;::::0;;;::::1;::::0;;;10119:153:::1;::::0;10158:19:::1;::::0;;;;;;::::1;;:::i;:::-;10191:10;10215:15;::::0;;;::::1;::::0;::::1;;:::i;10119:153::-;10308:273;10343:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;10374:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;10407:7:::0;10428:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;10459:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;10488:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;10516:8;:14;;;10544:8;:27;;;10308:21;:273::i;:::-;10725:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;10597:288:8::1;10696:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;10597:288:8::1;10668:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;10597:288:8::1;;10619:7:::0;10640:14:::1;::::0;::::1;::::0;::::1;::::0;10756:17:::1;::::0;::::1;::::0;::::1;;:::i;1831:101:0:-:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;11688:473:8:-;11780:20;11772:60;;;;-1:-1:-1;;;11772:60:8;;15074:2:19;11772:60:8;;;15056:21:19;15113:2;15093:18;;;15086:30;15152:29;15132:18;;;15125:57;15199:18;;11772:60:8;14872:351:19;11772:60:8;11848:9;11843:253;11863:20;;;11843:253;;;11946:10;11928:29;;;;:17;:29;;;;;;11912:9;;11922:1;11912:12;;;;;;;:::i;:::-;;;;;;;:45;;11904:102;;;;-1:-1:-1;;;11904:102:8;;;;;;;:::i;:::-;12053:10;12020:44;;;;:32;:44;;;;;12081:4;;12065:9;;12075:1;12065:12;;;;;;;:::i;:::-;;;;;;;12020:58;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;11885:3;;;;;:::i;:::-;;;;11843:253;;;;12132:10;-1:-1:-1;;;;;12111:43:8;;12144:9;;12111:43;;;;;;;:::i;:::-;;;;;;;;11688:473;;:::o;22544:295::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;22642:32:8;::::1;22634:76;;;;-1:-1:-1::0;;;22634:76:8::1;;;;;;;:::i;:::-;22720:17;:57:::0;;-1:-1:-1;;;;;;22720:57:8::1;-1:-1:-1::0;;;;;22720:57:8;::::1;::::0;;::::1;::::0;;;22792:40:::1;::::0;::::1;::::0;-1:-1:-1;;22792:40:8::1;22544:295:::0;:::o;11044:475::-;11152:10;11134:29;;;;:17;:29;;;;;;11123:40;;11115:97;;;;-1:-1:-1;;;11115:97:8;;;;;;;:::i;:::-;11259:10;11241:29;;;;:17;:29;;;;;;:38;;11273:6;11241:38;:::i;:::-;11230:8;:49;11222:91;;;;-1:-1:-1;;;11222:91:8;;16693:2:19;11222:91:8;;;16675:21:19;16732:2;16712:18;;;16705:30;16771:31;16751:18;;;16744:59;16820:18;;11222:91:8;16491:353:19;11222:91:8;11437:10;11419:29;;;;:17;:29;;;;;;;:40;;;11475:37;;;;;11451:8;1530:25:19;;1518:2;1503:18;;1384:177;11475:37:8;;;;;;;;11044:475;:::o;21721:283::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;21817:31:8;::::1;21809:75;;;;-1:-1:-1::0;;;21809:75:8::1;;;;;;;:::i;:::-;21894:16;:50:::0;;-1:-1:-1;;;;;;21894:50:8::1;-1:-1:-1::0;;;;;21894:50:8;::::1;::::0;;::::1;::::0;;;21959:38:::1;::::0;::::1;::::0;-1:-1:-1;;21959:38:8::1;21721:283:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;17051:2:19;2161:73:0::1;::::0;::::1;17033:21:19::0;17090:2;17070:18;;;17063:30;17129:34;17109:18;;;17102:62;-1:-1:-1;;;17180:18:19;;;17173:36;17226:19;;2161:73:0::1;16849:402:19::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;22995:311:8:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;23097:34:8;::::1;23089:78;;;;-1:-1:-1::0;;;23089:78:8::1;;;;;;;:::i;:::-;23177:19;:63:::0;;-1:-1:-1;;;;;;23177:63:8::1;-1:-1:-1::0;;;;;23177:63:8;::::1;::::0;;::::1;::::0;;;23255:44:::1;::::0;::::1;::::0;-1:-1:-1;;23255:44:8::1;22995:311:::0;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:7;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;17458:2:19;1414:68:0;;;17440:21:19;;;17477:18;;;17470:30;17536:34;17516:18;;;17509:62;17588:18;;1414:68:0;17256:356:19;2084:692:17;2270:21;;2309:17;;;;;2344:21;;;;;2383:16;;;;2417:18;;;;2453:17;;;;2488:19;;;;2525;;;;2562:16;;;;2596:20;;;;2634:18;;;;2670:29;;;;2727:17;;;;2717:28;;;;;;2208:551;;2151:7;;2208:551;;592:66;;2270:21;;2309:17;;2344:21;2383:16;2417:18;2453:17;2488:19;2525;2562:16;2596:20;2634:18;2670:29;2208:551;;:::i;:::-;;;;;;;;;;;;;2185:584;;;;;;2170:599;;2084:692;;;:::o;19013:2113:8:-;19239:32;:45;19272:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19239:45:8;;;;;;;;;;;;;;;-1:-1:-1;19239:45:8;;;19285:10;;;;19239:57;;;;;;;;;;19238:58;19237:122;;;;-1:-1:-1;19328:17:8;:30;19346:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19328:30:8;-1:-1:-1;;;;;19328:30:8;;;;;;;;;;;;;19314:4;:10;;;:44;;19237:122;19162:252;;;;-1:-1:-1;;;19162:252:8;;19015:2:19;19162:252:8;;;18997:21:19;19054:2;19034:18;;;19027:30;19093:31;19073:18;;;19066:59;19142:18;;19162:252:8;18813:353:19;19162:252:8;19497:1;19474:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19474:25:8;;19466:81;;;;-1:-1:-1;;;19466:81:8;;19373:2:19;19466:81:8;;;19355:21:19;19412:2;19392:18;;;19385:30;19451:34;19431:18;;;19424:62;-1:-1:-1;;;19502:18:19;;;19495:41;19553:19;;19466:81:8;19171:407:19;19466:81:8;19625:1;19611:4;:11;;;:15;19603:69;;;;-1:-1:-1;;;19603:69:8;;19785:2:19;19603:69:8;;;19767:21:19;19824:2;19804:18;;;19797:30;19863:34;19843:18;;;19836:62;-1:-1:-1;;;19914:18:19;;;19907:39;19963:19;;19603:69:8;19583:405:19;19603:69:8;19723:546;;;19751:66;19723:546;;;20504:25:19;19946:66:8;20545:18:19;;;20538:34;;;;20072:66:8;20588:18:19;;;20581:34;20211:13:8;20631:18:19;;;20624:34;20250:4:8;20674:19:19;;;20667:61;19683:14:8;;20476:19:19;;19723:546:8;;;;;;;;;;;;19700:579;;;;;;19683:596;;20484:266;20538:4;20567;:11;;;;;;;;;;:::i;:::-;20614:6;;;;;;;;:::i;:::-;20682:4;:6;;;20706:4;:6;;;20730;20484:36;:266::i;:::-;20463:331;;;;-1:-1:-1;;;20463:331:8;;21128:2:19;20463:331:8;;;21110:21:19;21167:2;21147:18;;;21140:30;-1:-1:-1;;;21186:18:19;;;21179:48;21244:18;;20463:331:8;20926:342:19;20463:331:8;20856:15;;-1:-1:-1;;;;;20856:15:8;:37;20894:13;20856:15;20894:13;;;;;;:::i;:::-;20856:52;;-1:-1:-1;;;;;;20856:52:8;;;;;;;-1:-1:-1;;;;;205:32:19;;;20856:52:8;;;187:51:19;160:18;;20856:52:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20848:91;;;;-1:-1:-1;;;20848:91:8;;21725:2:19;20848:91:8;;;21707:21:19;21764:2;21744:18;;;21737:30;21803:28;21783:18;;;21776:56;21849:18;;20848:91:8;21523:350:19;20848:91:8;21035:16;;-1:-1:-1;;;;;21035:16:8;:38;21074:13;;;;;;;;:::i;:::-;21035:53;;-1:-1:-1;;;;;;21035:53:8;;;;;;;-1:-1:-1;;;;;205:32:19;;;21035:53:8;;;187:51:19;160:18;;21035:53:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21027:92;;;;-1:-1:-1;;;21027:92:8;;22080:2:19;21027:92:8;;;22062:21:19;22119:2;22099:18;;;22092:30;22158:28;22138:18;;;22131:56;22204:18;;21027:92:8;21878:350:19;21027:92:8;19102:2024;19013:2113;;:::o;13294:1871::-;13619:6;13591:25;13714:39;13736:8;13619:6;13714:21;:39::i;:::-;14022:20;;13686:67;;-1:-1:-1;;;;;;14022:20:8;:34;;;;14021:64;;-1:-1:-1;14062:22:8;;;14021:64;14017:227;;;14141:20;;14101:80;;-1:-1:-1;;;;;14101:33:8;;;;14135:4;;14141:20;14163:17;14101:33;:80::i;:::-;14195:38;14216:17;14195:38;;:::i;:::-;;;14017:227;14351:17;;:90;;-1:-1:-1;;;14351:90:8;;-1:-1:-1;;;;;22453:32:19;;;14351:90:8;;;22435:51:19;22502:18;;;22495:34;;;22545:18;;;22538:34;;;14294:27:8;;;;14351:17;;;:61;;22408:18:19;;14351:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14293:148;;-1:-1:-1;14293:148:8;-1:-1:-1;;;;;;14537:33:8;;;;;;14536:62;;-1:-1:-1;14576:21:8;;;14536:62;14532:326;;;14614:78;-1:-1:-1;;;;;14614:33:8;;14648:4;14654:19;14675:16;14614:33;:78::i;:::-;14706:37;14727:16;14706:37;;:::i;:::-;;;14799:19;-1:-1:-1;;;;;14763:84:8;14790:7;14778:10;-1:-1:-1;;;;;14763:84:8;;14820:8;14830:16;14763:84;;;;;;-1:-1:-1;;;;;23092:32:19;;;;23074:51;;23156:2;23141:18;;23134:34;23062:2;23047:18;;22900:274;14763:84:8;;;;;;;;14532:326;14981:27;15002:6;14981:18;:27;:::i;:::-;14950:25;:17;14970:5;14950:25;:::i;:::-;14949:60;;14941:107;;;;-1:-1:-1;;;14941:107:8;;;;;;;:::i;:::-;15095:62;-1:-1:-1;;;;;15095:33:8;;15129:4;15135:2;15139:17;15095:33;:62::i;:::-;13547:1618;;;;13294:1871;;;;;;;;:::o;17717:581::-;17967:19;;:60;;-1:-1:-1;;;17967:60:8;;-1:-1:-1;;;;;205:32:19;;;17967:60:8;;;187:51:19;17949:15:8;;17967:19;;:48;;160:18:19;;17967:60:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17949:78;-1:-1:-1;;;;;;18088:21:8;;18080:62;;;;-1:-1:-1;;;18080:62:8;;24213:2:19;18080:62:8;;;24195:21:19;24252:2;24232:18;;;24225:30;24291;24271:18;;;24264:58;24339:18;;18080:62:8;24011:352:19;18080:62:8;18200:91;;-1:-1:-1;;;18200:91:8;;-1:-1:-1;;;;;24683:15:19;;;18200:91:8;;;24665:34:19;24735:15;;;24715:18;;;24708:43;24787:15;;;24767:18;;;24760:43;24819:18;;;24812:34;;;24862:19;;;24855:35;;;18200:52:8;;;;;24599:19:19;;18200:91:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17886:412;17717:581;;;;;:::o;974:241:5:-;1139:68;;-1:-1:-1;;;;;25159:15:19;;;1139:68:5;;;25141:34:19;25211:15;;25191:18;;;25184:43;25243:18;;;25236:34;;;1112:96:5;;1132:5;;-1:-1:-1;;;1162:27:5;25076:18:19;;1139:68:5;;;;-1:-1:-1;;1139:68:5;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:5;-1:-1:-1;;;;;;1139:68:5;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;15615:1795:8:-;15903:6;15875:25;15998:39;16020:8;15903:6;15998:21;:39::i;:::-;16307:20;;15970:67;;-1:-1:-1;;;;;;16307:20:8;:34;;;;16306:64;;-1:-1:-1;16347:22:8;;;16306:64;16302:213;;;16412:20;;16386:66;;-1:-1:-1;;;;;16393:4:8;16386:25;;;16412:20;16434:17;16386:25;:66::i;:::-;16466:38;16487:17;16466:38;;:::i;:::-;;;16302:213;16619:17;;:90;;-1:-1:-1;;;16619:90:8;;-1:-1:-1;;;;;22453:32:19;;;16619:90:8;;;22435:51:19;22502:18;;;22495:34;;;22545:18;;;22538:34;;;16562:27:8;;;;16619:17;;;:61;;22408:18:19;;16619:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16561:148;;-1:-1:-1;16561:148:8;-1:-1:-1;;;;;;16805:33:8;;;;;;16804:62;;-1:-1:-1;16844:21:8;;;16804:62;16800:317;;;16882:64;-1:-1:-1;;;;;16889:4:8;16882:25;16908:19;16929:16;16882:25;:64::i;:::-;16960:37;16981:16;16960:37;;:::i;:::-;;;17053:19;-1:-1:-1;;;;;17017:89:8;17044:7;17032:10;-1:-1:-1;;;;;17017:89:8;;17082:4;17089:16;17017:89;;;;;;-1:-1:-1;;;;;23092:32:19;;;;23074:51;;23156:2;23141:18;;23134:34;23062:2;23047:18;;22900:274;17017:89:8;;;;;;;;16800:317;17241:27;17262:6;17241:18;:27;:::i;:::-;17210:25;:17;17230:5;17210:25;:::i;:::-;17209:60;;17201:107;;;;-1:-1:-1;;;17201:107:8;;;;;;;:::i;:::-;17354:48;-1:-1:-1;;;;;17361:4:8;17354:25;17380:2;17384:17;17354:25;:48::i;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1743:906:18:-;2124:51;;-1:-1:-1;;;2124:51:18;;;25539:27:19;25582:11;;;25575:27;;;25618:12;;;25611:28;;;1922:4:18;;;;25655:12:19;;2124:51:18;;;;;;;;;;;;2114:62;;;;;;2097:79;;2250:26;2269:6;-1:-1:-1;;;;;1465:19:6;;:23;;;1175:320;2250:26:18;2246:397;;;2453:25;;;;;;25859:19:19;;;25894:12;;;25887:28;;;25971:3;25949:16;;;-1:-1:-1;;;;;;25945:36:19;25931:12;;;25924:58;2453:25:18;;;;;;;;;25998:12:19;;;2453:25:18;;;;-1:-1:-1;;;2411:68:18;;;-1:-1:-1;;;;;2411:33:18;;;;;:68;;2445:6;;2411:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2411:82:18;;2483:10;2411:82;;;2404:89;;;;;2246:397;2626:6;-1:-1:-1;;;;;2598:34:18;:24;2606:6;2614:1;2617;2620;2598:7;:24::i;:::-;-1:-1:-1;;;;;2598:34:18;;2591:41;;;1743:906;;;;;;;;;:::o;18551:230:8:-;18642:7;18661:19;18697:11;-1:-1:-1;;;;;18683:42:8;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18661:66;-1:-1:-1;18769:5:8;18745:20;18759:6;18661:66;18745:20;:::i;:::-;18744:30;;;;:::i;:::-;18737:37;18551:230;-1:-1:-1;;;;18551:230:8:o;3747:706:5:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:5;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:5;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:5;;27752:2:19;4351:85:5;;;27734:21:19;27791:2;27771:18;;;27764:30;27830:34;27810:18;;;27803:62;-1:-1:-1;;;27881:18:19;;;27874:40;27931:19;;4351:85:5;27550:406:19;763:205:5;902:58;;-1:-1:-1;;;;;23092:32:19;;902:58:5;;;23074:51:19;23141:18;;;23134:34;;;875:86:5;;895:5;;-1:-1:-1;;;925:23:5;23047:18:19;;902:58:5;22900:274:19;688:771:18;811:7;1083:66;1069:80;;;1048:147;;;;-1:-1:-1;;;1048:147:18;;28163:2:19;1048:147:18;;;28145:21:19;28202:2;28182:18;;;28175:30;-1:-1:-1;;;28221:18:19;;;28214:50;28281:18;;1048:147:18;27961:344:19;1048:147:18;1214:1;:7;;1219:2;1214:7;:18;;;;1225:1;:7;;1230:2;1225:7;1214:18;1206:50;;;;-1:-1:-1;;;1206:50:18;;28512:2:19;1206:50:18;;;28494:21:19;28551:2;28531:18;;;28524:30;-1:-1:-1;;;28570:18:19;;;28563:49;28629:18;;1206:50:18;28310:343:19;1206:50:18;1346:24;;;1329:14;1346:24;;;;;;;;;28885:25:19;;;28958:4;28946:17;;28926:18;;;28919:45;;;;28980:18;;;28973:34;;;29023:18;;;29016:34;;;1346:24:18;;28857:19:19;;1346:24:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1346:24:18;;-1:-1:-1;;1346:24:18;;;-1:-1:-1;;;;;;;1388:20:18;;1380:48;;;;-1:-1:-1;;;1380:48:18;;29263:2:19;1380:48:18;;;29245:21:19;29302:2;29282:18;;;29275:30;-1:-1:-1;;;29321:18:19;;;29314:45;29376:18;;1380:48:18;29061:339:19;1380:48:18;1446:6;688:771;-1:-1:-1;;;;;688:771:18:o;3861:223:6:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:6;;29607:2:19;5137:81:6;;;29589:21:19;29646:2;29626:18;;;29619:30;29685:34;29665:18;;;29658:62;-1:-1:-1;;;29736:18:19;;;29729:36;29782:19;;5137:81:6;29405:402:19;5137:81:6;-1:-1:-1;;;;;1465:19:6;;;5228:60;;;;-1:-1:-1;;;5228:60:6;;30014:2:19;5228:60:6;;;29996:21:19;30053:2;30033:18;;;30026:30;30092:31;30072:18;;;30065:59;30141:18;;5228:60:6;29812:353:19;5228:60:6;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:6;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:6:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:6;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:6;;;;;;;;:::i;249:131:19:-;-1:-1:-1;;;;;324:31:19;;314:42;;304:70;;370:1;367;360:12;385:134;453:20;;482:31;453:20;482:31;:::i;:::-;385:134;;;:::o;524:247::-;583:6;636:2;624:9;615:7;611:23;607:32;604:52;;;652:1;649;642:12;604:52;691:9;678:23;710:31;735:5;710:31;:::i;776:315::-;844:6;852;905:2;893:9;884:7;880:23;876:32;873:52;;;921:1;918;911:12;873:52;960:9;947:23;979:31;1004:5;979:31;:::i;:::-;1029:5;1081:2;1066:18;;;;1053:32;;-1:-1:-1;;;776:315:19:o;1566:679::-;1694:6;1702;1755:2;1743:9;1734:7;1730:23;1726:32;1723:52;;;1771:1;1768;1761:12;1723:52;1811:9;1798:23;1840:18;1881:2;1873:6;1870:14;1867:34;;;1897:1;1894;1887:12;1867:34;1920:22;;;;1976:3;1958:16;;;1954:26;1951:46;;;1993:1;1990;1983:12;1951:46;2016:2;;-1:-1:-1;2071:2:19;2056:18;;2043:32;;2087:16;;;2084:36;;;2116:1;2113;2106:12;2084:36;-1:-1:-1;2139:24:19;;2197:3;2179:16;;;2175:26;2172:46;;;2214:1;2211;2204:12;2172:46;2237:2;2227:12;;;1566:679;;;;;:::o;3266:615::-;3352:6;3360;3413:2;3401:9;3392:7;3388:23;3384:32;3381:52;;;3429:1;3426;3419:12;3381:52;3469:9;3456:23;3498:18;3539:2;3531:6;3528:14;3525:34;;;3555:1;3552;3545:12;3525:34;3593:6;3582:9;3578:22;3568:32;;3638:7;3631:4;3627:2;3623:13;3619:27;3609:55;;3660:1;3657;3650:12;3609:55;3700:2;3687:16;3726:2;3718:6;3715:14;3712:34;;;3742:1;3739;3732:12;3712:34;3795:7;3790:2;3780:6;3777:1;3773:14;3769:2;3765:23;3761:32;3758:45;3755:65;;;3816:1;3813;3806:12;3755:65;3847:2;3839:11;;;;;3869:6;;-1:-1:-1;3266:615:19;;-1:-1:-1;;;;3266:615:19:o;3886:180::-;3945:6;3998:2;3986:9;3977:7;3973:23;3969:32;3966:52;;;4014:1;4011;4004:12;3966:52;-1:-1:-1;4037:23:19;;3886:180;-1:-1:-1;3886:180:19:o;4071:355::-;4273:2;4255:21;;;4312:2;4292:18;;;4285:30;4351:33;4346:2;4331:18;;4324:61;4417:2;4402:18;;4071:355::o;4431:118::-;4517:5;4510:13;4503:21;4496:5;4493:32;4483:60;;4539:1;4536;4529:12;4554:128;4619:20;;4648:28;4619:20;4648:28;:::i;4687:241::-;4743:6;4796:2;4784:9;4775:7;4771:23;4767:32;4764:52;;;4812:1;4809;4802:12;4764:52;4851:9;4838:23;4870:28;4892:5;4870:28;:::i;4933:346::-;5135:2;5117:21;;;5174:2;5154:18;;;5147:30;-1:-1:-1;;;5208:2:19;5193:18;;5186:52;5270:2;5255:18;;4933:346::o;5284:348::-;5486:2;5468:21;;;5525:2;5505:18;;;5498:30;5564:26;5559:2;5544:18;;5537:54;5623:2;5608:18;;5284:348::o;5637:127::-;5698:10;5693:3;5689:20;5686:1;5679:31;5729:4;5726:1;5719:15;5753:4;5750:1;5743:15;5769:250;5836:2;5830:9;5878:6;5866:19;;5915:18;5900:34;;5936:22;;;5897:62;5894:88;;;5962:18;;:::i;:::-;5998:2;5991:22;5769:250;:::o;6024:718::-;6066:5;6119:3;6112:4;6104:6;6100:17;6096:27;6086:55;;6137:1;6134;6127:12;6086:55;6173:6;6160:20;6199:18;6236:2;6232;6229:10;6226:36;;;6242:18;;:::i;:::-;6317:2;6311:9;6285:2;6371:13;;-1:-1:-1;;6367:22:19;;;6391:2;6363:31;6359:40;6347:53;;;6415:18;;;6435:22;;;6412:46;6409:72;;;6461:18;;:::i;:::-;6501:10;6497:2;6490:22;6536:2;6528:6;6521:18;6582:3;6575:4;6570:2;6562:6;6558:15;6554:26;6551:35;6548:55;;;6599:1;6596;6589:12;6548:55;6663:2;6656:4;6648:6;6644:17;6637:4;6629:6;6625:17;6612:54;6710:1;6703:4;6698:2;6690:6;6686:15;6682:26;6675:37;6730:6;6721:15;;;;;;6024:718;;;;:::o;6747:156::-;6813:20;;6873:4;6862:16;;6852:27;;6842:55;;6893:1;6890;6883:12;6908:1606;7016:9;7075:6;7067:5;7051:14;7047:26;7043:39;7040:59;;;7095:1;7092;7085:12;7040:59;7123:17;;:::i;:::-;7165:22;7181:5;7165:22;:::i;:::-;7156:7;7149:39;7222:34;7252:2;7245:5;7241:14;7222:34;:::i;:::-;7217:2;7208:7;7204:16;7197:60;7291:34;7321:2;7314:5;7310:14;7291:34;:::i;:::-;7286:2;7277:7;7273:16;7266:60;7384:2;7377:5;7373:14;7360:28;7355:2;7346:7;7342:16;7335:54;7448:3;7441:5;7437:15;7424:29;7418:3;7409:7;7405:17;7398:56;7513:3;7506:5;7502:15;7489:29;7483:3;7474:7;7470:17;7463:56;7554:35;7584:3;7577:5;7573:15;7554:35;:::i;:::-;7548:3;7539:7;7535:17;7528:62;7625:35;7655:3;7648:5;7644:15;7625:35;:::i;:::-;7619:3;7606:17;;7599:62;7680:3;7730:14;;;7717:28;7699:16;;;7692:54;7765:3;7815:14;;;7802:28;7784:16;;;7777:54;7850:3;7900:14;;;7887:28;7869:16;;;7862:54;7935:3;7985:14;;;7972:28;7954:16;;;7947:54;8020:3;8059:14;;;8046:28;8097:18;8086:30;;8083:50;;;8129:1;8126;8119:12;8083:50;8167:52;8204:14;8195:6;8188:5;8184:18;8167:52;:::i;:::-;8162:2;8153:7;8149:16;8142:78;;;8239:3;8276:32;8304:2;8297:5;8293:14;8276:32;:::i;:::-;8258:16;;;8251:58;8328:3;8378:14;;;8365:28;8347:16;;;8340:54;8413:3;8463:14;;;8450:28;8432:16;;;8425:54;;;;-1:-1:-1;8262:7:19;6908:1606::o;8519:500::-;8577:5;8584:6;8644:3;8631:17;8730:2;8726:7;8715:8;8699:14;8695:29;8691:43;8671:18;8667:68;8657:96;;8749:1;8746;8739:12;8657:96;8777:33;;8881:4;8868:18;;;-1:-1:-1;8829:21:19;;-1:-1:-1;8909:18:19;8898:30;;8895:50;;;8941:1;8938;8931:12;8895:50;8988:6;8972:14;8968:27;8961:5;8957:39;8954:59;;;9009:1;9006;8999:12;8954:59;8519:500;;;;;:::o;9024:266::-;9112:6;9107:3;9100:19;9164:6;9157:5;9150:4;9145:3;9141:14;9128:43;-1:-1:-1;9216:1:19;9191:16;;;9209:4;9187:27;;;9180:38;;;;9272:2;9251:15;;;-1:-1:-1;;9247:29:19;9238:39;;;9234:50;;9024:266::o;9375:2774::-;9648:2;9637:9;9630:21;9611:4;9670:3;9708:6;9695:20;9724:28;9746:5;9724:28;:::i;:::-;9795:13;9788:21;9783:2;9768:18;;9761:49;9859:4;9847:17;;9834:31;9874:33;9834:31;9874:33;:::i;:::-;9973:1;9969;9964:3;9960:11;9956:19;9947:7;9943:33;9938:2;9927:9;9923:18;9916:61;;10039:2;10031:6;10027:15;10014:29;10008:3;9997:9;9993:19;9986:58;10106:2;10098:6;10094:15;10081:29;10075:3;10064:9;10060:19;10053:58;10174:3;10166:6;10162:16;10149:30;10142:4;10131:9;10127:20;10120:60;10223:56;10274:3;10266:6;10262:16;10254:6;10223:56;:::i;:::-;10316:4;10310:3;10299:9;10295:19;10288:33;10341:73;10410:2;10399:9;10395:18;10381:12;10367;10341:73;:::i;:::-;10330:84;;;10461:9;10456:3;10452:19;10445:4;10434:9;10430:20;10423:49;10491:6;10506:45;10547:3;10522:23;10538:6;10522:23;:::i;:::-;1166:13;1159:21;1147:34;;1096:91;10506:45;10582:37;10613:4;10605:6;10601:17;10582:37;:::i;:::-;-1:-1:-1;;;;;2781:31:19;10672:4;10663:14;;2769:44;10709:35;10740:2;10728:15;;10709:35;:::i;:::-;-1:-1:-1;;;;;2781:31:19;;10797:2;10788:12;;2769:44;10753:48;10856:2;10848:6;10844:15;10831:29;10826:2;10821:3;10817:12;10810:51;10917:3;10909:6;10905:16;10892:30;10886:3;10881;10877:13;10870:53;10979:3;10971:6;10967:16;10954:30;10948:3;10943;10939:13;10932:53;11016:37;11047:4;11039:6;11035:17;11016:37;:::i;:::-;-1:-1:-1;;;;;2781:31:19;11106:4;11097:14;;2769:44;11143:36;11174:3;11162:16;;11143:36;:::i;:::-;-1:-1:-1;;;;;2781:31:19;11232:3;11223:13;;2769:44;11280:15;;;11267:29;11253:12;;;11246:51;;;;11316:6;11365:15;;;11352:29;11338:12;;;11331:51;11401:6;11450:15;;;11437:29;11423:12;;;11416:51;11486:6;11535:15;;;11522:29;11508:12;;;11501:51;11571:6;;11624:55;11663:15;;;11280;11624:55;:::i;:::-;11709:2;11704;11699:3;11695:12;11688:24;11735:71;11802:2;11797:3;11793:12;11777:14;11761;11735:71;:::i;:::-;11721:85;;;;;11825:6;11862:33;11891:2;11883:6;11879:15;11862:33;:::i;:::-;9362:4;9351:16;11937:12;;;9339:29;11969:6;12018:15;;;12005:29;11991:12;;;11984:51;12054:6;12103:15;;;12090:29;12076:12;;12069:51;;;;-1:-1:-1;12069:51:19;;12137:6;-1:-1:-1;;9375:2774:19:o;12154:367::-;12239:6;12247;12255;12308:2;12296:9;12287:7;12283:23;12279:32;12276:52;;;12324:1;12321;12314:12;12276:52;12356:9;12350:16;12375:28;12397:5;12375:28;:::i;:::-;12467:2;12452:18;;12446:25;12511:2;12496:18;;;12490:25;12422:5;;12446:25;;-1:-1:-1;12490:25:19;12154:367;-1:-1:-1;;;12154:367:19:o;12526:348::-;12728:2;12710:21;;;12767:2;12747:18;;;12740:30;12806:26;12801:2;12786:18;;12779:54;12865:2;12850:18;;12526:348::o;13897:127::-;13958:10;13953:3;13949:20;13946:1;13939:31;13989:4;13986:1;13979:15;14013:4;14010:1;14003:15;14029:128;14096:9;;;14117:11;;;14114:37;;;14131:18;;:::i;14512:355::-;14714:2;14696:21;;;14753:2;14733:18;;;14726:30;14792:33;14787:2;14772:18;;14765:61;14858:2;14843:18;;14512:355::o;15228:127::-;15289:10;15284:3;15280:20;15277:1;15270:31;15320:4;15317:1;15310:15;15344:4;15341:1;15334:15;15360:408;15562:2;15544:21;;;15601:2;15581:18;;;15574:30;15640:34;15635:2;15620:18;;15613:62;-1:-1:-1;;;15706:2:19;15691:18;;15684:42;15758:3;15743:19;;15360:408::o;15773:135::-;15812:3;15833:17;;;15830:43;;15853:18;;:::i;:::-;-1:-1:-1;15900:1:19;15889:13;;15773:135::o;15913:443::-;16102:2;16084:21;;;16121:18;;16114:34;;;-1:-1:-1;;;;;;16160:31:19;;16157:51;;;16204:1;16201;16194:12;16157:51;16238:6;16235:1;16231:14;16295:6;16287;16282:2;16271:9;16267:18;16254:48;16323:22;;;;16347:2;16319:31;;15913:443;-1:-1:-1;;;15913:443:19:o;16361:125::-;16426:9;;;16447:10;;;16444:36;;;16460:18;;:::i;17617:1191::-;18126:25;;;18194:14;;18187:22;18182:2;18167:18;;18160:50;-1:-1:-1;;;;;18246:32:19;;;18241:2;18226:18;;18219:60;2781:31;;18330:2;18315:18;;2769:44;18113:3;18098:19;;18371:6;18365:3;18354:9;18350:19;18343:35;18415:6;18409:3;18398:9;18394:19;18387:35;18459:6;18453:3;18442:9;18438:19;18431:35;18475:47;18517:3;18506:9;18502:19;18494:6;-1:-1:-1;;;;;2781:31:19;2769:44;;2715:104;18475:47;-1:-1:-1;;;;;2781:31:19;;18573:3;18558:19;;2769:44;18609:3;18594:19;;18587:35;;;;18653:3;18638:19;;18631:36;;;;18698:3;18683:19;;18676:36;;;;18743:3;18728:19;;18721:36;18788:3;18773:19;;;18766:36;17617:1191;;-1:-1:-1;;;;;;;;;17617:1191:19:o;20739:182::-;20796:6;20849:2;20837:9;20828:7;20824:23;20820:32;20817:52;;;20865:1;20862;20855:12;20817:52;20888:27;20905:9;20888:27;:::i;21273:245::-;21340:6;21393:2;21381:9;21372:7;21368:23;21364:32;21361:52;;;21409:1;21406;21399:12;21361:52;21441:9;21435:16;21460:28;21482:5;21460:28;:::i;22583:312::-;22662:6;22670;22723:2;22711:9;22702:7;22698:23;22694:32;22691:52;;;22739:1;22736;22729:12;22691:52;22771:9;22765:16;22790:31;22815:5;22790:31;:::i;:::-;22885:2;22870:18;;;;22864:25;22840:5;;22864:25;;-1:-1:-1;;;22583:312:19:o;23179:168::-;23252:9;;;23283;;23300:15;;;23294:22;;23280:37;23270:71;;23321:18;;:::i;23352:398::-;23554:2;23536:21;;;23593:2;23573:18;;;23566:30;23632:34;23627:2;23612:18;;23605:62;-1:-1:-1;;;23698:2:19;23683:18;;23676:32;23740:3;23725:19;;23352:398::o;23755:251::-;23825:6;23878:2;23866:9;23857:7;23853:23;23849:32;23846:52;;;23894:1;23891;23884:12;23846:52;23926:9;23920:16;23945:31;23970:5;23945:31;:::i;26021:250::-;26106:1;26116:113;26130:6;26127:1;26124:13;26116:113;;;26206:11;;;26200:18;26187:11;;;26180:39;26152:2;26145:10;26116:113;;;-1:-1:-1;;26263:1:19;26245:16;;26238:27;26021:250::o;26276:270::-;26317:3;26355:5;26349:12;26382:6;26377:3;26370:19;26398:76;26467:6;26460:4;26455:3;26451:14;26444:4;26437:5;26433:16;26398:76;:::i;:::-;26528:2;26507:15;-1:-1:-1;;26503:29:19;26494:39;;;;26535:4;26490:50;;26276:270;-1:-1:-1;;26276:270:19:o;26551:288::-;26726:6;26715:9;26708:25;26769:2;26764;26753:9;26749:18;26742:30;26689:4;26789:44;26829:2;26818:9;26814:18;26806:6;26789:44;:::i;26844:290::-;26913:6;26966:2;26954:9;26945:7;26941:23;26937:32;26934:52;;;26982:1;26979;26972:12;26934:52;27008:16;;-1:-1:-1;;;;;;27053:32:19;;27043:43;;27033:71;;27100:1;27097;27090:12;27139:184;27209:6;27262:2;27250:9;27241:7;27237:23;27233:32;27230:52;;;27278:1;27275;27268:12;27230:52;-1:-1:-1;27301:16:19;;27139:184;-1:-1:-1;27139:184:19:o;27328:217::-;27368:1;27394;27384:132;;27438:10;27433:3;27429:20;27426:1;27419:31;27473:4;27470:1;27463:15;27501:4;27498:1;27491:15;27384:132;-1:-1:-1;27530:9:19;;27328:217::o;30170:287::-;30299:3;30337:6;30331:13;30353:66;30412:6;30407:3;30400:4;30392:6;30388:17;30353:66;:::i;:::-;30435:16;;;;;30170:287;-1:-1:-1;;30170:287:19:o;30462:219::-;30611:2;30600:9;30593:21;30574:4;30631:44;30671:2;30660:9;30656:18;30648:6;30631:44;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2389200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH()": "infinite",
								"cancelAllOrdersForSender(uint256)": "28376",
								"cancelMultipleMakerOrders(uint256[])": "infinite",
								"currencyManager()": "2350",
								"executionManager()": "2349",
								"isUserOrderNonceExecutedOrCancelled(address,uint256)": "2727",
								"matchSellerOrders((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "infinite",
								"matchSellerOrdersWETH((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "infinite",
								"matchesBuyerOrder((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "infinite",
								"owner()": "2409",
								"protocolFeeRecipient()": "2349",
								"renounceOwnership()": "infinite",
								"royaltyFeeManager()": "2393",
								"transferOwnership(address)": "infinite",
								"transferSelectorNFT()": "2415",
								"updateCurrencyManager(address)": "27970",
								"updateExecutionManager(address)": "27991",
								"updateProtocolFeeRecipient(address)": "27914",
								"updateRoyaltyFeeManager(address)": "27947",
								"updateTransferSelectorNFT(address)": "28035",
								"userMinOrderNonce(address)": "2603"
							},
							"internal": {
								"_calculateProtocolFee(address,uint256)": "infinite",
								"_transferFeesAndFunds(address,address,uint256,address,address,address,uint256,uint256)": "infinite",
								"_transferFeesAndFundsWithWETH(address,address,uint256,address,uint256,uint256)": "infinite",
								"_transferNonFungibleToken(address,address,address,uint256,uint256)": "infinite",
								"_validateOrder(struct OrderTypes.MakerOrder calldata,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3921,
									"end": 4493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4229,
									"end": 4244,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4309,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4370,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4432,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4432,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4432,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 4420,
									"end": 4432,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4462,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 355,
									"end": 408,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 355,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 402,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 394,
									"end": 406,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 355,
									"end": 408,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 427,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 427,
									"end": 467,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 427,
									"end": 467,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 417,
									"end": 467,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 417,
									"end": 467,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 486,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 486,
									"end": 535,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 486,
									"end": 535,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 476,
									"end": 535,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 476,
									"end": 535,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 544,
									"end": 603,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 667,
									"end": 669,
									"name": "PUSH",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 656,
									"end": 665,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 652,
									"end": 670,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 622,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 622,
									"end": 671,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 622,
									"end": 671,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 612,
									"end": 671,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 612,
									"end": 671,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 724,
									"end": 733,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 720,
									"end": 739,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 690,
									"end": 740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 690,
									"end": 740,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 680,
									"end": 740,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 680,
									"end": 740,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "960"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 995,
									"end": 23309,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b9305666772370e093ee4c8ee6bd159714da096c97bb98d5634b3e049397ec7864736f6c63430008110033",
									".code": [
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "64DF049E"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "AD5C4648"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "AD5C4648"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "C5498769"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "CBD2EC65"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "D4FF41DC"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "F75FF53F"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "64DF049E"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "87E4401F"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "9E53A69A"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "483ABB9F"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "483ABB9F"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "509A1A41"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "5CE052D7"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "5E14F68E"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "63521DEF"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "F747D74"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "1DF47F80"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "31E27E27"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "4266581E"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "45EA7231"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23309,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 205,
											"end": 237,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 205,
											"end": 237,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 205,
											"end": 237,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 187,
											"end": 238,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 187,
											"end": 238,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 175,
											"end": 177,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 22179,
											"end": 22387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 22179,
											"end": 22387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 12455,
											"end": 12681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1371,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1357,
											"end": 1371,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1350,
											"end": 1372,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1332,
											"end": 1373,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1332,
											"end": 1373,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1323,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1192,
											"end": 1379,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2328,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1555,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1530,
											"end": 1555,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1530,
											"end": 1555,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1520,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1521,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1384,
											"end": 1561,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7032,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7032,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 4711,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4711,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 21282,
											"end": 21564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 21282,
											"end": 21564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 9001,
											"end": 10892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 9001,
											"end": 10892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 11688,
											"end": 12161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 11688,
											"end": 12161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 22544,
											"end": 22839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 22544,
											"end": 22839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 11044,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 11044,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 21721,
											"end": 22004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 21721,
											"end": 22004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 22995,
											"end": 23306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 22995,
											"end": 23306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22275,
											"end": 22295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 22275,
											"end": 22319,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22319,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22275,
											"end": 22319,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22275,
											"end": 22319,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22319,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22319,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22275,
											"end": 22319,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 22334,
											"end": 22380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22334,
											"end": 22380,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22334,
											"end": 22380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8CFFB07FAA2874440346743BDC0A86B06C3335CC47DC49B327D10E77B73CEB10"
										},
										{
											"begin": 22334,
											"end": 22380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22334,
											"end": 22380,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22179,
											"end": 22387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12557,
											"end": 12561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12656,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 7266,
											"end": 7285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7292,
											"end": 7311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7300,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 7292,
											"end": 7311,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7311,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 7257,
											"end": 7339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 7412,
											"end": 7426,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7412,
											"end": 7426,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7412,
											"end": 7426,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7412,
											"end": 7426,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7398,
											"end": 7426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7408,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7398,
											"end": 7426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7426,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7390,
											"end": 7455,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7515,
											"end": 7530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7515,
											"end": 7523,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7515,
											"end": 7528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 7515,
											"end": 7530,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 7515,
											"end": 7530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7530,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7540,
											"end": 7573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 7555,
											"end": 7563,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7565,
											"end": 7572,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7540,
											"end": 7554,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 7540,
											"end": 7573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7540,
											"end": 7573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 7540,
											"end": 7573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7596,
											"end": 7617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7596,
											"end": 7617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7668,
											"end": 7685,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D310677D"
										},
										{
											"begin": 7711,
											"end": 7719,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7729,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7654,
											"end": 7730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 7654,
											"end": 7730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 7776,
											"end": 7829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7997,
											"end": 8001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7929,
											"end": 7961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 7929,
											"end": 7978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7962,
											"end": 7977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7929,
											"end": 7978,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 7993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7979,
											"end": 7993,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 7993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 7993,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7929,
											"end": 8001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8037,
											"end": 8306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 8072,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8072,
											"end": 8089,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 8072,
											"end": 8089,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8072,
											"end": 8089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8103,
											"end": 8122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8136,
											"end": 8143,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 8157,
											"end": 8174,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8157,
											"end": 8174,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8157,
											"end": 8174,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8157,
											"end": 8174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8198,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8212,
											"end": 8227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8241,
											"end": 8249,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 8241,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8241,
											"end": 8255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8241,
											"end": 8255,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8277,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8269,
											"end": 8296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8296,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8037,
											"end": 8058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 8037,
											"end": 8306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8037,
											"end": 8306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8037,
											"end": 8306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8379,
											"end": 8398,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8412,
											"end": 8427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8441,
											"end": 8455,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8469,
											"end": 8476,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8496,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 8340,
											"end": 8497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 8340,
											"end": 8497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8641,
											"end": 8658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 8612,
											"end": 8627,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8612,
											"end": 8627,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8627,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8612,
											"end": 8627,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8584,
											"end": 8598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "95FB6205E23FF6BDA16A2D1DBA56B9AD7C783F67C96FA149785052F47696F2BE"
										},
										{
											"begin": 8535,
											"end": 8542,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8556,
											"end": 8570,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 8672,
											"end": 8689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8672,
											"end": 8689,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8672,
											"end": 8689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 8703,
											"end": 8722,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8703,
											"end": 8722,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8703,
											"end": 8722,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 8703,
											"end": 8722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8801,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13250,
											"end": 13252,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13228,
											"end": 13262,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13228,
											"end": 13262,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13228,
											"end": 13262,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13228,
											"end": 13262,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13336,
											"end": 13351,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13336,
											"end": 13351,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13336,
											"end": 13351,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13316,
											"end": 13334,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13316,
											"end": 13334,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13316,
											"end": 13334,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13309,
											"end": 13352,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13388,
											"end": 13403,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13383,
											"end": 13385,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 13368,
											"end": 13386,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13368,
											"end": 13386,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13361,
											"end": 13404,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13435,
											"end": 13438,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 13420,
											"end": 13439,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13420,
											"end": 13439,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13413,
											"end": 13448,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 13413,
											"end": 13448,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13413,
											"end": 13448,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13289,
											"end": 13292,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 13464,
											"end": 13483,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13464,
											"end": 13483,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13457,
											"end": 13492,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 13457,
											"end": 13492,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13457,
											"end": 13492,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8777,
											"end": 8791,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8791,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8791,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 13523,
											"end": 13526,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 13508,
											"end": 13527,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13508,
											"end": 13527,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13501,
											"end": 13536,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13181,
											"end": 13184,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 13166,
											"end": 13185,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7032,
											"end": 8808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4912,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4904,
											"end": 4923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4938,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4930,
											"end": 4949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 4895,
											"end": 4977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5046,
											"end": 5050,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 5025,
											"end": 5050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5025,
											"end": 5042,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5025,
											"end": 5050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5050,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13751,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13731,
											"end": 13752,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13788,
											"end": 13790,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 13768,
											"end": 13786,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13768,
											"end": 13786,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13768,
											"end": 13786,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13761,
											"end": 13791,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "86EAE4E4CADCC6F240DAEAE6E840C4CA40AE8AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13807,
											"end": 13825,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 13807,
											"end": 13825,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13807,
											"end": 13825,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13800,
											"end": 13851,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13868,
											"end": 13886,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 13868,
											"end": 13886,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 13547,
											"end": 13892,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5108,
											"end": 5122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5094,
											"end": 5122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5104,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5094,
											"end": 5122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5122,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5086,
											"end": 5151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5237,
											"end": 5246,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5228,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5220,
											"end": 5234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5234,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5246,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5292,
											"end": 5302,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5316,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 5337,
											"end": 5346,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5334,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5334,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 5320,
											"end": 5346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 5320,
											"end": 5346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5269,
											"end": 5273,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 5262,
											"end": 5291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5291,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5262,
											"end": 5348,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5262,
											"end": 5348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5414,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5387,
											"end": 5401,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5401,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5414,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5440,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5379,
											"end": 5440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5440,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14364,
											"end": 14366,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5379,
											"end": 5440,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14346,
											"end": 14367,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14403,
											"end": 14405,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14376,
											"end": 14406,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9AE6CE5CECC2D8EACA40D2E640E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14415,
											"end": 14466,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14483,
											"end": 14501,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 14483,
											"end": 14501,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 14162,
											"end": 14507,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5490,
											"end": 5494,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D0E30DB0"
										},
										{
											"begin": 5512,
											"end": 5521,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 5596,
											"end": 5604,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5596,
											"end": 5609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5596,
											"end": 5609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 5596,
											"end": 5611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5611,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 5636,
											"end": 5644,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5646,
											"end": 5653,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5621,
											"end": 5654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 5621,
											"end": 5654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5706,
											"end": 5727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5706,
											"end": 5727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5778,
											"end": 5795,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5764,
											"end": 5820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D310677D"
										},
										{
											"begin": 5821,
											"end": 5829,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5839,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 5764,
											"end": 5840,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5764,
											"end": 5840,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5875,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 5851,
											"end": 5904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6004,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6004,
											"end": 6053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6037,
											"end": 6052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6004,
											"end": 6053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6054,
											"end": 6068,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6068,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6004,
											"end": 6076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 6155,
											"end": 6172,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6155,
											"end": 6172,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 6155,
											"end": 6172,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6155,
											"end": 6172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 6186,
											"end": 6205,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6186,
											"end": 6205,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6186,
											"end": 6205,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6186,
											"end": 6205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6240,
											"end": 6255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6240,
											"end": 6255,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6255,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6240,
											"end": 6255,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6277,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6269,
											"end": 6283,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6283,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6305,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 6297,
											"end": 6324,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6324,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 6112,
											"end": 6334,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21376,
											"end": 21406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21376,
											"end": 21406,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 21368,
											"end": 21442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 21368,
											"end": 21442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21452,
											"end": 21467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 21452,
											"end": 21506,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21452,
											"end": 21506,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21452,
											"end": 21506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21452,
											"end": 21506,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21452,
											"end": 21506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21452,
											"end": 21506,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21452,
											"end": 21506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21452,
											"end": 21506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 21452,
											"end": 21506,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21452,
											"end": 21506,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21452,
											"end": 21506,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21521,
											"end": 21557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21521,
											"end": 21557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21521,
											"end": 21557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B4F5DB40DF3ACED29E88A4BABBC3B46E305E07D34098525D18B1497056E63838"
										},
										{
											"begin": 21521,
											"end": 21557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21521,
											"end": 21557,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21282,
											"end": 21564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9289,
											"end": 9308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9289,
											"end": 9297,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 9289,
											"end": 9308,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9288,
											"end": 9308,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9287,
											"end": 9334,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9287,
											"end": 9334,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9287,
											"end": 9334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 9287,
											"end": 9334,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9314,
											"end": 9333,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9314,
											"end": 9322,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 9314,
											"end": 9333,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 9279,
											"end": 9361,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 9434,
											"end": 9448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9434,
											"end": 9448,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9434,
											"end": 9448,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 9434,
											"end": 9448,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9420,
											"end": 9448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9430,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9420,
											"end": 9448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9448,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 9412,
											"end": 9477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9521,
											"end": 9536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9554,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 9539,
											"end": 9552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 9539,
											"end": 9547,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 9539,
											"end": 9552,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9554,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 9539,
											"end": 9554,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9521,
											"end": 9554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9521,
											"end": 9554,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9606,
											"end": 9639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 9621,
											"end": 9629,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9631,
											"end": 9638,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9606,
											"end": 9620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 9606,
											"end": 9639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9606,
											"end": 9639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 9606,
											"end": 9639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9715,
											"end": 9736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 9787,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9787,
											"end": 9804,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 9787,
											"end": 9804,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 9787,
											"end": 9804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9773,
											"end": 9828,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2A75FFEE"
										},
										{
											"begin": 9829,
											"end": 9837,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9839,
											"end": 9847,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 9773,
											"end": 9848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9773,
											"end": 9848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 9773,
											"end": 9848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9867,
											"end": 9883,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 9859,
											"end": 9912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10080,
											"end": 10084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10012,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 10012,
											"end": 10061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10045,
											"end": 10060,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10012,
											"end": 10061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10062,
											"end": 10076,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10076,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10012,
											"end": 10084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 10119,
											"end": 10272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10119,
											"end": 10272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10158,
											"end": 10177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10201,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 10215,
											"end": 10230,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10215,
											"end": 10230,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10215,
											"end": 10230,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10215,
											"end": 10230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10119,
											"end": 10272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10119,
											"end": 10272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10308,
											"end": 10581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10343,
											"end": 10360,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10343,
											"end": 10360,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 10343,
											"end": 10360,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10343,
											"end": 10360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10374,
											"end": 10393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10407,
											"end": 10414,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 10428,
											"end": 10445,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10428,
											"end": 10445,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10428,
											"end": 10445,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10428,
											"end": 10445,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10459,
											"end": 10474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10488,
											"end": 10502,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10516,
											"end": 10524,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10516,
											"end": 10530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10516,
											"end": 10530,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10516,
											"end": 10530,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10544,
											"end": 10552,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10544,
											"end": 10571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10544,
											"end": 10571,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10544,
											"end": 10571,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10308,
											"end": 10329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 10308,
											"end": 10581,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10308,
											"end": 10581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10308,
											"end": 10581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10725,
											"end": 10742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 10696,
											"end": 10711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10696,
											"end": 10711,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10696,
											"end": 10711,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10696,
											"end": 10711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10668,
											"end": 10682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "68CD251D4D267C6E2034FF0088B990352B97B2002C0476587D0C4DA889C11330"
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10640,
											"end": 10654,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 10756,
											"end": 10773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10756,
											"end": 10773,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10756,
											"end": 10773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11780,
											"end": 11800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15074,
											"end": 15076,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15056,
											"end": 15077,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15113,
											"end": 15115,
											"name": "PUSH",
											"source": 19,
											"value": "1B"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15086,
											"end": 15116,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15152,
											"end": 15181,
											"name": "PUSH",
											"source": 19,
											"value": "43616E6E6F7420626520656D7074792043616E63656C206C6973740000000000"
										},
										{
											"begin": 15132,
											"end": 15150,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 15132,
											"end": 15150,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15132,
											"end": 15150,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15125,
											"end": 15182,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15199,
											"end": 15217,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 15199,
											"end": 15217,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 14872,
											"end": 15223,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11848,
											"end": 11857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11883,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11946,
											"end": 11956,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11945,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11921,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11921,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11922,
											"end": 11923,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 11912,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11957,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11957,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11904,
											"end": 12006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12063,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12052,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12081,
											"end": 12085,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12081,
											"end": 12085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12074,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12074,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12075,
											"end": 12076,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 12065,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 11885,
											"end": 11888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12132,
											"end": 12142,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH",
											"source": 8,
											"value": "FA0AE5D80FE3763C880A3839FAB0294171A6F730D1F82C4CD5392C6F67B41732"
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 12111,
											"end": 12154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22642,
											"end": 22674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22642,
											"end": 22674,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 22634,
											"end": 22710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 22634,
											"end": 22710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22720,
											"end": 22737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 22720,
											"end": 22777,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22720,
											"end": 22777,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22720,
											"end": 22777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22720,
											"end": 22777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22720,
											"end": 22777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22720,
											"end": 22777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22720,
											"end": 22777,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22720,
											"end": 22777,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 22720,
											"end": 22777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22720,
											"end": 22777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22720,
											"end": 22777,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 22792,
											"end": 22832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22792,
											"end": 22832,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22792,
											"end": 22832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "80E3874461EBBD918AC3E81DA0A92E5E51387D70F337237C9123E48D20E5A508"
										},
										{
											"begin": 22792,
											"end": 22832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22792,
											"end": 22832,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22544,
											"end": 22839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11152,
											"end": 11162,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11151,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11123,
											"end": 11163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11123,
											"end": 11163,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11115,
											"end": 11212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11259,
											"end": 11269,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11258,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11279,
											"name": "PUSH",
											"source": 8,
											"value": "7A120"
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 11241,
											"end": 11279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11230,
											"end": 11238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11230,
											"end": 11279,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16693,
											"end": 16695,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16675,
											"end": 16696,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16732,
											"end": 16734,
											"name": "PUSH",
											"source": 19,
											"value": "1D"
										},
										{
											"begin": 16712,
											"end": 16730,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 16712,
											"end": 16730,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16712,
											"end": 16730,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16705,
											"end": 16735,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16771,
											"end": 16802,
											"name": "PUSH",
											"source": 19,
											"value": "43616E6E6F742063616E63656C20746F6F206D616E79206F7264657273000000"
										},
										{
											"begin": 16751,
											"end": 16769,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 16751,
											"end": 16769,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16751,
											"end": 16769,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16744,
											"end": 16803,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16820,
											"end": 16838,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 16820,
											"end": 16838,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 16491,
											"end": 16844,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11437,
											"end": 11447,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11436,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11459,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "PUSH",
											"source": 8,
											"value": "1E7178D84F0B0825C65795CD62E7972809AD3AAC6917843AAEC596161B2C0A97"
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11451,
											"end": 11459,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1555,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1530,
											"end": 1555,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1520,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1521,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1503,
											"end": 1521,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1384,
											"end": 1561,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21817,
											"end": 21848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21817,
											"end": 21848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 21809,
											"end": 21884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 21809,
											"end": 21884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21894,
											"end": 21944,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21944,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21894,
											"end": 21944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21894,
											"end": 21944,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21944,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21944,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21944,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21894,
											"end": 21944,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21959,
											"end": 21997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21959,
											"end": 21997,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21959,
											"end": 21997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "36E2A376EABC3BC60CB88F29C288F53E36874A95A7F407330AB4F166B0905698"
										},
										{
											"begin": 21959,
											"end": 21997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21959,
											"end": 21997,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21721,
											"end": 22004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17051,
											"end": 17053,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17054,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17090,
											"end": 17092,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17063,
											"end": 17093,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17129,
											"end": 17163,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 17109,
											"end": 17127,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 17109,
											"end": 17127,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17109,
											"end": 17127,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17102,
											"end": 17164,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17180,
											"end": 17198,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 17180,
											"end": 17198,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17180,
											"end": 17198,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17173,
											"end": 17209,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17226,
											"end": 17245,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 17226,
											"end": 17245,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16849,
											"end": 17251,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23097,
											"end": 23131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23097,
											"end": 23131,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 23089,
											"end": 23167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 23089,
											"end": 23167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23177,
											"end": 23196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 23177,
											"end": 23240,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23177,
											"end": 23240,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23177,
											"end": 23240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23177,
											"end": 23240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23177,
											"end": 23240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23177,
											"end": 23240,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23177,
											"end": 23240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23177,
											"end": 23240,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 23177,
											"end": 23240,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23177,
											"end": 23240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23177,
											"end": 23240,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 23255,
											"end": 23299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23255,
											"end": 23299,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23255,
											"end": 23299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "205D78AB41AFE80BD6B6AAA5D7599D5300FF8690DA3AB1302C1B552F7BAF7D8C"
										},
										{
											"begin": 23255,
											"end": 23299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23255,
											"end": 23299,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22995,
											"end": 23306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17458,
											"end": 17460,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17461,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17440,
											"end": 17461,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17440,
											"end": 17461,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17470,
											"end": 17500,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17536,
											"end": 17570,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17509,
											"end": 17571,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17588,
											"end": 17606,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 17588,
											"end": 17606,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17256,
											"end": 17612,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2270,
											"end": 2291,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2270,
											"end": 2291,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "DUP13",
											"source": 17
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "PUSH",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "DUP14",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "PUSH",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "DUP15",
											"source": 17
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "PUSH",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "DUP16",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "DUP15",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SWAP11",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2151,
											"end": 2158,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2158,
											"name": "SWAP15",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SWAP15",
											"source": 17
										},
										{
											"begin": 592,
											"end": 658,
											"name": "PUSH",
											"source": 17,
											"value": "40261ADE532FA1D2C7293DF30AAADB9B3C616FAE525A0B56D3D411C841A85028"
										},
										{
											"begin": 592,
											"end": 658,
											"name": "SWAP15",
											"source": 17
										},
										{
											"begin": 2270,
											"end": 2291,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2270,
											"end": 2291,
											"name": "SWAP14",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "SWAP13",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "SWAP12",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "SWAP11",
											"source": 17
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "SWAP10",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 2208,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "tag",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2170,
											"end": 2769,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2170,
											"end": 2769,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19013,
											"end": 21126,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 19013,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19271,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 19272,
											"end": 19283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19285,
											"end": 19295,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 19285,
											"end": 19295,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19285,
											"end": 19295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19285,
											"end": 19295,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19238,
											"end": 19296,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19328,
											"end": 19345,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 19346,
											"end": 19357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19324,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 19314,
											"end": 19324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19324,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19358,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19358,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19015,
											"end": 19017,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18997,
											"end": 19018,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19054,
											"end": 19056,
											"name": "PUSH",
											"source": 19,
											"value": "1D"
										},
										{
											"begin": 19034,
											"end": 19052,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 19034,
											"end": 19052,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19034,
											"end": 19052,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19027,
											"end": 19057,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19093,
											"end": 19124,
											"name": "PUSH",
											"source": 19,
											"value": "4F726465723A204D61746368696E67206F726465722065787069726564000000"
										},
										{
											"begin": 19073,
											"end": 19091,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 19073,
											"end": 19091,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19073,
											"end": 19091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19066,
											"end": 19125,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19142,
											"end": 19160,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 19142,
											"end": 19160,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 18813,
											"end": 19166,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19497,
											"end": 19498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 19474,
											"end": 19485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19474,
											"end": 19499,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19499,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19373,
											"end": 19375,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19355,
											"end": 19376,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19412,
											"end": 19414,
											"name": "PUSH",
											"source": 19,
											"value": "2B"
										},
										{
											"begin": 19392,
											"end": 19410,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 19392,
											"end": 19410,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19392,
											"end": 19410,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19385,
											"end": 19415,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19451,
											"end": 19485,
											"name": "PUSH",
											"source": 19,
											"value": "546865204F72646572207369676E65722063616E6E6F7420626520746865207A"
										},
										{
											"begin": 19431,
											"end": 19449,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 19431,
											"end": 19449,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19431,
											"end": 19449,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19424,
											"end": 19486,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19502,
											"end": 19520,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 19502,
											"end": 19520,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19502,
											"end": 19520,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19495,
											"end": 19536,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19553,
											"end": 19572,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 19553,
											"end": 19572,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 19171,
											"end": 19578,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19611,
											"end": 19615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19611,
											"end": 19622,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 19611,
											"end": 19622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19611,
											"end": 19622,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 19611,
											"end": 19626,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19785,
											"end": 19787,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19767,
											"end": 19788,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19824,
											"end": 19826,
											"name": "PUSH",
											"source": 19,
											"value": "29"
										},
										{
											"begin": 19804,
											"end": 19822,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 19804,
											"end": 19822,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19804,
											"end": 19822,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19797,
											"end": 19827,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19863,
											"end": 19897,
											"name": "PUSH",
											"source": 19,
											"value": "546865206F7264657220616D6F756E742073686F756C64206265206772656174"
										},
										{
											"begin": 19843,
											"end": 19861,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 19843,
											"end": 19861,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19843,
											"end": 19861,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19836,
											"end": 19898,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6572207468616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19914,
											"end": 19932,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 19914,
											"end": 19932,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19914,
											"end": 19932,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19907,
											"end": 19946,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19963,
											"end": 19982,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 19963,
											"end": 19982,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 19583,
											"end": 19988,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19751,
											"end": 19817,
											"name": "PUSH",
											"source": 8,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20504,
											"end": 20529,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19946,
											"end": 20012,
											"name": "PUSH",
											"source": 8,
											"value": "2E3445393F211D11D7F88D325BC26CE78976B4DECD39029FEB202D9B409FC3C5"
										},
										{
											"begin": 20545,
											"end": 20563,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20545,
											"end": 20563,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20545,
											"end": 20563,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20538,
											"end": 20572,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20538,
											"end": 20572,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20538,
											"end": 20572,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20538,
											"end": 20572,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20072,
											"end": 20138,
											"name": "PUSH",
											"source": 8,
											"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
										},
										{
											"begin": 20588,
											"end": 20606,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 20588,
											"end": 20606,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20588,
											"end": 20606,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20581,
											"end": 20615,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20211,
											"end": 20224,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 20631,
											"end": 20649,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 20631,
											"end": 20649,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20631,
											"end": 20649,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20624,
											"end": 20658,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20250,
											"end": 20254,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 20674,
											"end": 20693,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 20674,
											"end": 20693,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20674,
											"end": 20693,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20667,
											"end": 20728,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19683,
											"end": 19697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19683,
											"end": 19697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20476,
											"end": 20495,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 20476,
											"end": 20495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19723,
											"end": 20269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19700,
											"end": 20279,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19700,
											"end": 20279,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19700,
											"end": 20279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19700,
											"end": 20279,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19700,
											"end": 20279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19700,
											"end": 20279,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19683,
											"end": 20279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19683,
											"end": 20279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20484,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 20538,
											"end": 20542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20571,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 20567,
											"end": 20578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 20567,
											"end": 20578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "PUSH",
											"source": 8,
											"value": "1C0"
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "PUSH",
											"source": 8,
											"value": "1A0"
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 20614,
											"end": 20620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 20614,
											"end": 20620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20682,
											"end": 20686,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20682,
											"end": 20688,
											"name": "PUSH",
											"source": 8,
											"value": "1C0"
										},
										{
											"begin": 20682,
											"end": 20688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20682,
											"end": 20688,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 20706,
											"end": 20710,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 20706,
											"end": 20712,
											"name": "PUSH",
											"source": 8,
											"value": "1E0"
										},
										{
											"begin": 20706,
											"end": 20712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20706,
											"end": 20712,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 20730,
											"end": 20736,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20484,
											"end": 20520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 20484,
											"end": 20750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20484,
											"end": 20750,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 20484,
											"end": 20750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21128,
											"end": 21130,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21131,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21167,
											"end": 21169,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 21147,
											"end": 21165,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 21147,
											"end": 21165,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21147,
											"end": 21165,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21140,
											"end": 21170,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DA59DB985D1D5C994E88125B9D985B1A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21186,
											"end": 21204,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 21186,
											"end": 21204,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21186,
											"end": 21204,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21179,
											"end": 21227,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21244,
											"end": 21262,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 21244,
											"end": 21262,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 20926,
											"end": 21268,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 20463,
											"end": 20794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20871,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 20856,
											"end": 20871,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20856,
											"end": 20871,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20893,
											"name": "PUSH",
											"source": 8,
											"value": "43B938C5"
										},
										{
											"begin": 20894,
											"end": 20907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 20856,
											"end": 20871,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 20894,
											"end": 20907,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20894,
											"end": 20907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20894,
											"end": 20907,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 20894,
											"end": 20907,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 20894,
											"end": 20907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20894,
											"end": 20907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 20894,
											"end": 20907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20894,
											"end": 20907,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 20894,
											"end": 20907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 205,
											"end": 237,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 205,
											"end": 237,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 205,
											"end": 237,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 187,
											"end": 238,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 160,
											"end": 178,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 160,
											"end": 178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 20856,
											"end": 20908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 20856,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21725,
											"end": 21727,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21707,
											"end": 21728,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21764,
											"end": 21766,
											"name": "PUSH",
											"source": 19,
											"value": "1A"
										},
										{
											"begin": 21744,
											"end": 21762,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 21744,
											"end": 21762,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21744,
											"end": 21762,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21737,
											"end": 21767,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21803,
											"end": 21831,
											"name": "PUSH",
											"source": 19,
											"value": "204E6F7420696E2043757272656E63792077686974656C697374000000000000"
										},
										{
											"begin": 21783,
											"end": 21801,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 21783,
											"end": 21801,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21783,
											"end": 21801,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21776,
											"end": 21832,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21849,
											"end": 21867,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 21849,
											"end": 21867,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 21523,
											"end": 21873,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21051,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21035,
											"end": 21051,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21035,
											"end": 21051,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21073,
											"name": "PUSH",
											"source": 8,
											"value": "999BA27C"
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 21074,
											"end": 21087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 21074,
											"end": 21087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 205,
											"end": 237,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 205,
											"end": 237,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 205,
											"end": 237,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 187,
											"end": 238,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 160,
											"end": 178,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 160,
											"end": 178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 21035,
											"end": 21088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 21035,
											"end": 21088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22080,
											"end": 22082,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22062,
											"end": 22083,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22119,
											"end": 22121,
											"name": "PUSH",
											"source": 19,
											"value": "1A"
										},
										{
											"begin": 22099,
											"end": 22117,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 22099,
											"end": 22117,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22099,
											"end": 22117,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22092,
											"end": 22122,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22158,
											"end": 22186,
											"name": "PUSH",
											"source": 19,
											"value": "204E6F7420696E2053747261746567792077686974656C697374000000000000"
										},
										{
											"begin": 22138,
											"end": 22156,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 22138,
											"end": 22156,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22138,
											"end": 22156,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22131,
											"end": 22187,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 21878,
											"end": 22228,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 21027,
											"end": 21119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19102,
											"end": 21126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19013,
											"end": 21126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19013,
											"end": 21126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19013,
											"end": 21126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13619,
											"end": 13625,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13591,
											"end": 13616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13714,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 13736,
											"end": 13744,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 13619,
											"end": 13625,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13714,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 13714,
											"end": 13753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13714,
											"end": 13753,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 13714,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14042,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 14022,
											"end": 14042,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14022,
											"end": 14042,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14021,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14021,
											"end": 14085,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14062,
											"end": 14084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14062,
											"end": 14084,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14062,
											"end": 14084,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14021,
											"end": 14085,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14021,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14161,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 14141,
											"end": 14161,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 14101,
											"end": 14181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14135,
											"end": 14139,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14135,
											"end": 14139,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14161,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14163,
											"end": 14180,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 14101,
											"end": 14181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14181,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 14101,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 14216,
											"end": 14233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 14195,
											"end": 14233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A7B1AFD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22453,
											"end": 22485,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 22453,
											"end": 22485,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22453,
											"end": 22485,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22435,
											"end": 22486,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22502,
											"end": 22520,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 22502,
											"end": 22520,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22502,
											"end": 22520,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22495,
											"end": 22529,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 22495,
											"end": 22529,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22495,
											"end": 22529,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22545,
											"end": 22563,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 22545,
											"end": 22563,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22545,
											"end": 22563,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22538,
											"end": 22572,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 22538,
											"end": 22572,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22538,
											"end": 22572,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14294,
											"end": 14321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14294,
											"end": 14321,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14294,
											"end": 14321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14294,
											"end": 14321,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14412,
											"name": "PUSH",
											"source": 8,
											"value": "F4F635FA"
										},
										{
											"begin": 14351,
											"end": 14412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22408,
											"end": 22426,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 22408,
											"end": 22426,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 14351,
											"end": 14441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14293,
											"end": 14441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14293,
											"end": 14441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14293,
											"end": 14441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14536,
											"end": 14598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 14536,
											"end": 14598,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14576,
											"end": 14597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14576,
											"end": 14597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14576,
											"end": 14597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14536,
											"end": 14598,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 14536,
											"end": 14598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14614,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14614,
											"end": 14647,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 14614,
											"end": 14647,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14648,
											"end": 14652,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14654,
											"end": 14673,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14675,
											"end": 14691,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14614,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 14614,
											"end": 14692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14614,
											"end": 14692,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 14614,
											"end": 14692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 14727,
											"end": 14743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 14706,
											"end": 14743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14799,
											"end": 14818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14797,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 14778,
											"end": 14788,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH",
											"source": 8,
											"value": "27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D"
										},
										{
											"begin": 14820,
											"end": 14828,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 14830,
											"end": 14846,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23074,
											"end": 23125,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23074,
											"end": 23125,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23156,
											"end": 23158,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23141,
											"end": 23159,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23141,
											"end": 23159,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23134,
											"end": 23168,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23062,
											"end": 23064,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 23047,
											"end": 23065,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23047,
											"end": 23065,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22900,
											"end": 23174,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 15002,
											"end": 15008,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 14999,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 14981,
											"end": 15008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15008,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 14981,
											"end": 15008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14950,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 14950,
											"end": 14967,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14970,
											"end": 14975,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 14950,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 14950,
											"end": 14975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14950,
											"end": 14975,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 14950,
											"end": 14975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14949,
											"end": 15009,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14949,
											"end": 15009,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 14941,
											"end": 15048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15095,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15095,
											"end": 15128,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 15095,
											"end": 15128,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15129,
											"end": 15133,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15135,
											"end": 15137,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15139,
											"end": 15156,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 15095,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 15095,
											"end": 15157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15095,
											"end": 15157,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 15095,
											"end": 15157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC159493"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 205,
											"end": 237,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 205,
											"end": 237,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 205,
											"end": 237,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 187,
											"end": 238,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17949,
											"end": 17964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17949,
											"end": 17964,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18015,
											"name": "PUSH",
											"source": 8,
											"value": "CC159493"
										},
										{
											"begin": 17967,
											"end": 18015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 160,
											"end": 178,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 160,
											"end": 178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 17967,
											"end": 18027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17949,
											"end": 18027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18088,
											"end": 18109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18088,
											"end": 18109,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24213,
											"end": 24215,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24195,
											"end": 24216,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24252,
											"end": 24254,
											"name": "PUSH",
											"source": 19,
											"value": "1C"
										},
										{
											"begin": 24232,
											"end": 24250,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 24232,
											"end": 24250,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24232,
											"end": 24250,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24225,
											"end": 24255,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24291,
											"end": 24321,
											"name": "PUSH",
											"source": 19,
											"value": "43616E277420666F756E74207472616E73666572206D616E6167657200000000"
										},
										{
											"begin": 24271,
											"end": 24289,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 24271,
											"end": 24289,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24271,
											"end": 24289,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24264,
											"end": 24322,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24339,
											"end": 24357,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 24339,
											"end": 24357,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 24011,
											"end": 24363,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33F2FA9F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24683,
											"end": 24698,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 24683,
											"end": 24698,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24683,
											"end": 24698,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24665,
											"end": 24699,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24735,
											"end": 24750,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 24735,
											"end": 24750,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24735,
											"end": 24750,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 24715,
											"end": 24733,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 24715,
											"end": 24733,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24715,
											"end": 24733,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24708,
											"end": 24751,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24787,
											"end": 24802,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24787,
											"end": 24802,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24787,
											"end": 24802,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 24767,
											"end": 24785,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 24767,
											"end": 24785,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24767,
											"end": 24785,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24760,
											"end": 24803,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24819,
											"end": 24837,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 24819,
											"end": 24837,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24819,
											"end": 24837,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24812,
											"end": 24846,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 24812,
											"end": 24846,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24812,
											"end": 24846,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24862,
											"end": 24881,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 24862,
											"end": 24881,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24862,
											"end": 24881,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24855,
											"end": 24890,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24855,
											"end": 24890,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24855,
											"end": 24890,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "PUSH",
											"source": 8,
											"value": "33F2FA9F"
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24599,
											"end": 24618,
											"name": "PUSH",
											"source": 19,
											"value": "A4"
										},
										{
											"begin": 24599,
											"end": 24618,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17886,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25159,
											"end": 25174,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 25159,
											"end": 25174,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25159,
											"end": 25174,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 25141,
											"end": 25175,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25211,
											"end": 25226,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25211,
											"end": 25226,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 25191,
											"end": 25209,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 25191,
											"end": 25209,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25191,
											"end": 25209,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25184,
											"end": 25227,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25243,
											"end": 25261,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 25243,
											"end": 25261,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25243,
											"end": 25261,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25236,
											"end": 25270,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25236,
											"end": 25270,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25236,
											"end": 25270,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 25076,
											"end": 25094,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 25076,
											"end": 25094,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 1112,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15615,
											"end": 17410,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 15615,
											"end": 17410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 15909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15875,
											"end": 15900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15998,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 16020,
											"end": 16028,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 15909,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15998,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 15998,
											"end": 16037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15998,
											"end": 16037,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 15998,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15970,
											"end": 16037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15970,
											"end": 16037,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16306,
											"end": 16370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 16306,
											"end": 16370,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16347,
											"end": 16369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16347,
											"end": 16369,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16347,
											"end": 16369,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16306,
											"end": 16370,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 16306,
											"end": 16370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16412,
											"end": 16432,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 16412,
											"end": 16432,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 16386,
											"end": 16452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16393,
											"end": 16397,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 16386,
											"end": 16411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16411,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16412,
											"end": 16432,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16451,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 16386,
											"end": 16452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16452,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 16386,
											"end": 16452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16487,
											"end": 16504,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 16466,
											"end": 16504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A7B1AFD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22453,
											"end": 22485,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 22453,
											"end": 22485,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22453,
											"end": 22485,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22435,
											"end": 22486,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22502,
											"end": 22520,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 22502,
											"end": 22520,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22502,
											"end": 22520,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22495,
											"end": 22529,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 22495,
											"end": 22529,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22495,
											"end": 22529,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22545,
											"end": 22563,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 22545,
											"end": 22563,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22545,
											"end": 22563,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22538,
											"end": 22572,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 22538,
											"end": 22572,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22538,
											"end": 22572,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16562,
											"end": 16589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16562,
											"end": 16589,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16562,
											"end": 16589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16562,
											"end": 16589,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16680,
											"name": "PUSH",
											"source": 8,
											"value": "F4F635FA"
										},
										{
											"begin": 16619,
											"end": 16680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22408,
											"end": 22426,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 22408,
											"end": 22426,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 16619,
											"end": 16709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16561,
											"end": 16709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16561,
											"end": 16709,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16561,
											"end": 16709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16804,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 16804,
											"end": 16866,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16844,
											"end": 16865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16844,
											"end": 16865,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16844,
											"end": 16865,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16804,
											"end": 16866,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 16804,
											"end": 16866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16882,
											"end": 16946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 16882,
											"end": 16907,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16929,
											"end": 16945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16882,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 16882,
											"end": 16946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16882,
											"end": 16946,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 16882,
											"end": 16946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 16981,
											"end": 16997,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 16960,
											"end": 16997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17053,
											"end": 17072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17044,
											"end": 17051,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 17032,
											"end": 17042,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH",
											"source": 8,
											"value": "27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D"
										},
										{
											"begin": 17082,
											"end": 17086,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 17089,
											"end": 17105,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23074,
											"end": 23125,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23074,
											"end": 23125,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23156,
											"end": 23158,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23141,
											"end": 23159,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23141,
											"end": 23159,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23134,
											"end": 23168,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23062,
											"end": 23064,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 23047,
											"end": 23065,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23047,
											"end": 23065,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22900,
											"end": 23174,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 17262,
											"end": 17268,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17259,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 17241,
											"end": 17268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17268,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 17241,
											"end": 17268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 17210,
											"end": 17227,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17230,
											"end": 17235,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 17210,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17209,
											"end": 17269,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17209,
											"end": 17269,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 17201,
											"end": 17308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17354,
											"end": 17402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17361,
											"end": 17365,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 17354,
											"end": 17379,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17380,
											"end": 17382,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 17384,
											"end": 17401,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17354,
											"end": 17379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 17354,
											"end": 17402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "tag",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25539,
											"end": 25566,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25582,
											"end": 25593,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 25582,
											"end": 25593,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25582,
											"end": 25593,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25575,
											"end": 25602,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25575,
											"end": 25602,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25575,
											"end": 25602,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25618,
											"end": 25630,
											"name": "PUSH",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 25618,
											"end": 25630,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25618,
											"end": 25630,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25611,
											"end": 25639,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 25611,
											"end": 25639,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25611,
											"end": 25639,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25655,
											"end": 25667,
											"name": "PUSH",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 25655,
											"end": 25667,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2097,
											"end": 2176,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2097,
											"end": 2176,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "tag",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25859,
											"end": 25878,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 25859,
											"end": 25878,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25859,
											"end": 25878,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25894,
											"end": 25906,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 25894,
											"end": 25906,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25894,
											"end": 25906,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25887,
											"end": 25915,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25887,
											"end": 25915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25887,
											"end": 25915,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25971,
											"end": 25974,
											"name": "PUSH",
											"source": 19,
											"value": "F8"
										},
										{
											"begin": 25949,
											"end": 25965,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 25949,
											"end": 25965,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25949,
											"end": 25965,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25945,
											"end": 25981,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 25931,
											"end": 25943,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 25931,
											"end": 25943,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25931,
											"end": 25943,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25924,
											"end": 25982,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 25998,
											"end": 26010,
											"name": "PUSH",
											"source": 19,
											"value": "61"
										},
										{
											"begin": 25998,
											"end": 26010,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25998,
											"end": 26010,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B135D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "PUSH",
											"source": 18,
											"value": "1626BA7E"
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "460"
										},
										{
											"begin": 2411,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "tag",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "462"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "tag",
											"source": 18,
											"value": "462"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 2411,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "tag",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2493,
											"name": "PUSH",
											"source": 18,
											"value": "1626BA7E"
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "tag",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2626,
											"end": 2632,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 2598,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "tag",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2591,
											"end": 2632,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2591,
											"end": 2632,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2591,
											"end": 2632,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "tag",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18551,
											"end": 18781,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 18551,
											"end": 18781,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18642,
											"end": 18649,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18661,
											"end": 18680,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18697,
											"end": 18708,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18683,
											"end": 18725,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18725,
											"name": "PUSH",
											"source": 8,
											"value": "9DD1CDA6"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 18683,
											"end": 18727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18661,
											"end": 18727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18769,
											"end": 18774,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 18745,
											"end": 18765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 18759,
											"end": 18765,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18661,
											"end": 18727,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 18745,
											"end": 18765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18765,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 18745,
											"end": 18765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 18744,
											"end": 18774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18737,
											"end": 18774,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 18551,
											"end": 18781,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18551,
											"end": 18781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 27752,
											"end": 27754,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27734,
											"end": 27755,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27791,
											"end": 27793,
											"name": "PUSH",
											"source": 19,
											"value": "2A"
										},
										{
											"begin": 27771,
											"end": 27789,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 27771,
											"end": 27789,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27771,
											"end": 27789,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27764,
											"end": 27794,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27830,
											"end": 27864,
											"name": "PUSH",
											"source": 19,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 27810,
											"end": 27828,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 27810,
											"end": 27828,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27810,
											"end": 27828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27803,
											"end": 27865,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27881,
											"end": 27899,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 27881,
											"end": 27899,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27881,
											"end": 27899,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27874,
											"end": 27914,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27931,
											"end": 27950,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 27931,
											"end": 27950,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 27550,
											"end": 27956,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23092,
											"end": 23124,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 23074,
											"end": 23125,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23141,
											"end": 23159,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 23141,
											"end": 23159,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23141,
											"end": 23159,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23134,
											"end": 23168,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23134,
											"end": 23168,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23134,
											"end": 23168,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 895,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23047,
											"end": 23065,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 23047,
											"end": 23065,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 22900,
											"end": 23174,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 688,
											"end": 1459,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 688,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 811,
											"end": 818,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH",
											"source": 18,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 1069,
											"end": 1149,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1069,
											"end": 1149,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1069,
											"end": 1149,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 28163,
											"end": 28165,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28145,
											"end": 28166,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28202,
											"end": 28204,
											"name": "PUSH",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 28182,
											"end": 28200,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 28182,
											"end": 28200,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28182,
											"end": 28200,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28175,
											"end": 28205,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1024B73B30B634B21039903830B930B6B2BA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28221,
											"end": 28239,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 28221,
											"end": 28239,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28221,
											"end": 28239,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28214,
											"end": 28264,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28281,
											"end": 28299,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 28281,
											"end": 28299,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 27961,
											"end": 28305,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "tag",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "1B"
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 18,
											"value": "1C"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "tag",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 28512,
											"end": 28514,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28494,
											"end": 28515,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28551,
											"end": 28553,
											"name": "PUSH",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 28531,
											"end": 28549,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 28531,
											"end": 28549,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28531,
											"end": 28549,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28524,
											"end": 28554,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B2103B103830B930B6B2BA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28570,
											"end": 28588,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 28570,
											"end": 28588,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28570,
											"end": 28588,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28563,
											"end": 28612,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28629,
											"end": 28647,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 28629,
											"end": 28647,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 28310,
											"end": 28653,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "tag",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1329,
											"end": 1343,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 28885,
											"end": 28910,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 28885,
											"end": 28910,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 28885,
											"end": 28910,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28958,
											"end": 28962,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 28946,
											"end": 28963,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 28946,
											"end": 28963,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 28926,
											"end": 28944,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 28926,
											"end": 28944,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28926,
											"end": 28944,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28919,
											"end": 28964,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 28919,
											"end": 28964,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 28919,
											"end": 28964,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 28919,
											"end": 28964,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28980,
											"end": 28998,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 28980,
											"end": 28998,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 28980,
											"end": 28998,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28973,
											"end": 29007,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 28973,
											"end": 29007,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 28973,
											"end": 29007,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29023,
											"end": 29041,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 29023,
											"end": 29041,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 29023,
											"end": 29041,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29016,
											"end": 29050,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 29016,
											"end": 29050,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 29016,
											"end": 29050,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28857,
											"end": 28876,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 28857,
											"end": 28876,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1408,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1388,
											"end": 1408,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 29263,
											"end": 29265,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 29245,
											"end": 29266,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29302,
											"end": 29304,
											"name": "PUSH",
											"source": 19,
											"value": "F"
										},
										{
											"begin": 29282,
											"end": 29300,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 29282,
											"end": 29300,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29282,
											"end": 29300,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29275,
											"end": 29305,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1024B73B30B634B21039B4B3B732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29321,
											"end": 29339,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 29321,
											"end": 29339,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29321,
											"end": 29339,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29314,
											"end": 29359,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29376,
											"end": 29394,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 29376,
											"end": 29394,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 29061,
											"end": 29400,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "tag",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1446,
											"end": 1452,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1459,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 688,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 4025,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 29607,
											"end": 29609,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 29589,
											"end": 29610,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29646,
											"end": 29648,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 29626,
											"end": 29644,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 29626,
											"end": 29644,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29626,
											"end": 29644,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29619,
											"end": 29649,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29685,
											"end": 29719,
											"name": "PUSH",
											"source": 19,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 29665,
											"end": 29683,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 29665,
											"end": 29683,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29665,
											"end": 29683,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29658,
											"end": 29720,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29736,
											"end": 29754,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 29736,
											"end": 29754,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29736,
											"end": 29754,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29729,
											"end": 29765,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29782,
											"end": 29801,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 29782,
											"end": 29801,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 29405,
											"end": 29807,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 30014,
											"end": 30016,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 29996,
											"end": 30017,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30053,
											"end": 30055,
											"name": "PUSH",
											"source": 19,
											"value": "1D"
										},
										{
											"begin": 30033,
											"end": 30051,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 30033,
											"end": 30051,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 30033,
											"end": 30051,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30026,
											"end": 30056,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30092,
											"end": 30123,
											"name": "PUSH",
											"source": 19,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 30072,
											"end": 30090,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 30072,
											"end": 30090,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 30072,
											"end": 30090,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30065,
											"end": 30124,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30141,
											"end": 30159,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 30141,
											"end": 30159,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 29812,
											"end": 30165,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 5341,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 5389,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 8252,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 249,
											"end": 380,
											"name": "tag",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 249,
											"end": 380,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 324,
											"end": 355,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 324,
											"end": 355,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 314,
											"end": 356,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 314,
											"end": 356,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 304,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 304,
											"end": 374,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 370,
											"end": 371,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 360,
											"end": 372,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 385,
											"end": 519,
											"name": "tag",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 385,
											"end": 519,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 453,
											"end": 473,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 453,
											"end": 473,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 453,
											"end": 473,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 482,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 482,
											"end": 513,
											"name": "tag",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 385,
											"end": 519,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 385,
											"end": 519,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 385,
											"end": 519,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 385,
											"end": 519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 524,
											"end": 771,
											"name": "tag",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 524,
											"end": 771,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 583,
											"end": 589,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 638,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 633,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 615,
											"end": 622,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 611,
											"end": 634,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 607,
											"end": 639,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 604,
											"end": 656,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 604,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 604,
											"end": 656,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 652,
											"end": 653,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 650,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 642,
											"end": 654,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 604,
											"end": 656,
											"name": "tag",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 604,
											"end": 656,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 691,
											"end": 700,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 678,
											"end": 701,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 735,
											"end": 740,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 710,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 710,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 776,
											"end": 1091,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 776,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 844,
											"end": 850,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 858,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 905,
											"end": 907,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 884,
											"end": 891,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 880,
											"end": 903,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 873,
											"end": 925,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 873,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 873,
											"end": 925,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 921,
											"end": 922,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 919,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 911,
											"end": 923,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 873,
											"end": 925,
											"name": "tag",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 873,
											"end": 925,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 960,
											"end": 969,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 947,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 979,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "tag",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1029,
											"end": 1034,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 1081,
											"end": 1083,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1084,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1066,
											"end": 1084,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1066,
											"end": 1084,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1066,
											"end": 1084,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 776,
											"end": 1091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1566,
											"end": 2245,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 1566,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1734,
											"end": 1741,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1730,
											"end": 1753,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1726,
											"end": 1758,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1761,
											"end": 1773,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "tag",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1883,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1870,
											"end": 1884,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1867,
											"end": 1901,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1867,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 1867,
											"end": 1901,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1897,
											"end": 1898,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1867,
											"end": 1901,
											"name": "tag",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 1867,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1976,
											"end": 1979,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1954,
											"end": 1980,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1951,
											"end": 1997,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1951,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 1951,
											"end": 1997,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1983,
											"end": 1995,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1951,
											"end": 1997,
											"name": "tag",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 1951,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2016,
											"end": 2018,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2016,
											"end": 2018,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2073,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2043,
											"end": 2075,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2043,
											"end": 2075,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2087,
											"end": 2103,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2087,
											"end": 2103,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2087,
											"end": 2103,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2120,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 2084,
											"end": 2120,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2120,
											"name": "tag",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 2084,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2197,
											"end": 2200,
											"name": "PUSH",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2175,
											"end": 2201,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2172,
											"end": 2218,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2172,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 2172,
											"end": 2218,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2204,
											"end": 2216,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2172,
											"end": 2218,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 2172,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2237,
											"end": 2239,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1566,
											"end": 2245,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1566,
											"end": 2245,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1566,
											"end": 2245,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1566,
											"end": 2245,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1566,
											"end": 2245,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1566,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3266,
											"end": 3881,
											"name": "tag",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 3266,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3352,
											"end": 3358,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3366,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3413,
											"end": 3415,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3392,
											"end": 3399,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3388,
											"end": 3411,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3384,
											"end": 3416,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3381,
											"end": 3433,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3381,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "571"
										},
										{
											"begin": 3381,
											"end": 3433,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3427,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3419,
											"end": 3431,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3381,
											"end": 3433,
											"name": "tag",
											"source": 19,
											"value": "571"
										},
										{
											"begin": 3381,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3469,
											"end": 3478,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3456,
											"end": 3479,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3541,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3528,
											"end": 3542,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3555,
											"end": 3556,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "tag",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3593,
											"end": 3599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3578,
											"end": 3600,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3568,
											"end": 3600,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3568,
											"end": 3600,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3638,
											"end": 3645,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3631,
											"end": 3635,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3623,
											"end": 3636,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3619,
											"end": 3646,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3650,
											"end": 3662,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "tag",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3687,
											"end": 3703,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3726,
											"end": 3728,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3718,
											"end": 3724,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3715,
											"end": 3729,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "574"
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3742,
											"end": 3743,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3732,
											"end": 3744,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "tag",
											"source": 19,
											"value": "574"
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3795,
											"end": 3802,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3790,
											"end": 3792,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "PUSH",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 3773,
											"end": 3787,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3769,
											"end": 3771,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3765,
											"end": 3788,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3761,
											"end": 3793,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3758,
											"end": 3803,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3755,
											"end": 3820,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3755,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 3755,
											"end": 3820,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3816,
											"end": 3817,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3755,
											"end": 3820,
											"name": "tag",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 3755,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3839,
											"end": 3850,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3839,
											"end": 3850,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3839,
											"end": 3850,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3839,
											"end": 3850,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3839,
											"end": 3850,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 3869,
											"end": 3875,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3869,
											"end": 3875,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3266,
											"end": 3881,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3266,
											"end": 3881,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3266,
											"end": 3881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3886,
											"end": 4066,
											"name": "tag",
											"source": 19,
											"value": "108"
										},
										{
											"begin": 3886,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3977,
											"end": 3984,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3966,
											"end": 4018,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3966,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 3966,
											"end": 4018,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4012,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3966,
											"end": 4018,
											"name": "tag",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 3966,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4037,
											"end": 4060,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4037,
											"end": 4060,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3886,
											"end": 4066,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3886,
											"end": 4066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4071,
											"end": 4426,
											"name": "tag",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 4071,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4276,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4255,
											"end": 4276,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4255,
											"end": 4276,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4285,
											"end": 4315,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4351,
											"end": 4384,
											"name": "PUSH",
											"source": 19,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4331,
											"end": 4349,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4331,
											"end": 4349,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4324,
											"end": 4385,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4071,
											"end": 4426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "tag",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4517,
											"end": 4522,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4510,
											"end": 4523,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4496,
											"end": 4501,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4493,
											"end": 4525,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4483,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 4483,
											"end": 4543,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4537,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4529,
											"end": 4541,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4554,
											"end": 4682,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 4554,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4619,
											"end": 4639,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4619,
											"end": 4639,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4648,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 4619,
											"end": 4639,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4648,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 4648,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4687,
											"end": 4928,
											"name": "tag",
											"source": 19,
											"value": "133"
										},
										{
											"begin": 4687,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4798,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4784,
											"end": 4793,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4775,
											"end": 4782,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4771,
											"end": 4794,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4767,
											"end": 4799,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4812,
											"end": 4813,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4810,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "tag",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 4764,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4851,
											"end": 4860,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4838,
											"end": 4861,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4870,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 4892,
											"end": 4897,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4870,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 4870,
											"end": 4898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4933,
											"end": 5279,
											"name": "tag",
											"source": 19,
											"value": "138"
										},
										{
											"begin": 4933,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5117,
											"end": 5138,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5117,
											"end": 5138,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5117,
											"end": 5138,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5174,
											"end": 5176,
											"name": "PUSH",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5147,
											"end": 5177,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4572726F722041626F7574204F726465722053696465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5208,
											"end": 5210,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5193,
											"end": 5211,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5193,
											"end": 5211,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5186,
											"end": 5238,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5270,
											"end": 5272,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5255,
											"end": 5273,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5255,
											"end": 5273,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4933,
											"end": 5279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5284,
											"end": 5632,
											"name": "tag",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 5284,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5486,
											"end": 5488,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5564,
											"end": 5590,
											"name": "PUSH",
											"source": 19,
											"value": "4F72646572206D757374206265207468652073656E6465720000000000000000"
										},
										{
											"begin": 5559,
											"end": 5561,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5537,
											"end": 5591,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5284,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5637,
											"end": 5764,
											"name": "tag",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 5637,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5698,
											"end": 5708,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 5693,
											"end": 5696,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 5689,
											"end": 5709,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 5686,
											"end": 5687,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5710,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5729,
											"end": 5733,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5719,
											"end": 5734,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5753,
											"end": 5757,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5750,
											"end": 5751,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5758,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5769,
											"end": 6019,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 5769,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5836,
											"end": 5838,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5830,
											"end": 5839,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5878,
											"end": 5884,
											"name": "PUSH",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 5866,
											"end": 5885,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5866,
											"end": 5885,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5915,
											"end": 5933,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5900,
											"end": 5934,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5900,
											"end": 5934,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 5936,
											"end": 5958,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5936,
											"end": 5958,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5936,
											"end": 5958,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 5897,
											"end": 5959,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 5894,
											"end": 5982,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5894,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "591"
										},
										{
											"begin": 5894,
											"end": 5982,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "591"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 5962,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "tag",
											"source": 19,
											"value": "591"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5991,
											"end": 6013,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5769,
											"end": 6019,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5769,
											"end": 6019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6742,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 6024,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6066,
											"end": 6071,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6122,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6112,
											"end": 6116,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 6104,
											"end": 6110,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6100,
											"end": 6117,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6096,
											"end": 6123,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6086,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 6086,
											"end": 6141,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6137,
											"end": 6138,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6135,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6086,
											"end": 6141,
											"name": "tag",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 6086,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6173,
											"end": 6179,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6160,
											"end": 6180,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6236,
											"end": 6238,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6232,
											"end": 6234,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6229,
											"end": 6239,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6226,
											"end": 6262,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6226,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 6226,
											"end": 6262,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6242,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 6242,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 6242,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6242,
											"end": 6260,
											"name": "tag",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 6242,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6317,
											"end": 6319,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6285,
											"end": 6287,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6389,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6367,
											"end": 6389,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6367,
											"end": 6389,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6391,
											"end": 6393,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 6363,
											"end": 6394,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6359,
											"end": 6399,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6347,
											"end": 6400,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6347,
											"end": 6400,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6347,
											"end": 6400,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6415,
											"end": 6433,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6415,
											"end": 6433,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6415,
											"end": 6433,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6435,
											"end": 6457,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6435,
											"end": 6457,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6435,
											"end": 6457,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 6409,
											"end": 6481,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6409,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 6409,
											"end": 6481,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6461,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 6461,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 6461,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6461,
											"end": 6479,
											"name": "tag",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 6461,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6501,
											"end": 6511,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6497,
											"end": 6499,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6512,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6536,
											"end": 6538,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6582,
											"end": 6585,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6575,
											"end": 6579,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6572,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6562,
											"end": 6568,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6558,
											"end": 6573,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6554,
											"end": 6580,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6551,
											"end": 6586,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6548,
											"end": 6603,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6548,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 6548,
											"end": 6603,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6599,
											"end": 6600,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6597,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6589,
											"end": 6601,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6548,
											"end": 6603,
											"name": "tag",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 6548,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6663,
											"end": 6665,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6656,
											"end": 6660,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6654,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 6644,
											"end": 6661,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6637,
											"end": 6641,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6612,
											"end": 6666,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 6710,
											"end": 6711,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6703,
											"end": 6707,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6698,
											"end": 6700,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6690,
											"end": 6696,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6686,
											"end": 6701,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6682,
											"end": 6708,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6675,
											"end": 6712,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6730,
											"end": 6736,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6721,
											"end": 6736,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 6721,
											"end": 6736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6721,
											"end": 6736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6721,
											"end": 6736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6721,
											"end": 6736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6721,
											"end": 6736,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6742,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6742,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6813,
											"end": 6833,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6813,
											"end": 6833,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 6862,
											"end": 6878,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6862,
											"end": 6878,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6852,
											"end": 6879,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6852,
											"end": 6879,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 6842,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 6842,
											"end": 6897,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6893,
											"end": 6894,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6891,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6883,
											"end": 6895,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6908,
											"end": 8514,
											"name": "tag",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 6908,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7016,
											"end": 7025,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7081,
											"name": "PUSH",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 7067,
											"end": 7072,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7051,
											"end": 7065,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 7047,
											"end": 7073,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7043,
											"end": 7082,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7040,
											"end": 7099,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7040,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 7040,
											"end": 7099,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7095,
											"end": 7096,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7085,
											"end": 7097,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7040,
											"end": 7099,
											"name": "tag",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 7040,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7123,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 7123,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 7123,
											"end": 7140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7123,
											"end": 7140,
											"name": "tag",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 7123,
											"end": 7140,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7165,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 7181,
											"end": 7186,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7165,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 7165,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7165,
											"end": 7187,
											"name": "tag",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 7165,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7156,
											"end": 7163,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7149,
											"end": 7188,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7222,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 7252,
											"end": 7254,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7245,
											"end": 7250,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7241,
											"end": 7255,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7222,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 7222,
											"end": 7256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7222,
											"end": 7256,
											"name": "tag",
											"source": 19,
											"value": "605"
										},
										{
											"begin": 7222,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7217,
											"end": 7219,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7215,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7204,
											"end": 7220,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7197,
											"end": 7257,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7291,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 7321,
											"end": 7323,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7314,
											"end": 7319,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7310,
											"end": 7324,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7291,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 7291,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7291,
											"end": 7325,
											"name": "tag",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 7291,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7284,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7273,
											"end": 7289,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7266,
											"end": 7326,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7384,
											"end": 7386,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 7377,
											"end": 7382,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7373,
											"end": 7387,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7360,
											"end": 7388,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7355,
											"end": 7357,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 7346,
											"end": 7353,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7342,
											"end": 7358,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7335,
											"end": 7389,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7448,
											"end": 7451,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 7441,
											"end": 7446,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7437,
											"end": 7452,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7424,
											"end": 7453,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7418,
											"end": 7421,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 7409,
											"end": 7416,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7405,
											"end": 7422,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7398,
											"end": 7454,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 7506,
											"end": 7511,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7502,
											"end": 7517,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7489,
											"end": 7518,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7483,
											"end": 7486,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 7474,
											"end": 7481,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7463,
											"end": 7519,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7554,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 7584,
											"end": 7587,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 7577,
											"end": 7582,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7573,
											"end": 7588,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7554,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 7554,
											"end": 7589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7554,
											"end": 7589,
											"name": "tag",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 7554,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7548,
											"end": 7551,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 7539,
											"end": 7546,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7535,
											"end": 7552,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7625,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 7655,
											"end": 7658,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 7648,
											"end": 7653,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7644,
											"end": 7659,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7625,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 7625,
											"end": 7660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7625,
											"end": 7660,
											"name": "tag",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 7625,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7619,
											"end": 7622,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 7606,
											"end": 7623,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7606,
											"end": 7623,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7599,
											"end": 7661,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7680,
											"end": 7683,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 7730,
											"end": 7744,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7730,
											"end": 7744,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7730,
											"end": 7744,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7717,
											"end": 7745,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7692,
											"end": 7746,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7765,
											"end": 7768,
											"name": "PUSH",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 7815,
											"end": 7829,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7815,
											"end": 7829,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7815,
											"end": 7829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7802,
											"end": 7830,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7784,
											"end": 7800,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7784,
											"end": 7800,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7784,
											"end": 7800,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7777,
											"end": 7831,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "PUSH",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 7900,
											"end": 7914,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7900,
											"end": 7914,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7900,
											"end": 7914,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7887,
											"end": 7915,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7869,
											"end": 7885,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7869,
											"end": 7885,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7869,
											"end": 7885,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7862,
											"end": 7916,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7935,
											"end": 7938,
											"name": "PUSH",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7972,
											"end": 8000,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7954,
											"end": 7970,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7954,
											"end": 7970,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7954,
											"end": 7970,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7947,
											"end": 8001,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8020,
											"end": 8023,
											"name": "PUSH",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 8059,
											"end": 8073,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8059,
											"end": 8073,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8059,
											"end": 8073,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8046,
											"end": 8074,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8097,
											"end": 8115,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8086,
											"end": 8116,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8086,
											"end": 8116,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8083,
											"end": 8133,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8083,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 8083,
											"end": 8133,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8129,
											"end": 8130,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8119,
											"end": 8131,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8083,
											"end": 8133,
											"name": "tag",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 8083,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8167,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 8204,
											"end": 8218,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 8195,
											"end": 8201,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8188,
											"end": 8193,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 8184,
											"end": 8202,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8167,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 8167,
											"end": 8219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8167,
											"end": 8219,
											"name": "tag",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 8167,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8162,
											"end": 8164,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8153,
											"end": 8160,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8149,
											"end": 8165,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8142,
											"end": 8220,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8142,
											"end": 8220,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8142,
											"end": 8220,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "PUSH",
											"source": 19,
											"value": "1A0"
										},
										{
											"begin": 8276,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 8304,
											"end": 8306,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8297,
											"end": 8302,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8293,
											"end": 8307,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8276,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 8276,
											"end": 8308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8276,
											"end": 8308,
											"name": "tag",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 8276,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8258,
											"end": 8274,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8258,
											"end": 8274,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8258,
											"end": 8274,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8251,
											"end": 8309,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8328,
											"end": 8331,
											"name": "PUSH",
											"source": 19,
											"value": "1C0"
										},
										{
											"begin": 8378,
											"end": 8392,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8378,
											"end": 8392,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8378,
											"end": 8392,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8365,
											"end": 8393,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8347,
											"end": 8363,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8347,
											"end": 8363,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8347,
											"end": 8363,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8340,
											"end": 8394,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8413,
											"end": 8416,
											"name": "PUSH",
											"source": 19,
											"value": "1E0"
										},
										{
											"begin": 8463,
											"end": 8477,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8463,
											"end": 8477,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8463,
											"end": 8477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8450,
											"end": 8478,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8432,
											"end": 8448,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8432,
											"end": 8448,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8432,
											"end": 8448,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8425,
											"end": 8479,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8425,
											"end": 8479,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8425,
											"end": 8479,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8425,
											"end": 8479,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8262,
											"end": 8269,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6908,
											"end": 8514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8519,
											"end": 9019,
											"name": "tag",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 8519,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8577,
											"end": 8582,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8590,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8644,
											"end": 8647,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8631,
											"end": 8648,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 19,
											"value": "1E"
										},
										{
											"begin": 8726,
											"end": 8733,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 8715,
											"end": 8723,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8699,
											"end": 8713,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8691,
											"end": 8734,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8671,
											"end": 8689,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8667,
											"end": 8735,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8657,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 8657,
											"end": 8753,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8749,
											"end": 8750,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8739,
											"end": 8751,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8657,
											"end": 8753,
											"name": "tag",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 8657,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8777,
											"end": 8810,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8777,
											"end": 8810,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8829,
											"end": 8850,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8829,
											"end": 8850,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8909,
											"end": 8927,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8928,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8898,
											"end": 8928,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8895,
											"end": 8945,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8895,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 8895,
											"end": 8945,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8941,
											"end": 8942,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8938,
											"end": 8939,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8895,
											"end": 8945,
											"name": "tag",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 8895,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8988,
											"end": 8994,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8972,
											"end": 8986,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 8968,
											"end": 8995,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8961,
											"end": 8966,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8957,
											"end": 8996,
											"name": "SGT",
											"source": 19
										},
										{
											"begin": 8954,
											"end": 9013,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8954,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 8954,
											"end": 9013,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9007,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8999,
											"end": 9011,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8954,
											"end": 9013,
											"name": "tag",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 8954,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8519,
											"end": 9019,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8519,
											"end": 9019,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8519,
											"end": 9019,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8519,
											"end": 9019,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8519,
											"end": 9019,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8519,
											"end": 9019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9024,
											"end": 9290,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 9024,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9107,
											"end": 9110,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9100,
											"end": 9119,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9164,
											"end": 9170,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9157,
											"end": 9162,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9150,
											"end": 9154,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9145,
											"end": 9148,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9141,
											"end": 9155,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9128,
											"end": 9171,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9216,
											"end": 9217,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9207,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9191,
											"end": 9207,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9191,
											"end": 9207,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9209,
											"end": 9213,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9187,
											"end": 9214,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9187,
											"end": 9214,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9187,
											"end": 9214,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9180,
											"end": 9218,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9180,
											"end": 9218,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9180,
											"end": 9218,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9180,
											"end": 9218,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9272,
											"end": 9274,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 9251,
											"end": 9266,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9251,
											"end": 9266,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9251,
											"end": 9266,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9247,
											"end": 9276,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9238,
											"end": 9277,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9238,
											"end": 9277,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9238,
											"end": 9277,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9234,
											"end": 9284,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9234,
											"end": 9284,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9024,
											"end": 9290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9375,
											"end": 12149,
											"name": "tag",
											"source": 19,
											"value": "151"
										},
										{
											"begin": 9375,
											"end": 12149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9648,
											"end": 9650,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9637,
											"end": 9646,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9630,
											"end": 9651,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9673,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 9708,
											"end": 9714,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9724,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 9746,
											"end": 9751,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9724,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 9724,
											"end": 9752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9724,
											"end": 9752,
											"name": "tag",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 9724,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9795,
											"end": 9808,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9788,
											"end": 9809,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9783,
											"end": 9785,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9768,
											"end": 9786,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9768,
											"end": 9786,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9761,
											"end": 9810,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9859,
											"end": 9863,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9847,
											"end": 9864,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9847,
											"end": 9864,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9834,
											"end": 9865,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9874,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 9834,
											"end": 9865,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9874,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 9874,
											"end": 9907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9874,
											"end": 9907,
											"name": "tag",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 9874,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9973,
											"end": 9974,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 9969,
											"end": 9970,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9964,
											"end": 9967,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 9960,
											"end": 9971,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 9956,
											"end": 9975,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9947,
											"end": 9954,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9943,
											"end": 9976,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9938,
											"end": 9940,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 9927,
											"end": 9936,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9923,
											"end": 9941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9916,
											"end": 9977,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9916,
											"end": 9977,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10039,
											"end": 10041,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10031,
											"end": 10037,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10027,
											"end": 10042,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10014,
											"end": 10043,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10008,
											"end": 10011,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 9997,
											"end": 10006,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9993,
											"end": 10012,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9986,
											"end": 10044,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10106,
											"end": 10108,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10098,
											"end": 10104,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10094,
											"end": 10109,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10081,
											"end": 10110,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 10064,
											"end": 10073,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10053,
											"end": 10111,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10174,
											"end": 10177,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 10166,
											"end": 10172,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10162,
											"end": 10178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10149,
											"end": 10179,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10142,
											"end": 10146,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 10131,
											"end": 10140,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10127,
											"end": 10147,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10120,
											"end": 10180,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10223,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "621"
										},
										{
											"begin": 10274,
											"end": 10277,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 10266,
											"end": 10272,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10262,
											"end": 10278,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10254,
											"end": 10260,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10223,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 10223,
											"end": 10279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10223,
											"end": 10279,
											"name": "tag",
											"source": 19,
											"value": "621"
										},
										{
											"begin": 10223,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10316,
											"end": 10320,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 10310,
											"end": 10313,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 10299,
											"end": 10308,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10295,
											"end": 10314,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10288,
											"end": 10321,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10341,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 10410,
											"end": 10412,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10399,
											"end": 10408,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10395,
											"end": 10413,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10381,
											"end": 10393,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10367,
											"end": 10379,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10341,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 10341,
											"end": 10414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10341,
											"end": 10414,
											"name": "tag",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 10341,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10330,
											"end": 10414,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10330,
											"end": 10414,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10330,
											"end": 10414,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10461,
											"end": 10470,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10456,
											"end": 10459,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10452,
											"end": 10471,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 10445,
											"end": 10449,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10434,
											"end": 10443,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10430,
											"end": 10450,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10423,
											"end": 10472,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10491,
											"end": 10497,
											"name": "PUSH",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 10506,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 10547,
											"end": 10550,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 10538,
											"end": 10544,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 10522,
											"end": 10545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "tag",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 10522,
											"end": 10545,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1166,
											"end": 1179,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1159,
											"end": 1180,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1147,
											"end": 1181,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1096,
											"end": 1187,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10506,
											"end": 10551,
											"name": "tag",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 10506,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10582,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 10613,
											"end": 10617,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10605,
											"end": 10611,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 10601,
											"end": 10618,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10582,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 10582,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10582,
											"end": 10619,
											"name": "tag",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 10582,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 10672,
											"end": 10676,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10677,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10663,
											"end": 10677,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2813,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10709,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 10740,
											"end": 10742,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10728,
											"end": 10743,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 10728,
											"end": 10743,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10709,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 10709,
											"end": 10744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10709,
											"end": 10744,
											"name": "tag",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 10709,
											"end": 10744,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 10797,
											"end": 10799,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10788,
											"end": 10800,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10788,
											"end": 10800,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2813,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10753,
											"end": 10801,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10856,
											"end": 10858,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10848,
											"end": 10854,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10844,
											"end": 10859,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10831,
											"end": 10860,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10826,
											"end": 10828,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10821,
											"end": 10824,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10817,
											"end": 10829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10810,
											"end": 10861,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10917,
											"end": 10920,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 10909,
											"end": 10915,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10905,
											"end": 10921,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10892,
											"end": 10922,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10886,
											"end": 10889,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 10881,
											"end": 10884,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10877,
											"end": 10890,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10870,
											"end": 10923,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10979,
											"end": 10982,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 10971,
											"end": 10977,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10967,
											"end": 10983,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10954,
											"end": 10984,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10948,
											"end": 10951,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 10943,
											"end": 10946,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10939,
											"end": 10952,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10932,
											"end": 10985,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11016,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "629"
										},
										{
											"begin": 11047,
											"end": 11051,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 11039,
											"end": 11045,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11035,
											"end": 11052,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11016,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 11016,
											"end": 11053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11016,
											"end": 11053,
											"name": "tag",
											"source": 19,
											"value": "629"
										},
										{
											"begin": 11016,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 11106,
											"end": 11110,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 11097,
											"end": 11111,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11097,
											"end": 11111,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2813,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11143,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 11174,
											"end": 11177,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 11162,
											"end": 11178,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11162,
											"end": 11178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11143,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 11143,
											"end": 11179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11143,
											"end": 11179,
											"name": "tag",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 11143,
											"end": 11179,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 11232,
											"end": 11235,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 11223,
											"end": 11236,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11223,
											"end": 11236,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2813,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11280,
											"end": 11295,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11280,
											"end": 11295,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11280,
											"end": 11295,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11267,
											"end": 11296,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11253,
											"end": 11265,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11253,
											"end": 11265,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11253,
											"end": 11265,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11246,
											"end": 11297,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11246,
											"end": 11297,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11246,
											"end": 11297,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11246,
											"end": 11297,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11316,
											"end": 11322,
											"name": "PUSH",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 11365,
											"end": 11380,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11365,
											"end": 11380,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11365,
											"end": 11380,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11352,
											"end": 11381,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11338,
											"end": 11350,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11338,
											"end": 11350,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11338,
											"end": 11350,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11331,
											"end": 11382,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11401,
											"end": 11407,
											"name": "PUSH",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11437,
											"end": 11466,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11423,
											"end": 11435,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11423,
											"end": 11435,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11423,
											"end": 11435,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11416,
											"end": 11467,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11486,
											"end": 11492,
											"name": "PUSH",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 11535,
											"end": 11550,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11535,
											"end": 11550,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11535,
											"end": 11550,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11522,
											"end": 11551,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11508,
											"end": 11520,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11508,
											"end": 11520,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11508,
											"end": 11520,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11501,
											"end": 11552,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11571,
											"end": 11577,
											"name": "PUSH",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 11571,
											"end": 11577,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11624,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 11663,
											"end": 11678,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11663,
											"end": 11678,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11663,
											"end": 11678,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11280,
											"end": 11295,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11624,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 11624,
											"end": 11679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11624,
											"end": 11679,
											"name": "tag",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 11624,
											"end": 11679,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11709,
											"end": 11711,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11704,
											"end": 11706,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11699,
											"end": 11702,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11695,
											"end": 11707,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11688,
											"end": 11712,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11735,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 11802,
											"end": 11804,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11797,
											"end": 11800,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11793,
											"end": 11805,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11777,
											"end": 11791,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11761,
											"end": 11775,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11735,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 11735,
											"end": 11806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11735,
											"end": 11806,
											"name": "tag",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 11735,
											"end": 11806,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11721,
											"end": 11806,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11721,
											"end": 11806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11721,
											"end": 11806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11721,
											"end": 11806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11721,
											"end": 11806,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11825,
											"end": 11831,
											"name": "PUSH",
											"source": 19,
											"value": "1A0"
										},
										{
											"begin": 11862,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 11891,
											"end": 11893,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11883,
											"end": 11889,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11879,
											"end": 11894,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11862,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 11862,
											"end": 11895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11862,
											"end": 11895,
											"name": "tag",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 11862,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9366,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 9351,
											"end": 9367,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 11937,
											"end": 11949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11937,
											"end": 11949,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11937,
											"end": 11949,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9339,
											"end": 9368,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11969,
											"end": 11975,
											"name": "PUSH",
											"source": 19,
											"value": "1C0"
										},
										{
											"begin": 12018,
											"end": 12033,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12018,
											"end": 12033,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12018,
											"end": 12033,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12005,
											"end": 12034,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11991,
											"end": 12003,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11991,
											"end": 12003,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11991,
											"end": 12003,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11984,
											"end": 12035,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12054,
											"end": 12060,
											"name": "PUSH",
											"source": 19,
											"value": "1E0"
										},
										{
											"begin": 12103,
											"end": 12118,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12103,
											"end": 12118,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12103,
											"end": 12118,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12090,
											"end": 12119,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 12076,
											"end": 12088,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12076,
											"end": 12088,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12069,
											"end": 12120,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12069,
											"end": 12120,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12069,
											"end": 12120,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12069,
											"end": 12120,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12069,
											"end": 12120,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12069,
											"end": 12120,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12137,
											"end": 12143,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9375,
											"end": 12149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12154,
											"end": 12521,
											"name": "tag",
											"source": 19,
											"value": "155"
										},
										{
											"begin": 12154,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12239,
											"end": 12245,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12247,
											"end": 12253,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12255,
											"end": 12261,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12308,
											"end": 12310,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 12296,
											"end": 12305,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12287,
											"end": 12294,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12283,
											"end": 12306,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12279,
											"end": 12311,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12276,
											"end": 12328,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12276,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 12276,
											"end": 12328,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12324,
											"end": 12325,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12321,
											"end": 12322,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12314,
											"end": 12326,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 12276,
											"end": 12328,
											"name": "tag",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 12276,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12356,
											"end": 12365,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12350,
											"end": 12366,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12375,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 12397,
											"end": 12402,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12375,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 12375,
											"end": 12403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12375,
											"end": 12403,
											"name": "tag",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 12375,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12467,
											"end": 12469,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12446,
											"end": 12471,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12511,
											"end": 12513,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12490,
											"end": 12515,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12422,
											"end": 12427,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12422,
											"end": 12427,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 12446,
											"end": 12471,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12446,
											"end": 12471,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12490,
											"end": 12515,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12154,
											"end": 12521,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12154,
											"end": 12521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12526,
											"end": 12874,
											"name": "tag",
											"source": 19,
											"value": "158"
										},
										{
											"begin": 12526,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12728,
											"end": 12730,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12710,
											"end": 12731,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12710,
											"end": 12731,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12710,
											"end": 12731,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12767,
											"end": 12769,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 12747,
											"end": 12765,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12747,
											"end": 12765,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12747,
											"end": 12765,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12740,
											"end": 12770,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12806,
											"end": 12832,
											"name": "PUSH",
											"source": 19,
											"value": "53747261746567792073686F756C642062652076616C69640000000000000000"
										},
										{
											"begin": 12801,
											"end": 12803,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12779,
											"end": 12833,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12865,
											"end": 12867,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12526,
											"end": 12874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13897,
											"end": 14024,
											"name": "tag",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 13897,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13958,
											"end": 13968,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 13953,
											"end": 13956,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 13949,
											"end": 13969,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 13946,
											"end": 13947,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13939,
											"end": 13970,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13989,
											"end": 13993,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 13986,
											"end": 13987,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 13979,
											"end": 13994,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14013,
											"end": 14017,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14010,
											"end": 14011,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14003,
											"end": 14018,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 14029,
											"end": 14157,
											"name": "tag",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 14029,
											"end": 14157,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14096,
											"end": 14105,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14096,
											"end": 14105,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14096,
											"end": 14105,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14117,
											"end": 14128,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14117,
											"end": 14128,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14117,
											"end": 14128,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 14114,
											"end": 14151,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 14114,
											"end": 14151,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 14114,
											"end": 14151,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 14131,
											"end": 14149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14512,
											"end": 14867,
											"name": "tag",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 14512,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14714,
											"end": 14716,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14696,
											"end": 14717,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 14696,
											"end": 14717,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14696,
											"end": 14717,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14753,
											"end": 14755,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14726,
											"end": 14756,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14792,
											"end": 14825,
											"name": "PUSH",
											"source": 19,
											"value": "43616E6E6F742075706461746520746F2061206E756C6C206164647265737300"
										},
										{
											"begin": 14787,
											"end": 14789,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14772,
											"end": 14790,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14772,
											"end": 14790,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14765,
											"end": 14826,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14858,
											"end": 14860,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14512,
											"end": 14867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15228,
											"end": 15355,
											"name": "tag",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 15228,
											"end": 15355,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15289,
											"end": 15299,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 15284,
											"end": 15287,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 15280,
											"end": 15300,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 15277,
											"end": 15278,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15270,
											"end": 15301,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15320,
											"end": 15324,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 15317,
											"end": 15318,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 15310,
											"end": 15325,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15344,
											"end": 15348,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15341,
											"end": 15342,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15334,
											"end": 15349,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 15360,
											"end": 15768,
											"name": "tag",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 15360,
											"end": 15768,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15562,
											"end": 15564,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15544,
											"end": 15565,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 15544,
											"end": 15565,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15544,
											"end": 15565,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15601,
											"end": 15603,
											"name": "PUSH",
											"source": 19,
											"value": "2C"
										},
										{
											"begin": 15581,
											"end": 15599,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15581,
											"end": 15599,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15581,
											"end": 15599,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15574,
											"end": 15604,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15640,
											"end": 15674,
											"name": "PUSH",
											"source": 19,
											"value": "43616E63656C204F72646572206E6F6E63652063616E6E6F74206C6F77657220"
										},
										{
											"begin": 15635,
											"end": 15637,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 15620,
											"end": 15638,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15620,
											"end": 15638,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15613,
											"end": 15675,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1A185B8818DD5C9C995B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15706,
											"end": 15708,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15691,
											"end": 15709,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15684,
											"end": 15726,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15758,
											"end": 15761,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 15743,
											"end": 15762,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15743,
											"end": 15762,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15360,
											"end": 15768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15773,
											"end": 15908,
											"name": "tag",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 15773,
											"end": 15908,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15812,
											"end": 15815,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15833,
											"end": 15850,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 15833,
											"end": 15850,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15833,
											"end": 15850,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15830,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 15830,
											"end": 15873,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15853,
											"end": 15871,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 15853,
											"end": 15871,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 15853,
											"end": 15871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15853,
											"end": 15871,
											"name": "tag",
											"source": 19,
											"value": "654"
										},
										{
											"begin": 15853,
											"end": 15871,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 15901,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 15889,
											"end": 15902,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15889,
											"end": 15902,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15773,
											"end": 15908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15913,
											"end": 16356,
											"name": "tag",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 15913,
											"end": 16356,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16102,
											"end": 16104,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16084,
											"end": 16105,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 16084,
											"end": 16105,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16084,
											"end": 16105,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16121,
											"end": 16139,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16121,
											"end": 16139,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16114,
											"end": 16148,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16114,
											"end": 16148,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16114,
											"end": 16148,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16160,
											"end": 16191,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16160,
											"end": 16191,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 16157,
											"end": 16208,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 16157,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 16157,
											"end": 16208,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 16204,
											"end": 16205,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16201,
											"end": 16202,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 16194,
											"end": 16206,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 16157,
											"end": 16208,
											"name": "tag",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 16157,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16238,
											"end": 16244,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16235,
											"end": 16236,
											"name": "PUSH",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 16231,
											"end": 16245,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 16295,
											"end": 16301,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 16287,
											"end": 16293,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16282,
											"end": 16284,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16271,
											"end": 16280,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16267,
											"end": 16285,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16254,
											"end": 16302,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 16323,
											"end": 16345,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16323,
											"end": 16345,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16323,
											"end": 16345,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16323,
											"end": 16345,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16347,
											"end": 16349,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16319,
											"end": 16350,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16319,
											"end": 16350,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 15913,
											"end": 16356,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15913,
											"end": 16356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16361,
											"end": 16486,
											"name": "tag",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 16361,
											"end": 16486,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16426,
											"end": 16435,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 16426,
											"end": 16435,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16426,
											"end": 16435,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16447,
											"end": 16457,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 16447,
											"end": 16457,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16447,
											"end": 16457,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 16444,
											"end": 16480,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 16444,
											"end": 16480,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 16444,
											"end": 16480,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 16460,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 16460,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 16460,
											"end": 16478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17617,
											"end": 18808,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 17617,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18126,
											"end": 18151,
											"name": "DUP15",
											"source": 19
										},
										{
											"begin": 18126,
											"end": 18151,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18126,
											"end": 18151,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18194,
											"end": 18208,
											"name": "DUP14",
											"source": 19
										},
										{
											"begin": 18194,
											"end": 18208,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18187,
											"end": 18209,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18182,
											"end": 18184,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18167,
											"end": 18185,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18167,
											"end": 18185,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18160,
											"end": 18210,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18246,
											"end": 18278,
											"name": "DUP14",
											"source": 19
										},
										{
											"begin": 18246,
											"end": 18278,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18246,
											"end": 18278,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 18241,
											"end": 18243,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 18226,
											"end": 18244,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18226,
											"end": 18244,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18219,
											"end": 18279,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "DUP13",
											"source": 19
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 18330,
											"end": 18332,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 18315,
											"end": 18333,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18315,
											"end": 18333,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2813,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18113,
											"end": 18116,
											"name": "PUSH",
											"source": 19,
											"value": "1C0"
										},
										{
											"begin": 18098,
											"end": 18117,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18098,
											"end": 18117,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18371,
											"end": 18377,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 18365,
											"end": 18368,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 18354,
											"end": 18363,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18350,
											"end": 18369,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18343,
											"end": 18378,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18415,
											"end": 18421,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 18409,
											"end": 18412,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 18398,
											"end": 18407,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18394,
											"end": 18413,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18387,
											"end": 18422,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18459,
											"end": 18465,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 18453,
											"end": 18456,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 18442,
											"end": 18451,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18438,
											"end": 18457,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18431,
											"end": 18466,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18475,
											"end": 18522,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "665"
										},
										{
											"begin": 18517,
											"end": 18520,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 18506,
											"end": 18515,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18502,
											"end": 18521,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18494,
											"end": 18500,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2813,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2813,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18475,
											"end": 18522,
											"name": "tag",
											"source": 19,
											"value": "665"
										},
										{
											"begin": 18475,
											"end": 18522,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 18573,
											"end": 18576,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 18558,
											"end": 18577,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18558,
											"end": 18577,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2813,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18609,
											"end": 18612,
											"name": "PUSH",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 18594,
											"end": 18613,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18594,
											"end": 18613,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18587,
											"end": 18622,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 18587,
											"end": 18622,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18587,
											"end": 18622,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 18587,
											"end": 18622,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18653,
											"end": 18656,
											"name": "PUSH",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 18638,
											"end": 18657,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18638,
											"end": 18657,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18631,
											"end": 18667,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 18631,
											"end": 18667,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18631,
											"end": 18667,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 18631,
											"end": 18667,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18698,
											"end": 18701,
											"name": "PUSH",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 18683,
											"end": 18702,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18683,
											"end": 18702,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18712,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18712,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18712,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18712,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18743,
											"end": 18746,
											"name": "PUSH",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 18728,
											"end": 18747,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18728,
											"end": 18747,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18721,
											"end": 18757,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18788,
											"end": 18791,
											"name": "PUSH",
											"source": 19,
											"value": "1A0"
										},
										{
											"begin": 18773,
											"end": 18792,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18773,
											"end": 18792,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18773,
											"end": 18792,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18766,
											"end": 18802,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17617,
											"end": 18808,
											"name": "SWAP10",
											"source": 19
										},
										{
											"begin": 17617,
											"end": 18808,
											"name": "SWAP9",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17617,
											"end": 18808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20739,
											"end": 20921,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 20739,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20796,
											"end": 20802,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20849,
											"end": 20851,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20837,
											"end": 20846,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20828,
											"end": 20835,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20824,
											"end": 20847,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 20820,
											"end": 20852,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 20817,
											"end": 20869,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 20817,
											"end": 20869,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "672"
										},
										{
											"begin": 20817,
											"end": 20869,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 20865,
											"end": 20866,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20862,
											"end": 20863,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 20855,
											"end": 20867,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 20817,
											"end": 20869,
											"name": "tag",
											"source": 19,
											"value": "672"
										},
										{
											"begin": 20817,
											"end": 20869,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 20905,
											"end": 20914,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20888,
											"end": 20915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 20888,
											"end": 20915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21273,
											"end": 21518,
											"name": "tag",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 21273,
											"end": 21518,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21340,
											"end": 21346,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21393,
											"end": 21395,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21381,
											"end": 21390,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21372,
											"end": 21379,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21368,
											"end": 21391,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 21364,
											"end": 21396,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 21361,
											"end": 21413,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 21361,
											"end": 21413,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "676"
										},
										{
											"begin": 21361,
											"end": 21413,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 21409,
											"end": 21410,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21406,
											"end": 21407,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 21399,
											"end": 21411,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 21361,
											"end": 21413,
											"name": "tag",
											"source": 19,
											"value": "676"
										},
										{
											"begin": 21361,
											"end": 21413,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21441,
											"end": 21450,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21435,
											"end": 21451,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 21460,
											"end": 21488,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 21482,
											"end": 21487,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21460,
											"end": 21488,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 21460,
											"end": 21488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22583,
											"end": 22895,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 22583,
											"end": 22895,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22662,
											"end": 22668,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22670,
											"end": 22676,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 22723,
											"end": 22725,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 22711,
											"end": 22720,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22702,
											"end": 22709,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 22698,
											"end": 22721,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 22694,
											"end": 22726,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 22691,
											"end": 22743,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 22691,
											"end": 22743,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 22691,
											"end": 22743,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22739,
											"end": 22740,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22736,
											"end": 22737,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 22729,
											"end": 22741,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 22691,
											"end": 22743,
											"name": "tag",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 22691,
											"end": 22743,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22771,
											"end": 22780,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22765,
											"end": 22781,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 22790,
											"end": 22821,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "683"
										},
										{
											"begin": 22815,
											"end": 22820,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22790,
											"end": 22821,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 22790,
											"end": 22821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22790,
											"end": 22821,
											"name": "tag",
											"source": 19,
											"value": "683"
										},
										{
											"begin": 22790,
											"end": 22821,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22885,
											"end": 22887,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22870,
											"end": 22888,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 22870,
											"end": 22888,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22870,
											"end": 22888,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 22870,
											"end": 22888,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22864,
											"end": 22889,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 22840,
											"end": 22845,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22840,
											"end": 22845,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 22864,
											"end": 22889,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22864,
											"end": 22889,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22583,
											"end": 22895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23179,
											"end": 23347,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 23179,
											"end": 23347,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23252,
											"end": 23261,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 23252,
											"end": 23261,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23252,
											"end": 23261,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 23283,
											"end": 23292,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23283,
											"end": 23292,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23300,
											"end": 23315,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23300,
											"end": 23315,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23300,
											"end": 23315,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 23294,
											"end": 23316,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23294,
											"end": 23316,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 23280,
											"end": 23317,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 23270,
											"end": 23341,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 23270,
											"end": 23341,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23321,
											"end": 23339,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 23321,
											"end": 23339,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 23321,
											"end": 23339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23352,
											"end": 23750,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 23352,
											"end": 23750,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23554,
											"end": 23556,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23536,
											"end": 23557,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 23536,
											"end": 23557,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23536,
											"end": 23557,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23593,
											"end": 23595,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 23573,
											"end": 23591,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23573,
											"end": 23591,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23573,
											"end": 23591,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23566,
											"end": 23596,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23632,
											"end": 23666,
											"name": "PUSH",
											"source": 19,
											"value": "5468652066656520697320746F6F206869676820666F72207468652073656C6C"
										},
										{
											"begin": 23627,
											"end": 23629,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 23612,
											"end": 23630,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23612,
											"end": 23630,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23605,
											"end": 23667,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23698,
											"end": 23700,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 23683,
											"end": 23701,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23683,
											"end": 23701,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23676,
											"end": 23708,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23740,
											"end": 23743,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 23725,
											"end": 23744,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23725,
											"end": 23744,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23352,
											"end": 23750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23755,
											"end": 24006,
											"name": "tag",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 23755,
											"end": 24006,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23825,
											"end": 23831,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23878,
											"end": 23880,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23866,
											"end": 23875,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23857,
											"end": 23864,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23853,
											"end": 23876,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 23849,
											"end": 23881,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 23846,
											"end": 23898,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23846,
											"end": 23898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "690"
										},
										{
											"begin": 23846,
											"end": 23898,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23894,
											"end": 23895,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23891,
											"end": 23892,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 23884,
											"end": 23896,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 23846,
											"end": 23898,
											"name": "tag",
											"source": 19,
											"value": "690"
										},
										{
											"begin": 23846,
											"end": 23898,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23926,
											"end": 23935,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23920,
											"end": 23936,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 23945,
											"end": 23976,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 23970,
											"end": 23975,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23945,
											"end": 23976,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 23945,
											"end": 23976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26021,
											"end": 26271,
											"name": "tag",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 26021,
											"end": 26271,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26106,
											"end": 26107,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26116,
											"end": 26229,
											"name": "tag",
											"source": 19,
											"value": "698"
										},
										{
											"begin": 26116,
											"end": 26229,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26130,
											"end": 26136,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 26127,
											"end": 26128,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26124,
											"end": 26137,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 26116,
											"end": 26229,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 26116,
											"end": 26229,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "700"
										},
										{
											"begin": 26116,
											"end": 26229,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 26206,
											"end": 26217,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26206,
											"end": 26217,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26206,
											"end": 26217,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26200,
											"end": 26218,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 26187,
											"end": 26198,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 26187,
											"end": 26198,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26187,
											"end": 26198,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26180,
											"end": 26219,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26152,
											"end": 26154,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26145,
											"end": 26155,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26116,
											"end": 26229,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "698"
										},
										{
											"begin": 26116,
											"end": 26229,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26116,
											"end": 26229,
											"name": "tag",
											"source": 19,
											"value": "700"
										},
										{
											"begin": 26116,
											"end": 26229,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26263,
											"end": 26264,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26245,
											"end": 26261,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26245,
											"end": 26261,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26238,
											"end": 26265,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26021,
											"end": 26271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26276,
											"end": 26546,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 26276,
											"end": 26546,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26317,
											"end": 26320,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26355,
											"end": 26360,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26349,
											"end": 26361,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 26382,
											"end": 26388,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 26377,
											"end": 26380,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26398,
											"end": 26474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "702"
										},
										{
											"begin": 26467,
											"end": 26473,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26460,
											"end": 26464,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26455,
											"end": 26458,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 26451,
											"end": 26465,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26444,
											"end": 26448,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26437,
											"end": 26442,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 26433,
											"end": 26449,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26398,
											"end": 26474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 26398,
											"end": 26474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26398,
											"end": 26474,
											"name": "tag",
											"source": 19,
											"value": "702"
										},
										{
											"begin": 26398,
											"end": 26474,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26528,
											"end": 26530,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 26507,
											"end": 26522,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26503,
											"end": 26532,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 26494,
											"end": 26533,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 26494,
											"end": 26533,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26494,
											"end": 26533,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 26494,
											"end": 26533,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26535,
											"end": 26539,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26490,
											"end": 26540,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26490,
											"end": 26540,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 26276,
											"end": 26546,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26276,
											"end": 26546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26551,
											"end": 26839,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 26551,
											"end": 26839,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26726,
											"end": 26732,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26715,
											"end": 26724,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26708,
											"end": 26733,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26769,
											"end": 26771,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 26764,
											"end": 26766,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26753,
											"end": 26762,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26749,
											"end": 26767,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26742,
											"end": 26772,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26689,
											"end": 26693,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26789,
											"end": 26833,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 26829,
											"end": 26831,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 26818,
											"end": 26827,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 26814,
											"end": 26832,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26806,
											"end": 26812,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26789,
											"end": 26833,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 26789,
											"end": 26833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26844,
											"end": 27134,
											"name": "tag",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 26844,
											"end": 27134,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26913,
											"end": 26919,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26966,
											"end": 26968,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26954,
											"end": 26963,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26945,
											"end": 26952,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 26941,
											"end": 26964,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 26937,
											"end": 26969,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 26934,
											"end": 26986,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 26934,
											"end": 26986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "706"
										},
										{
											"begin": 26934,
											"end": 26986,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 26982,
											"end": 26983,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26979,
											"end": 26980,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 26972,
											"end": 26984,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 26934,
											"end": 26986,
											"name": "tag",
											"source": 19,
											"value": "706"
										},
										{
											"begin": 26934,
											"end": 26986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27008,
											"end": 27024,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27008,
											"end": 27024,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27053,
											"end": 27085,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27053,
											"end": 27085,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 27043,
											"end": 27086,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27043,
											"end": 27086,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 27033,
											"end": 27104,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 27033,
											"end": 27104,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 27100,
											"end": 27101,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27097,
											"end": 27098,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 27090,
											"end": 27102,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 27139,
											"end": 27323,
											"name": "tag",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 27139,
											"end": 27323,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27209,
											"end": 27215,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27262,
											"end": 27264,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27250,
											"end": 27259,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27241,
											"end": 27248,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 27237,
											"end": 27260,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 27233,
											"end": 27265,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 27230,
											"end": 27282,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 27230,
											"end": 27282,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "709"
										},
										{
											"begin": 27230,
											"end": 27282,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 27278,
											"end": 27279,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27275,
											"end": 27276,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 27268,
											"end": 27280,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 27230,
											"end": 27282,
											"name": "tag",
											"source": 19,
											"value": "709"
										},
										{
											"begin": 27230,
											"end": 27282,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27301,
											"end": 27317,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 27301,
											"end": 27317,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 27139,
											"end": 27323,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27139,
											"end": 27323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27328,
											"end": 27545,
											"name": "tag",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 27328,
											"end": 27545,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27368,
											"end": 27369,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27394,
											"end": 27395,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27384,
											"end": 27516,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "711"
										},
										{
											"begin": 27384,
											"end": 27516,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 27438,
											"end": 27448,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 27433,
											"end": 27436,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 27429,
											"end": 27449,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 27426,
											"end": 27427,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27419,
											"end": 27450,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27473,
											"end": 27477,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 27470,
											"end": 27471,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 27463,
											"end": 27478,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27501,
											"end": 27505,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 27498,
											"end": 27499,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27491,
											"end": 27506,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 27384,
											"end": 27516,
											"name": "tag",
											"source": 19,
											"value": "711"
										},
										{
											"begin": 27384,
											"end": 27516,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27530,
											"end": 27539,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 27530,
											"end": 27539,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 27328,
											"end": 27545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 30170,
											"end": 30457,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 30170,
											"end": 30457,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 30299,
											"end": 30302,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 30337,
											"end": 30343,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 30331,
											"end": 30344,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 30353,
											"end": 30419,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "720"
										},
										{
											"begin": 30412,
											"end": 30418,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 30407,
											"end": 30410,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 30400,
											"end": 30404,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 30392,
											"end": 30398,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 30388,
											"end": 30405,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30353,
											"end": 30419,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 30353,
											"end": 30419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 30353,
											"end": 30419,
											"name": "tag",
											"source": 19,
											"value": "720"
										},
										{
											"begin": 30353,
											"end": 30419,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 30435,
											"end": 30451,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 30435,
											"end": 30451,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 30435,
											"end": 30451,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 30435,
											"end": 30451,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30435,
											"end": 30451,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 30170,
											"end": 30457,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30170,
											"end": 30457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 30462,
											"end": 30681,
											"name": "tag",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 30462,
											"end": 30681,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 30611,
											"end": 30613,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 30600,
											"end": 30609,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 30593,
											"end": 30614,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30574,
											"end": 30578,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 30631,
											"end": 30675,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 30671,
											"end": 30673,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 30660,
											"end": 30669,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 30656,
											"end": 30674,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30648,
											"end": 30654,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 30631,
											"end": 30675,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 30631,
											"end": 30675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"cancelAllOrdersForSender(uint256)": "cbd2ec65",
							"cancelMultipleMakerOrders(uint256[])": "9e53a69a",
							"currencyManager()": "0f747d74",
							"executionManager()": "483abb9f",
							"isUserOrderNonceExecutedOrCancelled(address,uint256)": "31e27e27",
							"matchSellerOrders((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "45ea7231",
							"matchSellerOrdersWETH((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "509a1a41",
							"matchesBuyerOrder((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "63521def",
							"owner()": "8da5cb5b",
							"protocolFeeRecipient()": "64df049e",
							"renounceOwnership()": "715018a6",
							"royaltyFeeManager()": "87e4401f",
							"transferOwnership(address)": "f2fde38b",
							"transferSelectorNFT()": "5e14f68e",
							"updateCurrencyManager(address)": "5ce052d7",
							"updateExecutionManager(address)": "d4ff41dc",
							"updateProtocolFeeRecipient(address)": "1df47f80",
							"updateRoyaltyFeeManager(address)": "c5498769",
							"updateTransferSelectorNFT(address)": "f75ff53f",
							"userMinOrderNonce(address)": "4266581e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currencyManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_executionManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinNonce\",\"type\":\"uint256\"}],\"name\":\"CancelAllOrders\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"CancelMultipleOrders\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currencyManager\",\"type\":\"address\"}],\"name\":\"NewCurrencyManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executionManager\",\"type\":\"address\"}],\"name\":\"NewExecutionManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"NewProtocolFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyFeeManager\",\"type\":\"address\"}],\"name\":\"NewRoyaltyFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transferSelectorNFT\",\"type\":\"address\"}],\"name\":\"NewTransferSelectorNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TakerAsk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TakerBid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minNonce\",\"type\":\"uint256\"}],\"name\":\"cancelAllOrdersForSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"NonceList\",\"type\":\"uint256[]\"}],\"name\":\"cancelMultipleMakerOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currencyManager\",\"outputs\":[{\"internalType\":\"contract TheCurrencyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executionManager\",\"outputs\":[{\"internalType\":\"contract TheExManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"}],\"name\":\"isUserOrderNonceExecutedOrCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"matchSellerOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"matchSellerOrdersWETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"matchesBuyerOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeManager\",\"outputs\":[{\"internalType\":\"contract TheRoyaltyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferSelectorNFT\",\"outputs\":[{\"internalType\":\"contract TheTransferSelector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currencyManager\",\"type\":\"address\"}],\"name\":\"updateCurrencyManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_executionManager\",\"type\":\"address\"}],\"name\":\"updateExecutionManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"updateProtocolFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyFeeManager\",\"type\":\"address\"}],\"name\":\"updateRoyaltyFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transferSelectorNFT\",\"type\":\"address\"}],\"name\":\"updateTransferSelectorNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userMinOrderNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/UnemetaMarket.sol\":\"UnemetaMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Manager/UnemetaMarket.sol\":{\"keccak256\":\"0xdbe69b3116ec1c9cd0fb9a1eb2f0f4fb2f2ccf985825271225a4ee3d21a25b55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f7f1bd4e1968b11aae5a4a2a9007a5fe9c9f2f30b13e7ce1de1bdcf8556e45b\",\"dweb:/ipfs/QmaeSH5EhQFMbhDFr2jTxJs3sRTq7FbDtaCd7Yurv6SiNW\"]},\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/Manager/interface/IWETH.sol\":{\"keccak256\":\"0x54b6f68eca905d0b5c70c2c21a1ce3a5451b65e0771280774af4b72330c19f22\",\"license\":\"GNU\",\"urls\":[\"bzz-raw://8143d8187efc92eeefd402e1f14f64cb3891512a3353b2f8e855ec6cae4d1e16\",\"dweb:/ipfs/QmXAD4ZN9GcWfZ3TXhRgeuUFTqAV4kFcgBvsoNe5HwNAK8\"]},\"contracts/Manager/interface/TheCurrencyManager.sol\":{\"keccak256\":\"0x6f05161aa87f4a4c8f10bda2cdab7a3120b13a02a085f48f94d8317bdf0459c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ea4ebb036220ea423c2b939a139f04d1a9f4fa931affc4c0a061118722003e\",\"dweb:/ipfs/QmPKBksf6UfQ4cLik934jnKobDmy72FNFnBmGSDBQwxzcz\"]},\"contracts/Manager/interface/TheExManager.sol\":{\"keccak256\":\"0xf68dcbd29125fed9b86d24ee4a46a90c7311d0e429a9f379336d26c26a05acd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b433798aae0b80257667ca3e4573fd010989623b09b4bbd94fd2fa6885b535bc\",\"dweb:/ipfs/QmPnaMAhD4cs5KUVUAkryxGD9GkwmwGUYSCpN1Fe5xxEqq\"]},\"contracts/Manager/interface/TheRoyaltyFeeManager.sol\":{\"keccak256\":\"0x553adb19658a6f5859886444bc1a2b8483e9ec567bd1ad9aedbfb0ba665e2df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fbd253613d3c5845b3132e281f3edb16705a49a6f8fd8b7f35fa4732796c04e\",\"dweb:/ipfs/QmNpYHvqJgv3fktAUovG8xxP7LTCLHAmTTZfj7M6WZXJBC\"]},\"contracts/Manager/interface/TheTransferManager.sol\":{\"keccak256\":\"0x13b412f89afe677f8e49c4fbddf6ebc0af44607381ab8fb2a2caf79a9b2c6a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab98d5a753bbbab25248b7fba410345a5f44ad4465244d6c1aabcde3aa5f15c\",\"dweb:/ipfs/Qmdwa6oSgGBfbagu1B1FLoYfmQyWQjCp8J7PkDESKfxLu5\"]},\"contracts/Manager/interface/TheUnemetaExchange.sol\":{\"keccak256\":\"0x9bfdc938af467ef4e11d5d35d2d9970abb11a15a962fecf896cc29b1c6f93b2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20d4aa9c93a23e742283999c5851b3f99be4c85cfecab468134819d3565b0400\",\"dweb:/ipfs/QmUDpCKKcqPpnNruQSpPDYB63cKUx69ehzcrTuPcdhjkMi\"]},\"contracts/Manager/trans/interface/TheTransFerSelector.sol\":{\"keccak256\":\"0x4c44c47a857835829df5a06aea7d339301f92d6805f07032db6f3ef63b3da306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3397572d8c7f5844d8102851e780c41f8e5b49be6ed43e6f18716dd2fa7fb21b\",\"dweb:/ipfs/QmaxUjtd7Pg7banAzc6AUqcgXEsumHkkqw6XFYgXx14aHM\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]},\"contracts/libraries/SignatureChecker.sol\":{\"keccak256\":\"0x16a8efc1e23b430bc1c41d678681f0ed6613970f3b5550c52b8bc09f630ed6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2f4bb0e1a4294c03719757f447cde80b1d36ab89bf5aaad448fd0fd626a9aec\",\"dweb:/ipfs/QmVsgF4TXvvBCoiJy8mrXFDfWdD2KqBZiAYJRzqKqfBThf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 137,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 962,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "protocolFeeRecipient",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 965,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "currencyManager",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(TheCurrencyManager)2257"
							},
							{
								"astId": 968,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "executionManager",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(TheExManager)2294"
							},
							{
								"astId": 971,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "royaltyFeeManager",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(TheRoyaltyManager)2310"
							},
							{
								"astId": 974,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "transferSelectorNFT",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(TheTransferSelector)2368"
							},
							{
								"astId": 978,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "userMinOrderNonce",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 984,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "_theUserOrderExecutedOrCancelled",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(TheCurrencyManager)2257": {
								"encoding": "inplace",
								"label": "contract TheCurrencyManager",
								"numberOfBytes": "20"
							},
							"t_contract(TheExManager)2294": {
								"encoding": "inplace",
								"label": "contract TheExManager",
								"numberOfBytes": "20"
							},
							"t_contract(TheRoyaltyManager)2310": {
								"encoding": "inplace",
								"label": "contract TheRoyaltyManager",
								"numberOfBytes": "20"
							},
							"t_contract(TheTransferSelector)2368": {
								"encoding": "inplace",
								"label": "contract TheTransferSelector",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"TheExStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "canExecuteBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "canExecuteSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "2a75ffee",
							"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "d310677d",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"canExecuteBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"canExecuteSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":\"TheExStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/IWETH.sol\":{\"keccak256\":\"0x54b6f68eca905d0b5c70c2c21a1ce3a5451b65e0771280774af4b72330c19f22\",\"license\":\"GNU\",\"urls\":[\"bzz-raw://8143d8187efc92eeefd402e1f14f64cb3891512a3353b2f8e855ec6cae4d1e16\",\"dweb:/ipfs/QmXAD4ZN9GcWfZ3TXhRgeuUFTqAV4kFcgBvsoNe5HwNAK8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheCurrencyManager.sol": {
				"TheCurrencyManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "addCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "isCurrencyWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "removeCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCountWhitelistedCurrencies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cursor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"name": "viewWhitelistedCurrencies",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addCurrency(address)": "8ab234b6",
							"isCurrencyWhitelisted(address)": "43b938c5",
							"removeCurrency(address)": "c5d3a107",
							"viewCountWhitelistedCurrencies()": "1facfd9c",
							"viewWhitelistedCurrencies(uint256,uint256)": "85f39b0a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"isCurrencyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCountWhitelistedCurrencies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"viewWhitelistedCurrencies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheCurrencyManager.sol\":\"TheCurrencyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheCurrencyManager.sol\":{\"keccak256\":\"0x6f05161aa87f4a4c8f10bda2cdab7a3120b13a02a085f48f94d8317bdf0459c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ea4ebb036220ea423c2b939a139f04d1a9f4fa931affc4c0a061118722003e\",\"dweb:/ipfs/QmPKBksf6UfQ4cLik934jnKobDmy72FNFnBmGSDBQwxzcz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheExManager.sol": {
				"TheExManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "addStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "isStrategyWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "removeStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCountWhitelistedStrategies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cursor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"name": "viewWhitelistedStrategies",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStrategy(address)": "223e5479",
							"isStrategyWhitelisted(address)": "999ba27c",
							"removeStrategy(address)": "175188e8",
							"viewCountWhitelistedStrategies()": "985e3a2f",
							"viewWhitelistedStrategies(uint256,uint256)": "31fb5b1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"isStrategyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCountWhitelistedStrategies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"viewWhitelistedStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheExManager.sol\":\"TheExManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheExManager.sol\":{\"keccak256\":\"0xf68dcbd29125fed9b86d24ee4a46a90c7311d0e429a9f379336d26c26a05acd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b433798aae0b80257667ca3e4573fd010989623b09b4bbd94fd2fa6885b535bc\",\"dweb:/ipfs/QmPnaMAhD4cs5KUVUAkryxGD9GkwmwGUYSCpN1Fe5xxEqq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheRoyaltyFeeManager.sol": {
				"TheRoyaltyManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateRoyaltyFeeAndGetRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateRoyaltyFeeAndGetRecipient(address,uint256,uint256)": "f4f635fa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateRoyaltyFeeAndGetRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheRoyaltyFeeManager.sol\":\"TheRoyaltyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheRoyaltyFeeManager.sol\":{\"keccak256\":\"0x553adb19658a6f5859886444bc1a2b8483e9ec567bd1ad9aedbfb0ba665e2df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fbd253613d3c5845b3132e281f3edb16705a49a6f8fd8b7f35fa4732796c04e\",\"dweb:/ipfs/QmNpYHvqJgv3fktAUovG8xxP7LTCLHAmTTZfj7M6WZXJBC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheTransferManager.sol": {
				"TheTransferManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferNonFungibleToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferNonFungibleToken(address,address,address,uint256,uint256)": "33f2fa9f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferNonFungibleToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheTransferManager.sol\":\"TheTransferManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheTransferManager.sol\":{\"keccak256\":\"0x13b412f89afe677f8e49c4fbddf6ebc0af44607381ab8fb2a2caf79a9b2c6a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab98d5a753bbbab25248b7fba410345a5f44ad4465244d6c1aabcde3aa5f15c\",\"dweb:/ipfs/Qmdwa6oSgGBfbagu1B1FLoYfmQyWQjCp8J7PkDESKfxLu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheUnemetaExchange.sol": {
				"TheUnemetaExchange": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "matchSellerOrders",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "matchSellerOrdersWETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "matchesBuyerOrder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"matchSellerOrders((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "45ea7231",
							"matchSellerOrdersWETH((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "509a1a41",
							"matchesBuyerOrder((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "63521def"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"matchSellerOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"matchSellerOrdersWETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"matchesBuyerOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheUnemetaExchange.sol\":\"TheUnemetaExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheUnemetaExchange.sol\":{\"keccak256\":\"0x9bfdc938af467ef4e11d5d35d2d9970abb11a15a962fecf896cc29b1c6f93b2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20d4aa9c93a23e742283999c5851b3f99be4c85cfecab468134819d3565b0400\",\"dweb:/ipfs/QmUDpCKKcqPpnNruQSpPDYB63cKUx69ehzcrTuPcdhjkMi\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/trans/interface/TheTransFerSelector.sol": {
				"TheTransferSelector": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "checkTransferManagerForToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkTransferManagerForToken(address)": "cc159493"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkTransferManagerForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/trans/interface/TheTransFerSelector.sol\":\"TheTransferSelector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/trans/interface/TheTransFerSelector.sol\":{\"keccak256\":\"0x4c44c47a857835829df5a06aea7d339301f92d6805f07032db6f3ef63b3da306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3397572d8c7f5844d8102851e780c41f8e5b49be6ed43e6f18716dd2fa7fb21b\",\"dweb:/ipfs/QmaxUjtd7Pg7banAzc6AUqcgXEsumHkkqw6XFYgXx14aHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/OrderTypes.sol": {
				"OrderTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAE 0xE3 LOG2 STOP SWAP8 INVALID 0xC3 0xD7 0x27 LOG4 0xAC 0x2F 0xAF 0xE0 0x23 0xDD 0xD1 OR PUSH19 0xFBF882AC4BCB4DF06EB4AF1864736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;273:2505:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAE 0xE3 LOG2 STOP SWAP8 INVALID 0xC3 0xD7 0x27 LOG4 0xAC 0x2F 0xAF 0xE0 0x23 0xDD 0xD1 OR PUSH19 0xFBF882AC4BCB4DF06EB4AF1864736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"hash(struct OrderTypes.MakerOrder memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
									".code": [
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/OrderTypes.sol\":\"OrderTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SignatureChecker.sol": {
				"SignatureChecker": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "SignatureChecker",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SignatureChecker.sol\":321:2651  library SignatureChecker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SignatureChecker.sol\":321:2651  library SignatureChecker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9240c398371c07f147457f7580b58c95a5868fe6ae5fa178a02d957b90f4d5064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9240c398371c07f147457f7580b58c95a5868fe6ae5fa178a02d957b90f4d5064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0x24 0xC CODECOPY DUP4 PUSH18 0xC07F147457F7580B58C95A5868FE6AE5FA17 DUP11 MUL 0xD9 JUMPI 0xB9 0xF 0x4D POP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "321:2330:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;321:2330:18;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9240c398371c07f147457f7580b58c95a5868fe6ae5fa178a02d957b90f4d5064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0x24 0xC CODECOPY DUP4 PUSH18 0xC07F147457F7580B58C95A5868FE6AE5FA17 DUP11 MUL 0xD9 JUMPI 0xB9 0xF 0x4D POP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "321:2330:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"verify(bytes32,address,uint8,bytes32,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9240c398371c07f147457f7580b58c95a5868fe6ae5fa178a02d957b90f4d5064736f6c63430008110033",
									".code": [
										{
											"begin": 321,
											"end": 2651,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"SignatureChecker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library allows verification of signatures for both EOAs and contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/libraries/SignatureChecker.sol\":{\"keccak256\":\"0x16a8efc1e23b430bc1c41d678681f0ed6613970f3b5550c52b8bc09f630ed6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2f4bb0e1a4294c03719757f447cde80b1d36ab89bf5aaad448fd0fd626a9aec\",\"dweb:/ipfs/QmVsgF4TXvvBCoiJy8mrXFDfWdD2KqBZiAYJRzqKqfBThf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library allows verification of signatures for both EOAs and contracts.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							878
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 879,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 878,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								878
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
					"exportedSymbols": {
						"IERC1271": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "117:189:1",
								"text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "IERC1271",
							"nameLocation": "317:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "332:220:1",
										"text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
									},
									"functionSelector": "1626ba7e",
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "566:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "591:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "583:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "610:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "597:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "597:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:38:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "651:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "644:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 122,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "644:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:19:1"
									},
									"scope": 126,
									"src": "557:106:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 127,
							"src": "307:358:1",
							"usedErrors": []
						}
					],
					"src": "92:574:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 132,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 130,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 135,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 133,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 134,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 137,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 136,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 166,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 150,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 159,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 165,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 178,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 187,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 244,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 244,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 244,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 244,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 244,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 244,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							280
						]
					},
					"id": 281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 280,
							"linearizedBaseContracts": [
								280
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1471:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1494:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1519:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1542:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1568:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 257,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1585:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1604:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:4"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:4"
									},
									"scope": 280,
									"src": "1446:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1950:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:4"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1988:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:4"
									},
									"scope": 280,
									"src": "1934:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:4"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "2240:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:4"
									},
									"scope": 280,
									"src": "2189:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 281,
							"src": "620:1631:4",
							"usedErrors": []
						}
					],
					"src": "114:2138:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							856
						],
						"IERC20": [
							244
						],
						"IERC20Permit": [
							280
						],
						"SafeERC20": [
							561
						]
					},
					"id": 562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 245,
							"src": "140:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 281,
							"src": "164:46:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 857,
							"src": "211:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 561,
							"linearizedBaseContracts": [
								561
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 289,
									"libraryName": {
										"id": 287,
										"name": "Address",
										"nameLocations": [
											"737:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 856,
										"src": "737:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:5",
									"typeName": {
										"id": 288,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "865:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "895:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 303,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "925:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 211,
																		"src": "925:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 306,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "950:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "954:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 301,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 299,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "875:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "875:86:5"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 290,
														"name": "IERC20",
														"nameLocations": [
															"794:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "794:6:5"
													},
													"referencedDeclaration": 244,
													"src": "794:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "816:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "836:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:5"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:5"
									},
									"scope": 561,
									"src": "763:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1102:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1132:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 328,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "1162:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 243,
																		"src": "1162:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 331,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1191:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 332,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "1197:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "1201:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1112:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:5"
											}
										]
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1009:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "1009:6:5"
													},
													"referencedDeclaration": 244,
													"src": "1009:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1031:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1053:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1073:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:5"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:5"
									},
									"scope": 561,
									"src": "974:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1581:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "1830:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 358,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$561",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$561",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 356,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 360,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 344,
																					"src": "1877:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 354,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "1846:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$244",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "1846:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2001:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 373,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "2031:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "2031:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 376,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "2055:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "2064:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 371,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 369,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1981:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:5"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1505:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "1505:6:5"
													},
													"referencedDeclaration": 244,
													"src": "1505:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1527:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1552:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:5"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:5"
									},
									"scope": 561,
									"src": "1475:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2200:194:5",
										"statements": [
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "2210:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 392,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 398,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$561",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$561",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 400,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "2264:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 394,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "2233:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$244",
																	"typeString": "contract IERC20"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:5",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 221,
															"src": "2233:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 402,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2275:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2310:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 409,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "2340:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "2340:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 412,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "2364:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 413,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "2373:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 407,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 405,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2290:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:5"
											}
										]
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2124:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 383,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "2124:6:5"
													},
													"referencedDeclaration": 244,
													"src": "2124:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2146:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2171:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:5"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:5"
									},
									"scope": 561,
									"src": "2084:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "2516:370:5",
										"statements": [
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:5",
												"statements": [
													{
														"assignments": [
															429
														],
														"declarations": [
															{
																"constant": false,
																"id": 429,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 464,
																"src": "2550:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 438,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 434,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$561",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$561",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 432,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 436,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "2604:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2573:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 221,
																"src": "2573:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "2634:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 441,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2650:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 439,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:5"
													},
													{
														"assignments": [
															447
														],
														"declarations": [
															{
																"constant": false,
																"id": 447,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 464,
																"src": "2715:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 446,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 451,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 448,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2738:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 449,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2753:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 453,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2792:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 456,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 421,
																					"src": "2822:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$244",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 231,
																				"src": "2822:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 459,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2846:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 460,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "2855:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 454,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 452,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "2772:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 463,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:5"
													}
												]
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2440:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 419,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "2440:6:5"
													},
													"referencedDeclaration": 244,
													"src": "2440:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2462:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2487:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:5"
									},
									"scope": 561,
									"src": "2400:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3107:257:5",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "3117:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [
														{
															"id": 490,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3152:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 488,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3139:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3139:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3181:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "3188:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "3197:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 499,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3204:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 500,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3214:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 501,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3217:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 502,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3220:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 265,
														"src": "3168:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:5"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "3232:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 507,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3253:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3253:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "3290:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 514,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3304:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:5"
											}
										]
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2921:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$280",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 467,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 280,
														"src": "2921:12:5"
													},
													"referencedDeclaration": 280,
													"src": "2921:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$280",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2949:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2972:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2997:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3020:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3046:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3063:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 480,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3082:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 482,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:5"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:5"
									},
									"scope": 561,
									"src": "2892:472:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "3817:636:5",
										"statements": [
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "4166:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 531,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4220:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "4200:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 533,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 650,
														"src": "4192:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 542,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "4275:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "4271:176:5",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "4298:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 549,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "4370:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 551,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 550,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 552,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 547,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 546,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 524,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "3776:6:5"
													},
													"referencedDeclaration": 244,
													"src": "3776:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3790:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:5"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:5"
									},
									"scope": 561,
									"src": "3747:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 562,
							"src": "707:3748:5",
							"usedErrors": []
						}
					],
					"src": "115:4341:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							856
						]
					},
					"id": 857,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 564,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1241:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 572,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1465:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 571,
												"id": 577,
												"nodeType": "Return",
												"src": "1458:30:6"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:6"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1235:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:6"
									},
									"scope": 856,
									"src": "1175:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "2483:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 590,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$856",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$856",
																				"typeString": "library Address"
																			}
																		],
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 588,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 593,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "2526:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:6"
											},
											{
												"assignments": [
													599,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "2578:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 598,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 606,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 600,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "2596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 602,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "2618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:6"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2431:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2458:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:6"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:6"
									},
									"scope": 856,
									"src": "2412:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "3555:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "3585:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3593:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 623,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															650
														],
														"referencedDeclaration": 650,
														"src": "3572:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 628,
												"nodeType": "Return",
												"src": "3565:67:6"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3504:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:6"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3541:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:6"
									},
									"scope": 856,
									"src": "3466:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "4008:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "4047:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "4055:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 646,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "4064:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 642,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															670,
															720
														],
														"referencedDeclaration": 720,
														"src": "4025:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 641,
												"id": 648,
												"nodeType": "Return",
												"src": "4018:59:6"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3916:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3943:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:6"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3994:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:6"
									},
									"scope": 856,
									"src": "3861:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "4589:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "4628:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "4636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 665,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "4642:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 662,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															670,
															720
														],
														"referencedDeclaration": 720,
														"src": "4606:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 668,
												"nodeType": "Return",
												"src": "4599:94:6"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4486:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4510:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4537:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:6"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4575:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:6"
									},
									"scope": 856,
									"src": "4446:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "5127:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 687,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$856",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$856",
																				"typeString": "library Address"
																			}
																		],
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 685,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 690,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "5170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 697,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "5247:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 696,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5236:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:6"
											},
											{
												"assignments": [
													703,
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "5300:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 702,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "5314:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 704,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"arguments": [
														{
															"id": 710,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "5367:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 706,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "5341:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 708,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "5360:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "5406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 715,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "5415:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 716,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "5427:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 713,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "5389:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 683,
												"id": 718,
												"nodeType": "Return",
												"src": "5382:58:6"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "4988:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5012:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5039:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5062:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:6"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5113:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:6"
									},
									"scope": 856,
									"src": "4948:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "5724:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "5760:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "5768:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 730,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															737,
															772
														],
														"referencedDeclaration": 772,
														"src": "5741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 729,
												"id": 735,
												"nodeType": "Return",
												"src": "5734:80:6"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5668:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 724,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:6"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5710:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:6"
									},
									"scope": 856,
									"src": "5624:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "6163:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 751,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "6192:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 750,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "6181:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:6"
											},
											{
												"assignments": [
													757,
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "6252:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 756,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "6266:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 758,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"id": 762,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 760,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "6293:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "6350:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 767,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "6359:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 768,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "6371:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 765,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "6333:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 748,
												"id": 770,
												"nodeType": "Return",
												"src": "6326:58:6"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6042:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6066:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6093:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:6"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6149:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:6"
									},
									"scope": 856,
									"src": "6005:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "6667:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 783,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "6705:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "6713:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 782,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															789,
															824
														],
														"referencedDeclaration": 824,
														"src": "6684:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 781,
												"id": 787,
												"nodeType": "Return",
												"src": "6677:84:6"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "6600:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:6"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "6653:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:6"
									},
									"scope": 856,
									"src": "6570:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "7109:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 803,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "7138:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 802,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "7127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:6"
											},
											{
												"assignments": [
													809,
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "7200:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 808,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "7214:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 810,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"arguments": [
														{
															"id": 814,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "7261:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 812,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "7241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 818,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "7300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 819,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "7309:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 820,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "7321:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 817,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "7283:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 800,
												"id": 822,
												"nodeType": "Return",
												"src": "7276:58:6"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6993:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7017:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7044:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 795,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:6"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7095:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:6"
									},
									"scope": 856,
									"src": "6954:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "7721:582:6",
										"statements": [
											{
												"condition": {
													"id": 836,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 827,
													"src": "7735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 852,
													"nodeType": "Block",
													"src": "7792:505:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 840,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "7876:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 850,
																"nodeType": "Block",
																"src": "8234:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 847,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 831,
																					"src": "8259:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 846,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 849,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:6"
																	}
																]
															},
															"id": 851,
															"nodeType": "IfStatement",
															"src": "7872:415:6",
															"trueBody": {
																"id": 845,
																"nodeType": "Block",
																"src": "7899:329:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:6"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 829,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 829,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 844,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 853,
												"nodeType": "IfStatement",
												"src": "7731:566:6",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "7744:42:6",
													"statements": [
														{
															"expression": {
																"id": 837,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "7765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 835,
															"id": 838,
															"nodeType": "Return",
															"src": "7758:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7596:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7618:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 830,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7707:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:6"
									},
									"scope": 856,
									"src": "7561:742:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 857,
							"src": "194:8111:6",
							"usedErrors": []
						}
					],
					"src": "101:8205:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							878
						]
					},
					"id": 879,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 858,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 859,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 878,
							"linearizedBaseContracts": [
								878
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 864,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 863,
												"id": 866,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 878,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 873,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 872,
												"id": 875,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 878,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 879,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"contracts/Manager/UnemetaMarket.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/UnemetaMarket.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						],
						"IWETH": [
							2220
						],
						"OrderTypes": [
							2464
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeERC20": [
							561
						],
						"SignatureChecker": [
							2588
						],
						"TheCurrencyManager": [
							2257
						],
						"TheExManager": [
							2294
						],
						"TheExStrategy": [
							2200
						],
						"TheRoyaltyManager": [
							2310
						],
						"TheTransferManager": [
							2326
						],
						"TheTransferSelector": [
							2368
						],
						"TheUnemetaExchange": [
							2358
						],
						"UnemetaMarket": [
							2160
						]
					},
					"id": 2161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 880,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 882,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 113,
							"src": "58:67:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 881,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "66:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 884,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 167,
							"src": "126:85:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 883,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 166,
										"src": "134:15:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 562,
							"src": "212:90:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 885,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 244,
										"src": "220:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 886,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "228:9:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheCurrencyManager.sol",
							"file": "./interface/TheCurrencyManager.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2258,
							"src": "304:70:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 888,
										"name": "TheCurrencyManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2257,
										"src": "312:18:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheExManager.sol",
							"file": "./interface/TheExManager.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2295,
							"src": "375:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 890,
										"name": "TheExManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2294,
										"src": "383:12:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
							"file": "./execution/interface/TheExecutionStrategy.sol",
							"id": 893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2201,
							"src": "434:77:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 892,
										"name": "TheExStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2200,
										"src": "442:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheRoyaltyFeeManager.sol",
							"file": "./interface/TheRoyaltyFeeManager.sol",
							"id": 895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2311,
							"src": "512:71:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 894,
										"name": "TheRoyaltyManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2310,
										"src": "520:17:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheUnemetaExchange.sol",
							"file": "./interface/TheUnemetaExchange.sol",
							"id": 897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2359,
							"src": "584:70:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 896,
										"name": "TheUnemetaExchange",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2358,
										"src": "592:18:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheTransferManager.sol",
							"file": "./interface/TheTransferManager.sol",
							"id": 899,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2327,
							"src": "655:70:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 898,
										"name": "TheTransferManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2326,
										"src": "663:18:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/trans/interface/TheTransFerSelector.sol",
							"file": "./trans/interface/TheTransFerSelector.sol",
							"id": 901,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2369,
							"src": "726:78:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 900,
										"name": "TheTransferSelector",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2368,
										"src": "734:19:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/IWETH.sol",
							"file": "./interface/IWETH.sol",
							"id": 903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2221,
							"src": "805:44:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 902,
										"name": "IWETH",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2220,
										"src": "813:5:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../libraries/OrderTypes.sol",
							"id": 905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2465,
							"src": "851:55:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 904,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2464,
										"src": "859:10:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SignatureChecker.sol",
							"file": "../libraries/SignatureChecker.sol",
							"id": 907,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2589,
							"src": "907:67:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 906,
										"name": "SignatureChecker",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2588,
										"src": "915:16:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 908,
										"name": "TheUnemetaExchange",
										"nameLocations": [
											"1021:18:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2358,
										"src": "1021:18:8"
									},
									"id": 909,
									"nodeType": "InheritanceSpecifier",
									"src": "1021:18:8"
								},
								{
									"baseName": {
										"id": 910,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1041:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "1041:15:8"
									},
									"id": 911,
									"nodeType": "InheritanceSpecifier",
									"src": "1041:15:8"
								},
								{
									"baseName": {
										"id": 912,
										"name": "Ownable",
										"nameLocations": [
											"1058:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "1058:7:8"
									},
									"id": 913,
									"nodeType": "InheritanceSpecifier",
									"src": "1058:7:8"
								}
							],
							"canonicalName": "UnemetaMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2160,
							"linearizedBaseContracts": [
								2160,
								112,
								878,
								166,
								2358
							],
							"name": "UnemetaMarket",
							"nameLocation": "1004:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 917,
									"libraryName": {
										"id": 914,
										"name": "SafeERC20",
										"nameLocations": [
											"1101:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 561,
										"src": "1101:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1095:27:8",
									"typeName": {
										"id": 916,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 915,
											"name": "IERC20",
											"nameLocations": [
												"1115:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "1115:6:8"
										},
										"referencedDeclaration": 244,
										"src": "1115:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 921,
									"libraryName": {
										"id": 918,
										"name": "OrderTypes",
										"nameLocations": [
											"1133:10:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2464,
										"src": "1133:10:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1127:43:8",
									"typeName": {
										"id": 920,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 919,
											"name": "OrderTypes.MakerOrder",
											"nameLocations": [
												"1148:10:8",
												"1159:10:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2406,
											"src": "1148:21:8"
										},
										"referencedDeclaration": 2406,
										"src": "1148:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
											"typeString": "struct OrderTypes.MakerOrder"
										}
									}
								},
								{
									"global": false,
									"id": 925,
									"libraryName": {
										"id": 922,
										"name": "OrderTypes",
										"nameLocations": [
											"1181:10:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2464,
										"src": "1181:10:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1175:43:8",
									"typeName": {
										"id": 924,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 923,
											"name": "OrderTypes.TakerOrder",
											"nameLocations": [
												"1196:10:8",
												"1207:10:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2419,
											"src": "1196:21:8"
										},
										"referencedDeclaration": 2419,
										"src": "1196:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
											"typeString": "struct OrderTypes.TakerOrder"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "1e7178d84f0b0825c65795cd62e7972809ad3aac6917843aaec596161b2c0a97",
									"id": 931,
									"name": "CancelAllOrders",
									"nameLocation": "1254:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1286:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1270:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMinNonce",
												"nameLocation": "1300:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1292:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:43:8"
									},
									"src": "1248:65:8"
								},
								{
									"anonymous": false,
									"eventSelector": "fa0ae5d80fe3763c880a3839fab0294171a6f730d1f82c4cd5392c6f67b41732",
									"id": 938,
									"name": "CancelMultipleOrders",
									"nameLocation": "1350:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1387:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1371:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderNonces",
												"nameLocation": "1403:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1393:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 934,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1393:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 935,
													"nodeType": "ArrayTypeName",
													"src": "1393:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:45:8"
									},
									"src": "1344:72:8"
								},
								{
									"anonymous": false,
									"eventSelector": "b4f5db40df3aced29e88a4babbc3b46e305e07d34098525d18b1497056e63838",
									"id": 942,
									"name": "NewCurrencyManager",
									"nameLocation": "1463:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"indexed": true,
												"mutability": "mutable",
												"name": "currencyManager",
												"nameLocation": "1498:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1482:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:33:8"
									},
									"src": "1457:58:8"
								},
								{
									"anonymous": false,
									"eventSelector": "36e2a376eabc3bc60cb88f29c288f53e36874a95a7f407330ab4f166b0905698",
									"id": 946,
									"name": "NewExecutionManager",
									"nameLocation": "1563:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionManager",
												"nameLocation": "1599:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1583:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:34:8"
									},
									"src": "1557:60:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb10",
									"id": 950,
									"name": "NewProtocolFeeRecipient",
									"nameLocation": "1683:23:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "protocolFeeRecipient",
												"nameLocation": "1723:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1707:36:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:38:8"
									},
									"src": "1677:68:8"
								},
								{
									"anonymous": false,
									"eventSelector": "80e3874461ebbd918ac3e81da0a92e5e51387d70f337237c9123e48d20e5a508",
									"id": 954,
									"name": "NewRoyaltyFeeManager",
									"nameLocation": "1798:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "royaltyFeeManager",
												"nameLocation": "1835:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "1819:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1818:35:8"
									},
									"src": "1792:62:8"
								},
								{
									"anonymous": false,
									"eventSelector": "205d78ab41afe80bd6b6aaa5d7599d5300ff8690da3ab1302c1b552f7baf7d8c",
									"id": 958,
									"name": "NewTransferSelectorNFT",
									"nameLocation": "1898:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"indexed": true,
												"mutability": "mutable",
												"name": "transferSelectorNFT",
												"nameLocation": "1937:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1921:35:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:37:8"
									},
									"src": "1892:66:8"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 960,
									"mutability": "immutable",
									"name": "WETH",
									"nameLocation": "2018:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "1993:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 959,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1993:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64df049e",
									"id": 962,
									"mutability": "mutable",
									"name": "protocolFeeRecipient",
									"nameLocation": "2077:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2062:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 961,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2062:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0f747d74",
									"id": 965,
									"mutability": "mutable",
									"name": "currencyManager",
									"nameLocation": "2131:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2105:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
										"typeString": "contract TheCurrencyManager"
									},
									"typeName": {
										"id": 964,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 963,
											"name": "TheCurrencyManager",
											"nameLocations": [
												"2105:18:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2257,
											"src": "2105:18:8"
										},
										"referencedDeclaration": 2257,
										"src": "2105:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
											"typeString": "contract TheCurrencyManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "483abb9f",
									"id": 968,
									"mutability": "mutable",
									"name": "executionManager",
									"nameLocation": "2172:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2152:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TheExManager_$2294",
										"typeString": "contract TheExManager"
									},
									"typeName": {
										"id": 967,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 966,
											"name": "TheExManager",
											"nameLocations": [
												"2152:12:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2294,
											"src": "2152:12:8"
										},
										"referencedDeclaration": 2294,
										"src": "2152:12:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TheExManager_$2294",
											"typeString": "contract TheExManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87e4401f",
									"id": 971,
									"mutability": "mutable",
									"name": "royaltyFeeManager",
									"nameLocation": "2219:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2194:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
										"typeString": "contract TheRoyaltyManager"
									},
									"typeName": {
										"id": 970,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 969,
											"name": "TheRoyaltyManager",
											"nameLocations": [
												"2194:17:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2310,
											"src": "2194:17:8"
										},
										"referencedDeclaration": 2310,
										"src": "2194:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
											"typeString": "contract TheRoyaltyManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5e14f68e",
									"id": 974,
									"mutability": "mutable",
									"name": "transferSelectorNFT",
									"nameLocation": "2269:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2242:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
										"typeString": "contract TheTransferSelector"
									},
									"typeName": {
										"id": 973,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 972,
											"name": "TheTransferSelector",
											"nameLocations": [
												"2242:19:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2368,
											"src": "2242:19:8"
										},
										"referencedDeclaration": 2368,
										"src": "2242:19:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
											"typeString": "contract TheTransferSelector"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4266581e",
									"id": 978,
									"mutability": "mutable",
									"name": "userMinOrderNonce",
									"nameLocation": "2363:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2328:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 977,
										"keyType": {
											"id": 975,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2336:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2328:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 976,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2347:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 984,
									"mutability": "mutable",
									"name": "_theUserOrderExecutedOrCancelled",
									"nameLocation": "2489:32:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2436:85:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 983,
										"keyType": {
											"id": 979,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2444:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2436:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueType": {
											"id": 982,
											"keyType": {
												"id": 980,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2463:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2455:24:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueType": {
												"id": 981,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2474:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d",
									"id": 996,
									"name": "RoyaltyPayment",
									"nameLocation": "2572:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2612:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2596:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2596:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2669:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2653:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": true,
												"mutability": "mutable",
												"name": "royaltyRecipient",
												"nameLocation": "2713:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2697:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2697:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "2774:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2766:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2811:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2803:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:245:8"
									},
									"src": "2566:266:8"
								},
								{
									"anonymous": false,
									"eventSelector": "68cd251d4d267c6e2034ff0088b990352b97b2002c0476587d0c4da889c11330",
									"id": 1018,
									"name": "TakerAsk",
									"nameLocation": "2870:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderHash",
												"nameLocation": "2896:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2888:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 997,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderNonce",
												"nameLocation": "2923:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2915:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": true,
												"mutability": "mutable",
												"name": "taker",
												"nameLocation": "2959:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2943:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2943:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "maker",
												"nameLocation": "2990:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2974:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "3021:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3005:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "3047:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3039:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3039:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3073:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3065:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3101:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3093:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3126:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3118:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3150:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3142:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3142:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2878:283:8"
									},
									"src": "2864:298:8"
								},
								{
									"anonymous": false,
									"eventSelector": "95fb6205e23ff6bda16a2d1dba56b9ad7c783f67c96fa149785052f47696f2be",
									"id": 1040,
									"name": "TakerBid",
									"nameLocation": "3200:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderHash",
												"nameLocation": "3226:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3218:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1019,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderNonce",
												"nameLocation": "3253:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3245:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3245:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": true,
												"mutability": "mutable",
												"name": "taker",
												"nameLocation": "3289:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3273:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3273:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"mutability": "mutable",
												"name": "maker",
												"nameLocation": "3320:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3304:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3304:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": true,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "3351:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3335:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3335:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "3377:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3369:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3403:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3395:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3431:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3423:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3456:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3448:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3480:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3472:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3472:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:283:8"
									},
									"src": "3194:298:8"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "4219:274:8",
										"statements": [
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1053,
														"name": "currencyManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "4229:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
															"typeString": "contract TheCurrencyManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1055,
																"name": "_currencyManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "4266:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1054,
															"name": "TheCurrencyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "4247:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheCurrencyManager_$2257_$",
																"typeString": "type(contract TheCurrencyManager)"
															}
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4247:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
															"typeString": "contract TheCurrencyManager"
														}
													},
													"src": "4229:54:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
														"typeString": "contract TheCurrencyManager"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "4229:54:8"
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "executionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "4293:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheExManager_$2294",
															"typeString": "contract TheExManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1061,
																"name": "_executionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "4325:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1060,
															"name": "TheExManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "4312:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheExManager_$2294_$",
																"typeString": "type(contract TheExManager)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4312:31:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheExManager_$2294",
															"typeString": "contract TheExManager"
														}
													},
													"src": "4293:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheExManager_$2294",
														"typeString": "contract TheExManager"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "4293:50:8"
											},
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1065,
														"name": "royaltyFeeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4353:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
															"typeString": "contract TheRoyaltyManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1067,
																"name": "_royaltyFeeManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "4391:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1066,
															"name": "TheRoyaltyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "4373:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheRoyaltyManager_$2310_$",
																"typeString": "type(contract TheRoyaltyManager)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4373:37:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
															"typeString": "contract TheRoyaltyManager"
														}
													},
													"src": "4353:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
														"typeString": "contract TheRoyaltyManager"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "4353:57:8"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1071,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4420:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1072,
														"name": "_WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "4427:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4420:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "4420:12:8"
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1075,
														"name": "protocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "4442:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1076,
														"name": "_protocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "4465:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4442:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "4442:44:8"
											}
										]
									},
									"id": 1080,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "_currencyManager",
												"nameLocation": "3950:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3942:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "_executionManager",
												"nameLocation": "4003:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3995:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "_royaltyFeeManager",
												"nameLocation": "4058:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4050:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4050:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "_WETH",
												"nameLocation": "4116:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4108:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "_protocolFeeRecipient",
												"nameLocation": "4154:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4146:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3932:286:8"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4219:0:8"
									},
									"scope": 2160,
									"src": "3921:572:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2339
									],
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "4885:1952:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"expression": {
																			"id": 1093,
																			"name": "makerAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "4904:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																				"typeString": "struct OrderTypes.MakerOrder calldata"
																			}
																		},
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4913:10:8",
																		"memberName": "isOrderAsk",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2375,
																		"src": "4904:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4903:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "4929:20:8",
																		"subExpression": {
																			"expression": {
																				"id": 1096,
																				"name": "takerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "4930:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																					"typeString": "struct OrderTypes.TakerOrder calldata"
																				}
																			},
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4939:10:8",
																			"memberName": "isOrderAsk",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2408,
																			"src": "4930:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4928:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4903:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722041626f7574204f726465722053696465",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4952:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															},
															"value": "Error About Order Side"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4895:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4895:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "4895:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1105,
																	"name": "makerAsk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "5025:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5034:8:8",
																"memberName": "currency",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2389,
																"src": "5025:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1107,
																"name": "WETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "5046:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5025:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43757272656e6379206d7573742062652057455448",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5052:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5",
																"typeString": "literal_string \"Currency must be WETH\""
															},
															"value": "Currency must be WETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5",
																"typeString": "literal_string \"Currency must be WETH\""
															}
														],
														"id": 1104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5017:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5017:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "5017:59:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1113,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5094:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5098:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5094:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1115,
																	"name": "takerBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "5108:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																		"typeString": "struct OrderTypes.TakerOrder calldata"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5117:5:8",
																"memberName": "taker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2410,
																"src": "5108:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5094:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f72646572206d757374206265207468652073656e646572",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5124:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															},
															"value": "Order must be the sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															}
														],
														"id": 1112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5086:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5086:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "5086:65:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1121,
															"name": "takerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "5220:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5229:5:8",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2412,
														"src": "5220:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1123,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5237:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5241:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5237:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5220:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1154,
													"nodeType": "Block",
													"src": "5365:86:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1146,
																				"name": "takerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "5387:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																					"typeString": "struct OrderTypes.TakerOrder calldata"
																				}
																			},
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5396:5:8",
																			"memberName": "price",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2412,
																			"src": "5387:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1148,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5405:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5409:5:8",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "5405:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5387:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d73672e76616c756520697320746f6f2068696768",
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5416:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350",
																			"typeString": "literal_string \"Msg.value is too high\""
																		},
																		"value": "Msg.value is too high"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350",
																			"typeString": "literal_string \"Msg.value is too high\""
																		}
																	],
																	"id": 1145,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5379:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5379:61:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1153,
															"nodeType": "ExpressionStatement",
															"src": "5379:61:8"
														}
													]
												},
												"id": 1155,
												"nodeType": "IfStatement",
												"src": "5216:235:8",
												"trueBody": {
													"id": 1144,
													"nodeType": "Block",
													"src": "5248:111:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1130,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5292:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5296:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5292:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1134,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5312:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UnemetaMarket_$2160",
																					"typeString": "contract UnemetaMarket"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UnemetaMarket_$2160",
																					"typeString": "contract UnemetaMarket"
																				}
																			],
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5304:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1132,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5304:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5304:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1136,
																						"name": "takerBid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1083,
																						"src": "5320:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																							"typeString": "struct OrderTypes.TakerOrder calldata"
																						}
																					},
																					"id": 1137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5329:5:8",
																					"memberName": "price",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2412,
																					"src": "5320:14:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"expression": {
																						"id": 1138,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "5337:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5341:5:8",
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"src": "5337:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5320:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1141,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5319:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1127,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "5269:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1126,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "5262:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5262:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5275:16:8",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "5262:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5262:86:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1143,
															"nodeType": "ExpressionStatement",
															"src": "5262:86:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1157,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "5490:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "IWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2220,
																	"src": "5484:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IWETH_$2220_$",
																		"typeString": "type(contract IWETH)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:11:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH_$2220",
																	"typeString": "contract IWETH"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5496:7:8",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2205,
															"src": "5484:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1160,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5512:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5516:5:8",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5512:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5484:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5484:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "5484:40:8"
											},
											{
												"assignments": [
													1166
												],
												"declarations": [
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "askHash",
														"nameLocation": "5586:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5578:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1165,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5578:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1167,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "5596:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5605:4:8",
														"memberName": "hash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2463,
														"src": "5596:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_MakerOrder_$2406_memory_ptr_$",
															"typeString": "function (struct OrderTypes.MakerOrder memory) pure returns (bytes32)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5596:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5578:33:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1172,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "5636:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														{
															"id": 1173,
															"name": "askHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "5646:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1171,
														"name": "_validateOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "5621:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_MakerOrder_$2406_calldata_ptr_$_t_bytes32_$returns$__$",
															"typeString": "function (struct OrderTypes.MakerOrder calldata,bytes32) view"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5621:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "5621:33:8"
											},
											{
												"assignments": [
													1177,
													1179,
													1181
												],
												"declarations": [
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "isExecutionValid",
														"nameLocation": "5711:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5706:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5706:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "5737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5729:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5729:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1181,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5754:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5746:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5746:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1190,
												"initialValue": {
													"arguments": [
														{
															"id": 1187,
															"name": "takerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "5821:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															}
														},
														{
															"id": 1188,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "5831:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															},
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1183,
																		"name": "makerAsk",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "5778:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5787:8:8",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "5778:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1182,
																"name": "TheExStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "5764:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheExStrategy_$2200_$",
																	"typeString": "type(contract TheExStrategy)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5764:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheExStrategy_$2200",
																"typeString": "contract TheExStrategy"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5806:14:8",
														"memberName": "canExecuteSell",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2194,
														"src": "5764:56:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_struct$_TakerOrder_$2419_memory_ptr_$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "function (struct OrderTypes.TakerOrder memory,struct OrderTypes.MakerOrder memory) view external returns (bool,uint256,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5764:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5705:135:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "isExecutionValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "5859:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53747261746567792073686f756c642062652076616c6964",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5877:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															},
															"value": "Strategy should be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5851:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5851:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "5851:53:8"
											},
											{
												"expression": {
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1196,
																"name": "_theUserOrderExecutedOrCancelled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "6004:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 1201,
															"indexExpression": {
																"expression": {
																	"id": 1197,
																	"name": "makerAsk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "6037:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6046:6:8",
																"memberName": "signer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2377,
																"src": "6037:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6004:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1202,
														"indexExpression": {
															"expression": {
																"id": 1199,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6054:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6063:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "6054:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6004:65:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6072:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6004:72:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "6004:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1207,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6155:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6164:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "6155:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1209,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6186:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6195:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "6186:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "6219:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1212,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6240:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6249:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "6240:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1214,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "6269:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6278:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "6269:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1216,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6297:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6306:18:8",
															"memberName": "minPercentageToAsk",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2397,
															"src": "6297:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1206,
														"name": "_transferFeesAndFundsWithWETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "6112:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,uint256,uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:222:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "6112:222:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1221,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6408:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6417:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "6408:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1223,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6441:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "6441:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1225,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "6470:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6479:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "6470:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "6498:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1228,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "6519:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "_transferNonFungibleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "6369:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6369:157:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "6369:157:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1232,
															"name": "askHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "6564:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1233,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6585:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6594:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "6585:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1235,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "6613:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6622:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "6613:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1237,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6641:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6650:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "6641:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1239,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6670:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6679:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "6670:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1241,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6701:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6710:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "6701:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1243,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6732:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6741:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "6732:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "6765:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1246,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "6786:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1247,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "6806:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6815:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "6806:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1231,
														"name": "TakerBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "6542:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,address,address,address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6542:288:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "EmitStatement",
												"src": "6537:293:8"
											}
										]
									},
									"functionSelector": "509a1a41",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "nonReentrant",
												"nameLocations": [
													"4872:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 165,
												"src": "4872:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4872:12:8"
										}
									],
									"name": "matchSellerOrdersWETH",
									"nameLocation": "4720:21:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1088,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4863:8:8"
									},
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "4782:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4751:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 1082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1081,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"4751:10:8",
															"4762:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "4751:21:8"
													},
													"referencedDeclaration": 2419,
													"src": "4751:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "4831:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4800:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 1085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1084,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"4800:10:8",
															"4811:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "4800:21:8"
													},
													"referencedDeclaration": 2406,
													"src": "4800:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:104:8"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4885:0:8"
									},
									"scope": 2160,
									"src": "4711:2126:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2348
									],
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "7188:1620:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"expression": {
																			"id": 1265,
																			"name": "makerAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "7266:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																				"typeString": "struct OrderTypes.MakerOrder calldata"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7275:10:8",
																		"memberName": "isOrderAsk",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2375,
																		"src": "7266:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1267,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7265:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "7291:20:8",
																		"subExpression": {
																			"expression": {
																				"id": 1268,
																				"name": "takerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "7292:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																					"typeString": "struct OrderTypes.TakerOrder calldata"
																				}
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7301:10:8",
																			"memberName": "isOrderAsk",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2408,
																			"src": "7292:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7290:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7265:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722041626f7574204f726465722053696465",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7314:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															},
															"value": "Error About Order Side"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7257:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7257:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "7257:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1277,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7398:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7402:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7398:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1279,
																	"name": "takerBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "7412:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																		"typeString": "struct OrderTypes.TakerOrder calldata"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7421:5:8",
																"memberName": "taker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2410,
																"src": "7412:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7398:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f72646572206d757374206265207468652073656e646572",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7428:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															},
															"value": "Order must be the sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															}
														],
														"id": 1276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7390:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7390:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "7390:65:8"
											},
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "askHash",
														"nameLocation": "7505:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "7497:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1285,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7497:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1287,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "7515:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7524:4:8",
														"memberName": "hash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2463,
														"src": "7515:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_MakerOrder_$2406_memory_ptr_$",
															"typeString": "function (struct OrderTypes.MakerOrder memory) pure returns (bytes32)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7515:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7497:33:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1292,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "7555:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														{
															"id": 1293,
															"name": "askHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "7565:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1291,
														"name": "_validateOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "7540:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_MakerOrder_$2406_calldata_ptr_$_t_bytes32_$returns$__$",
															"typeString": "function (struct OrderTypes.MakerOrder calldata,bytes32) view"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7540:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "7540:33:8"
											},
											{
												"assignments": [
													1297,
													1299,
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1297,
														"mutability": "mutable",
														"name": "isExecutionValid",
														"nameLocation": "7601:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "7596:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1296,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7596:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1299,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "7627:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "7619:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7619:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7644:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "7636:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7636:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"id": 1307,
															"name": "takerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "7711:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															}
														},
														{
															"id": 1308,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "7721:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															},
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1303,
																		"name": "makerAsk",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "7668:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7677:8:8",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "7668:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1302,
																"name": "TheExStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "7654:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheExStrategy_$2200_$",
																	"typeString": "type(contract TheExStrategy)"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7654:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheExStrategy_$2200",
																"typeString": "contract TheExStrategy"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7696:14:8",
														"memberName": "canExecuteSell",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2194,
														"src": "7654:56:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_struct$_TakerOrder_$2419_memory_ptr_$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "function (struct OrderTypes.TakerOrder memory,struct OrderTypes.MakerOrder memory) view external returns (bool,uint256,uint256)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7654:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7595:135:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "isExecutionValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "7784:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53747261746567792073686f756c642062652076616c6964",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7802:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															},
															"value": "Strategy should be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															}
														],
														"id": 1311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7776:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7776:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "7776:53:8"
											},
											{
												"expression": {
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1316,
																"name": "_theUserOrderExecutedOrCancelled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7929:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 1321,
															"indexExpression": {
																"expression": {
																	"id": 1317,
																	"name": "makerAsk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "7962:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7971:6:8",
																"memberName": "signer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2377,
																"src": "7962:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7929:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1322,
														"indexExpression": {
															"expression": {
																"id": 1319,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "7979:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7988:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "7979:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7929:65:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7997:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7929:72:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "7929:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1327,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8072:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8081:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "8072:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1329,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8103:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8112:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "8103:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8136:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1332,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8157:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8166:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "8157:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8188:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8192:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8188:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1336,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8212:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8221:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "8212:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1338,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "8241:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8250:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "8241:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1340,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8269:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8278:18:8",
															"memberName": "minPercentageToAsk",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2397,
															"src": "8269:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "_transferFeesAndFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "8037:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,address,address,uint256,uint256)"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8037:269:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "8037:269:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1345,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8379:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8388:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "8379:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1347,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8412:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8421:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "8412:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1349,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "8441:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8450:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "8441:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8469:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1352,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "8490:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1344,
														"name": "_transferNonFungibleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "8340:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8340:157:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "8340:157:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1356,
															"name": "askHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "8535:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1357,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8556:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8565:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "8556:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1359,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "8584:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8593:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "8584:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1361,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8612:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8621:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "8612:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1363,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8641:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8650:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "8641:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1365,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8672:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8681:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "8672:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1367,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8703:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8712:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "8703:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1369,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8736:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "8757:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1371,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "8777:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8786:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "8777:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1355,
														"name": "TakerBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "8513:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,address,address,address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:288:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "EmitStatement",
												"src": "8508:293:8"
											}
										]
									},
									"functionSelector": "45ea7231",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1261,
												"name": "nonReentrant",
												"nameLocations": [
													"7171:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 165,
												"src": "7171:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7171:12:8"
										}
									],
									"name": "matchSellerOrders",
									"nameLocation": "7041:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7158:8:8"
									},
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "7090:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "7059:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 1254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1253,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"7059:10:8",
															"7070:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "7059:21:8"
													},
													"referencedDeclaration": 2419,
													"src": "7059:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "7131:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "7100:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 1257,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1256,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"7100:10:8",
															"7111:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "7100:21:8"
													},
													"referencedDeclaration": 2406,
													"src": "7100:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7058:82:8"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7188:0:8"
									},
									"scope": 2160,
									"src": "7032:1776:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2357
									],
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "9157:1735:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "9288:20:8",
																		"subExpression": {
																			"expression": {
																				"id": 1389,
																				"name": "makerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "9289:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																					"typeString": "struct OrderTypes.MakerOrder calldata"
																				}
																			},
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9298:10:8",
																			"memberName": "isOrderAsk",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2375,
																			"src": "9289:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1392,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9287:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"expression": {
																			"id": 1393,
																			"name": "takerAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1379,
																			"src": "9314:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																				"typeString": "struct OrderTypes.TakerOrder calldata"
																			}
																		},
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9323:10:8",
																		"memberName": "isOrderAsk",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2408,
																		"src": "9314:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1395,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9313:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9287:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722041626f7574204f726465722053696465",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9336:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															},
															"value": "Error About Order Side"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															}
														],
														"id": 1388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9279:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9279:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "9279:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1401,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9420:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9424:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9420:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1403,
																	"name": "takerAsk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "9434:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																		"typeString": "struct OrderTypes.TakerOrder calldata"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9443:5:8",
																"memberName": "taker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2410,
																"src": "9434:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9420:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f72646572206d757374206265207468652073656e646572",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9450:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															},
															"value": "Order must be the sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															}
														],
														"id": 1400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9412:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9412:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "9412:65:8"
											},
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "bidHash",
														"nameLocation": "9529:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "9521:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1409,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9521:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1411,
															"name": "makerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "9539:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9548:4:8",
														"memberName": "hash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2463,
														"src": "9539:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_MakerOrder_$2406_memory_ptr_$",
															"typeString": "function (struct OrderTypes.MakerOrder memory) pure returns (bytes32)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9539:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9521:33:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1416,
															"name": "makerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "9621:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														{
															"id": 1417,
															"name": "bidHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "9631:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1415,
														"name": "_validateOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "9606:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_MakerOrder_$2406_calldata_ptr_$_t_bytes32_$returns$__$",
															"typeString": "function (struct OrderTypes.MakerOrder calldata,bytes32) view"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9606:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "9606:33:8"
											},
											{
												"assignments": [
													1421,
													1423,
													1425
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "isExecutionValid",
														"nameLocation": "9720:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "9715:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1420,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9715:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "9746:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "9738:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9738:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "9763:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "9755:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1424,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9755:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1434,
												"initialValue": {
													"arguments": [
														{
															"id": 1431,
															"name": "takerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "9829:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															}
														},
														{
															"id": 1432,
															"name": "makerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "9839:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															},
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1427,
																		"name": "makerBid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "9787:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9796:8:8",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "9787:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1426,
																"name": "TheExStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "9773:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheExStrategy_$2200_$",
																	"typeString": "type(contract TheExStrategy)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9773:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheExStrategy_$2200",
																"typeString": "contract TheExStrategy"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9815:13:8",
														"memberName": "canExecuteBuy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2179,
														"src": "9773:55:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_struct$_TakerOrder_$2419_memory_ptr_$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "function (struct OrderTypes.TakerOrder memory,struct OrderTypes.MakerOrder memory) view external returns (bool,uint256,uint256)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9773:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9714:134:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1436,
															"name": "isExecutionValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "9867:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53747261746567792073686f756c642062652076616c6964",
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9885:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															},
															"value": "Strategy should be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															}
														],
														"id": 1435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9859:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9859:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "9859:53:8"
											},
											{
												"expression": {
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1440,
																"name": "_theUserOrderExecutedOrCancelled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "10012:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 1445,
															"indexExpression": {
																"expression": {
																	"id": 1441,
																	"name": "makerBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "10045:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10054:6:8",
																"memberName": "signer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2377,
																"src": "10045:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10012:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1446,
														"indexExpression": {
															"expression": {
																"id": 1443,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10062:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10071:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "10062:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10012:65:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10080:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10012:72:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "10012:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1451,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10158:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10167:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "10158:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1453,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10191:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10195:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10191:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1455,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10215:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10224:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "10215:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "10244:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1458,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "10265:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1450,
														"name": "_transferNonFungibleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "10119:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10119:153:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "10119:153:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1462,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10343:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10352:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "10343:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1464,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10374:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10383:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "10374:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "10407:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1467,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10428:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10437:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "10428:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1469,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10459:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10468:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "10459:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1471,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10488:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10497:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "10488:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1473,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10516:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10525:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "10516:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1475,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10544:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10553:18:8",
															"memberName": "minPercentageToAsk",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2416,
															"src": "10544:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1461,
														"name": "_transferFeesAndFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "10308:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,address,address,uint256,uint256)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10308:273:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "10308:273:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1480,
															"name": "bidHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "10619:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1481,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10640:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10649:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "10640:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1483,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10668:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10677:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "10668:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1485,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10696:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10705:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "10696:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1487,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10725:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10734:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "10725:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1489,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10756:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10765:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "10756:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1491,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10787:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10796:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "10787:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "10820:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "10841:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1495,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10861:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10870:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "10861:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1479,
														"name": "TakerAsk",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "10597:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,address,address,address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10597:288:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "EmitStatement",
												"src": "10592:293:8"
											}
										]
									},
									"functionSelector": "63521def",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1386,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1385,
												"name": "nonReentrant",
												"nameLocations": [
													"9140:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 165,
												"src": "9140:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9140:12:8"
										}
									],
									"name": "matchesBuyerOrder",
									"nameLocation": "9010:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1384,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9127:8:8"
									},
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "9059:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "9028:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 1378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1377,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"9028:10:8",
															"9039:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "9028:21:8"
													},
													"referencedDeclaration": 2419,
													"src": "9028:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "9100:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "9069:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"9069:10:8",
															"9080:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "9069:21:8"
													},
													"referencedDeclaration": 2406,
													"src": "9069:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9027:82:8"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9157:0:8"
									},
									"scope": 2160,
									"src": "9001:1891:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "11105:414:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1506,
																"name": "minNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "11123:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"baseExpression": {
																	"id": 1507,
																	"name": "userMinOrderNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "11134:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1510,
																"indexExpression": {
																	"expression": {
																		"id": 1508,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11152:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11156:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11152:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11134:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11123:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f776572207468616e2063757272656e74",
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11165:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8",
																"typeString": "literal_string \"Cancel Order nonce cannot lower than current\""
															},
															"value": "Cancel Order nonce cannot lower than current"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8",
																"typeString": "literal_string \"Cancel Order nonce cannot lower than current\""
															}
														],
														"id": 1505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11115:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11115:97:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "11115:97:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "minNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "11230:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1517,
																		"name": "userMinOrderNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "11241:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1520,
																	"indexExpression": {
																		"expression": {
																			"id": 1518,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11259:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11263:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11259:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11241:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "353030303030",
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11273:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_500000_by_1",
																		"typeString": "int_const 500000"
																	},
																	"value": "500000"
																},
																"src": "11241:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11230:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742063616e63656c20746f6f206d616e79206f7264657273",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11281:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec",
																"typeString": "literal_string \"Cannot cancel too many orders\""
															},
															"value": "Cannot cancel too many orders"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec",
																"typeString": "literal_string \"Cannot cancel too many orders\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11222:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11222:91:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "11222:91:8"
											},
											{
												"expression": {
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1527,
															"name": "userMinOrderNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "11419:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1530,
														"indexExpression": {
															"expression": {
																"id": 1528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11437:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11441:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11437:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11419:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1531,
														"name": "minNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "11451:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11419:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "11419:40:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11491:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11495:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11491:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "minNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "11503:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1534,
														"name": "CancelAllOrders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "11475:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11475:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "EmitStatement",
												"src": "11470:42:8"
											}
										]
									},
									"functionSelector": "cbd2ec65",
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelAllOrdersForSender",
									"nameLocation": "11053:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "minNonce",
												"nameLocation": "11086:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "11078:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11078:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11077:18:8"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11105:0:8"
									},
									"scope": 2160,
									"src": "11044:475:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "11762:399:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1548,
																	"name": "NonceList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "11780:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11790:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11780:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11799:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11780:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420626520656d7074792043616e63656c206c697374",
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11802:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50",
																"typeString": "literal_string \"Cannot be empty Cancel list\""
															},
															"value": "Cannot be empty Cancel list"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50",
																"typeString": "literal_string \"Cannot be empty Cancel list\""
															}
														],
														"id": 1547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11772:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11772:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "11772:60:8"
											},
											{
												"body": {
													"id": 1589,
													"nodeType": "Block",
													"src": "11890:206:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1567,
																				"name": "NonceList",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "11912:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1569,
																			"indexExpression": {
																				"id": 1568,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1556,
																				"src": "11922:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11912:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1570,
																				"name": "userMinOrderNonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 978,
																				"src": "11928:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1573,
																			"indexExpression": {
																				"expression": {
																					"id": 1571,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "11946:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11950:6:8",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "11946:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11928:29:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11912:45:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f776572207468616e2063757272656e74",
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11959:46:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8",
																			"typeString": "literal_string \"Cancel Order nonce cannot lower than current\""
																		},
																		"value": "Cancel Order nonce cannot lower than current"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8",
																			"typeString": "literal_string \"Cancel Order nonce cannot lower than current\""
																		}
																	],
																	"id": 1566,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11904:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11904:102:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "11904:102:8"
														},
														{
															"expression": {
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1578,
																			"name": "_theUserOrderExecutedOrCancelled",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "12020:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(uint256 => bool))"
																			}
																		},
																		"id": 1584,
																		"indexExpression": {
																			"expression": {
																				"id": 1579,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "12053:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12057:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "12053:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12020:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 1585,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1581,
																			"name": "NonceList",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "12065:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1583,
																		"indexExpression": {
																			"id": 1582,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "12075:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12065:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12020:58:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12081:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "12020:65:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1588,
															"nodeType": "ExpressionStatement",
															"src": "12020:65:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1559,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "11863:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1560,
															"name": "NonceList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "11867:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11877:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11867:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11863:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1590,
												"initializationExpression": {
													"assignments": [
														1556
													],
													"declarations": [
														{
															"constant": false,
															"id": 1556,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11856:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1590,
															"src": "11848:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1555,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11848:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1558,
													"initialValue": {
														"hexValue": "30",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11860:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11848:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11885:3:8",
														"subExpression": {
															"id": 1563,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "11885:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1565,
													"nodeType": "ExpressionStatement",
													"src": "11885:3:8"
												},
												"nodeType": "ForStatement",
												"src": "11843:253:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1592,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12132:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12136:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12132:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1594,
															"name": "NonceList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "12144:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1591,
														"name": "CancelMultipleOrders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "12111:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12111:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1596,
												"nodeType": "EmitStatement",
												"src": "12106:48:8"
											}
										]
									},
									"functionSelector": "9e53a69a",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelMultipleMakerOrders",
									"nameLocation": "11697:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "NonceList",
												"nameLocation": "11742:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "11723:28:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1542,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11723:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1543,
													"nodeType": "ArrayTypeName",
													"src": "11723:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11722:30:8"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11762:0:8"
									},
									"scope": 2160,
									"src": "11688:473:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "12563:118:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1607,
															"name": "_theUserOrderExecutedOrCancelled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "12624:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(uint256 => bool))"
															}
														},
														"id": 1609,
														"indexExpression": {
															"id": 1608,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "12657:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12624:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 1611,
													"indexExpression": {
														"id": 1610,
														"name": "orderNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "12663:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12624:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1612,
												"nodeType": "Return",
												"src": "12617:57:8"
											}
										]
									},
									"functionSelector": "31e27e27",
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUserOrderNonceExecutedOrCancelled",
									"nameLocation": "12464:35:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12508:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "12500:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12500:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "orderNonce",
												"nameLocation": "12522:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "12514:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12514:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12499:34:8"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "12557:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12557:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12556:6:8"
									},
									"scope": 2160,
									"src": "12455:226:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "13547:1618:8",
										"statements": [
											{
												"assignments": [
													1634
												],
												"declarations": [
													{
														"constant": false,
														"id": 1634,
														"mutability": "mutable",
														"name": "finalSellerAmount",
														"nameLocation": "13599:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "13591:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13591:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1636,
												"initialValue": {
													"id": 1635,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1628,
													"src": "13619:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13591:34:8"
											},
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "protocolFeeAmount",
														"nameLocation": "13694:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "13686:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13686:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1643,
												"initialValue": {
													"arguments": [
														{
															"id": 1640,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "13736:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1641,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "13746:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1639,
														"name": "_calculateProtocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "13714:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13714:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13686:67:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1644,
																	"name": "protocolFeeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "14022:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14054:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14046:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1645,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14046:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14046:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14022:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1650,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14021:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1651,
																	"name": "protocolFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "14062:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14083:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14062:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1654,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14061:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14021:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1670,
												"nodeType": "IfStatement",
												"src": "14017:227:8",
												"trueBody": {
													"id": 1669,
													"nodeType": "Block",
													"src": "14087:157:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1660,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "14135:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1661,
																		"name": "protocolFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "14141:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1662,
																		"name": "protocolFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "14163:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1657,
																				"name": "currency",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1622,
																				"src": "14108:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1656,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "14101:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14101:16:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14118:16:8",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "14101:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14101:80:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "14101:80:8"
														},
														{
															"expression": {
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1665,
																	"name": "finalSellerAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "14195:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1666,
																	"name": "protocolFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "14216:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14195:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1668,
															"nodeType": "ExpressionStatement",
															"src": "14195:38:8"
														}
													]
												}
											},
											{
												"assignments": [
													1672,
													1674
												],
												"declarations": [
													{
														"constant": false,
														"id": 1672,
														"mutability": "mutable",
														"name": "royaltyFeeRecipient",
														"nameLocation": "14302:19:8",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "14294:27:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1671,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14294:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1674,
														"mutability": "mutable",
														"name": "royaltyFeeAmount",
														"nameLocation": "14331:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "14323:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14323:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"id": 1677,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "14413:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1678,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "14425:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1679,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "14434:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1675,
															"name": "royaltyFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "14351:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
																"typeString": "contract TheRoyaltyManager"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14378:34:8",
														"memberName": "calculateRoyaltyFeeAndGetRecipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2309,
														"src": "14351:61:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) view external returns (address,uint256)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14351:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14293:148:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1682,
																	"name": "royaltyFeeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "14537:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14568:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14560:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1683,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14560:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14560:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14537:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1688,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14536:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1689,
																	"name": "royaltyFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1674,
																	"src": "14576:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14596:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14576:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1692,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14575:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14536:62:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1716,
												"nodeType": "IfStatement",
												"src": "14532:326:8",
												"trueBody": {
													"id": 1715,
													"nodeType": "Block",
													"src": "14600:258:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "14648:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1699,
																		"name": "royaltyFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "14654:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1700,
																		"name": "royaltyFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "14675:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1695,
																				"name": "currency",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1622,
																				"src": "14621:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1694,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "14614:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14614:16:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14631:16:8",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "14614:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14614:78:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1702,
															"nodeType": "ExpressionStatement",
															"src": "14614:78:8"
														},
														{
															"expression": {
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1703,
																	"name": "finalSellerAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "14706:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1704,
																	"name": "royaltyFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1674,
																	"src": "14727:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14706:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1706,
															"nodeType": "ExpressionStatement",
															"src": "14706:37:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1708,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1618,
																		"src": "14778:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1709,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1620,
																		"src": "14790:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1710,
																		"name": "royaltyFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "14799:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1711,
																		"name": "currency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "14820:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1712,
																		"name": "royaltyFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "14830:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1707,
																	"name": "RoyaltyPayment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "14763:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,address,address,uint256)"
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14763:84:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1714,
															"nodeType": "EmitStatement",
															"src": "14758:89:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1718,
																			"name": "finalSellerAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1634,
																			"src": "14950:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3130303030",
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14970:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "10000"
																		},
																		"src": "14950:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1721,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14949:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1722,
																			"name": "minPercentageToAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1630,
																			"src": "14981:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1723,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "15002:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14981:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14980:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14949:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652066656520697320746f6f206869676820666f72207468652073656c6c6572",
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15011:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7",
																"typeString": "literal_string \"The fee is too high for the seller\""
															},
															"value": "The fee is too high for the seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7",
																"typeString": "literal_string \"The fee is too high for the seller\""
															}
														],
														"id": 1717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14941:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14941:107:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "14941:107:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1734,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "15129:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1735,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "15135:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1736,
															"name": "finalSellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "15139:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1731,
																	"name": "currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "15102:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1730,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "15095:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15095:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15112:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "15095:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15095:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1738,
												"nodeType": "ExpressionStatement",
												"src": "15095:62:8"
											}
										]
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFeesAndFunds",
									"nameLocation": "13303:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "13342:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13334:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13334:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "13368:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13360:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13360:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13396:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13388:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13388:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "13421:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13413:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13413:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13447:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13439:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13439:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13469:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13461:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13461:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13489:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13481:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "minPercentageToAsk",
												"nameLocation": "13513:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13505:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13324:213:8"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13547:0:8"
									},
									"scope": 2160,
									"src": "13294:1871:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "15828:1582:8",
										"statements": [
											{
												"assignments": [
													1756
												],
												"declarations": [
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "finalSellerAmount",
														"nameLocation": "15883:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "15875:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15875:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1758,
												"initialValue": {
													"id": 1757,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1750,
													"src": "15903:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15875:34:8"
											},
											{
												"assignments": [
													1760
												],
												"declarations": [
													{
														"constant": false,
														"id": 1760,
														"mutability": "mutable",
														"name": "protocolFeeAmount",
														"nameLocation": "15978:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "15970:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1759,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15970:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1765,
												"initialValue": {
													"arguments": [
														{
															"id": 1762,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "16020:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1763,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "16030:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"name": "_calculateProtocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "15998:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15998:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15970:67:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1766,
																	"name": "protocolFeeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "16307:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16339:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16331:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1767,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16331:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16331:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16307:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1772,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16306:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1773,
																	"name": "protocolFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "16347:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16368:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16347:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1776,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16346:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16306:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1791,
												"nodeType": "IfStatement",
												"src": "16302:213:8",
												"trueBody": {
													"id": 1790,
													"nodeType": "Block",
													"src": "16372:143:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1782,
																		"name": "protocolFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "16412:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1783,
																		"name": "protocolFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "16434:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1779,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "16393:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1778,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "16386:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16386:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16399:12:8",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 312,
																	"src": "16386:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16386:66:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1785,
															"nodeType": "ExpressionStatement",
															"src": "16386:66:8"
														},
														{
															"expression": {
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1786,
																	"name": "finalSellerAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "16466:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1787,
																	"name": "protocolFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "16487:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16466:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1789,
															"nodeType": "ExpressionStatement",
															"src": "16466:38:8"
														}
													]
												}
											},
											{
												"assignments": [
													1793,
													1795
												],
												"declarations": [
													{
														"constant": false,
														"id": 1793,
														"mutability": "mutable",
														"name": "royaltyFeeRecipient",
														"nameLocation": "16570:19:8",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "16562:27:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1792,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16562:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1795,
														"mutability": "mutable",
														"name": "royaltyFeeAmount",
														"nameLocation": "16599:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "16591:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16591:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": {
													"arguments": [
														{
															"id": 1798,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "16681:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1799,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "16693:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1800,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "16702:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1796,
															"name": "royaltyFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "16619:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
																"typeString": "contract TheRoyaltyManager"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16646:34:8",
														"memberName": "calculateRoyaltyFeeAndGetRecipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2309,
														"src": "16619:61:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) view external returns (address,uint256)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16619:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16561:148:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1803,
																	"name": "royaltyFeeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1793,
																	"src": "16805:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16836:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16828:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1804,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16828:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16828:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16805:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1809,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16804:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1810,
																	"name": "royaltyFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "16844:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16864:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16844:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16843:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16804:62:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1839,
												"nodeType": "IfStatement",
												"src": "16800:317:8",
												"trueBody": {
													"id": 1838,
													"nodeType": "Block",
													"src": "16868:249:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1819,
																		"name": "royaltyFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1793,
																		"src": "16908:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1820,
																		"name": "royaltyFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "16929:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1816,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "16889:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1815,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "16882:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16882:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16895:12:8",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 312,
																	"src": "16882:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16882:64:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1822,
															"nodeType": "ExpressionStatement",
															"src": "16882:64:8"
														},
														{
															"expression": {
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1823,
																	"name": "finalSellerAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "16960:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1824,
																	"name": "royaltyFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "16981:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16960:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1826,
															"nodeType": "ExpressionStatement",
															"src": "16960:37:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1828,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1744,
																		"src": "17032:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1829,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "17044:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1830,
																		"name": "royaltyFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1793,
																		"src": "17053:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1833,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "17082:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17074:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17074:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17074:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1835,
																		"name": "royaltyFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "17089:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1827,
																	"name": "RoyaltyPayment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "17017:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,address,address,uint256)"
																	}
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17017:89:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1837,
															"nodeType": "EmitStatement",
															"src": "17012:94:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1841,
																			"name": "finalSellerAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "17210:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3130303030",
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17230:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "10000"
																		},
																		"src": "17210:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1844,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17209:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1845,
																			"name": "minPercentageToAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1752,
																			"src": "17241:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1846,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "17262:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17241:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1848,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17240:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17209:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652066656520697320746f6f206869676820666f72207468652073656c6c6572",
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17271:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7",
																"typeString": "literal_string \"The fee is too high for the seller\""
															},
															"value": "The fee is too high for the seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7",
																"typeString": "literal_string \"The fee is too high for the seller\""
															}
														],
														"id": 1840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17201:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17201:107:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "17201:107:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1857,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "17380:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1858,
															"name": "finalSellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "17384:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1854,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "17361:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1853,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "17354:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17354:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17367:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "17354:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17354:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "17354:48:8"
											}
										]
									},
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFeesAndFundsWithWETH",
									"nameLocation": "15624:29:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "15671:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15663:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15663:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "15697:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15689:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15689:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15725:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15717:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15717:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15750:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15742:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15742:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15770:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15762:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15762:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "minPercentageToAsk",
												"nameLocation": "15794:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15786:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15786:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15653:165:8"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15828:0:8"
									},
									"scope": 2160,
									"src": "15615:1795:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "17886:412:8",
										"statements": [
											{
												"assignments": [
													1876
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "Manager",
														"nameLocation": "17957:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1903,
														"src": "17949:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1875,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17949:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1881,
												"initialValue": {
													"arguments": [
														{
															"id": 1879,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "18016:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1877,
															"name": "transferSelectorNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "17967:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
																"typeString": "contract TheTransferSelector"
															}
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17987:28:8",
														"memberName": "checkTransferManagerForToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2367,
														"src": "17967:48:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
															"typeString": "function (address) view external returns (address)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17967:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17949:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1883,
																"name": "Manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "18088:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18107:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18099:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1884,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18099:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18099:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18088:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e277420666f756e74207472616e73666572206d616e61676572",
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18111:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e",
																"typeString": "literal_string \"Can't fount transfer manager\""
															},
															"value": "Can't fount transfer manager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e",
																"typeString": "literal_string \"Can't fount transfer manager\""
															}
														],
														"id": 1882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18080:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18080:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "18080:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1896,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "18253:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "18265:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "18271:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "18275:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1900,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "18284:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1893,
																	"name": "Manager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1876,
																	"src": "18219:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1892,
																"name": "TheTransferManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "18200:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheTransferManager_$2326_$",
																	"typeString": "type(contract TheTransferManager)"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18200:27:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheTransferManager_$2326",
																"typeString": "contract TheTransferManager"
															}
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18228:24:8",
														"memberName": "transferNonFungibleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2325,
														"src": "18200:52:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256) external"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18200:91:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1902,
												"nodeType": "ExpressionStatement",
												"src": "18200:91:8"
											}
										]
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferNonFungibleToken",
									"nameLocation": "17726:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "17769:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17761:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17761:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17797:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17789:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17789:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17819:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17811:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17811:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17839:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17831:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17864:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17856:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17856:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17751:125:8"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17886:0:8"
									},
									"scope": 2160,
									"src": "17717:581:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "18651:130:8",
										"statements": [
											{
												"assignments": [
													1914
												],
												"declarations": [
													{
														"constant": false,
														"id": 1914,
														"mutability": "mutable",
														"name": "protocolFee",
														"nameLocation": "18669:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1928,
														"src": "18661:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18661:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1916,
																	"name": "theStrategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1906,
																	"src": "18697:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1915,
																"name": "TheExStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "18683:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheExStrategy_$2200_$",
																	"typeString": "type(contract TheExStrategy)"
																}
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18683:26:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheExStrategy_$2200",
																"typeString": "contract TheExStrategy"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18710:15:8",
														"memberName": "viewProtocolFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2199,
														"src": "18683:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18683:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18661:66:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1921,
																	"name": "protocolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "18745:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1922,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1908,
																	"src": "18759:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18745:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1924,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18744:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18769:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "18744:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1912,
												"id": 1927,
												"nodeType": "Return",
												"src": "18737:37:8"
											}
										]
									},
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateProtocolFee",
									"nameLocation": "18560:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "theStrategy",
												"nameLocation": "18590:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "18582:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18611:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "18603:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18603:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18581:37:8"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "18642:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18642:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18641:9:8"
									},
									"scope": 2160,
									"src": "18551:230:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "19102:2024:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "19238:58:8",
																		"subExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1938,
																					"name": "_theUserOrderExecutedOrCancelled",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "19239:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(uint256 => bool))"
																					}
																				},
																				"id": 1941,
																				"indexExpression": {
																					"expression": {
																						"id": 1939,
																						"name": "Make",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1932,
																						"src": "19272:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																							"typeString": "struct OrderTypes.MakerOrder calldata"
																						}
																					},
																					"id": 1940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "19277:6:8",
																					"memberName": "signer",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2377,
																					"src": "19272:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "19239:45:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																					"typeString": "mapping(uint256 => bool)"
																				}
																			},
																			"id": 1944,
																			"indexExpression": {
																				"expression": {
																					"id": 1942,
																					"name": "Make",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1932,
																					"src": "19285:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																						"typeString": "struct OrderTypes.MakerOrder calldata"
																					}
																				},
																				"id": 1943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "19290:5:8",
																				"memberName": "nonce",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2391,
																				"src": "19285:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "19239:57:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19237:60:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1947,
																				"name": "Make",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1932,
																				"src": "19314:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																					"typeString": "struct OrderTypes.MakerOrder calldata"
																				}
																			},
																			"id": 1948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "19319:5:8",
																			"memberName": "nonce",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2391,
																			"src": "19314:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1949,
																				"name": "userMinOrderNonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 978,
																				"src": "19328:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1952,
																			"indexExpression": {
																				"expression": {
																					"id": 1950,
																					"name": "Make",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1932,
																					"src": "19346:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																						"typeString": "struct OrderTypes.MakerOrder calldata"
																					}
																				},
																				"id": 1951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "19351:6:8",
																				"memberName": "signer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2377,
																				"src": "19346:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "19328:30:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19314:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1954,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19313:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19237:122:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f726465723a204d61746368696e67206f726465722065787069726564",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19373:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c",
																"typeString": "literal_string \"Order: Matching order expired\""
															},
															"value": "Order: Matching order expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c",
																"typeString": "literal_string \"Order: Matching order expired\""
															}
														],
														"id": 1937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19162:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19162:252:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "19162:252:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1960,
																	"name": "Make",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "19474:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19479:6:8",
																"memberName": "signer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2377,
																"src": "19474:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19489:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1962,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19489:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19489:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19474:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865204f72646572207369676e65722063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19501:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d",
																"typeString": "literal_string \"The Order signer cannot be the zero address\""
															},
															"value": "The Order signer cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d",
																"typeString": "literal_string \"The Order signer cannot be the zero address\""
															}
														],
														"id": 1959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19466:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19466:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "19466:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1971,
																	"name": "Make",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "19611:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19616:6:8",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2385,
																"src": "19611:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19625:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19611:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206f7264657220616d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19628:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e",
																"typeString": "literal_string \"The order amount should be greater than 0\""
															},
															"value": "The order amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e",
																"typeString": "literal_string \"The order amount should be greater than 0\""
															}
														],
														"id": 1970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19603:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19603:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "19603:69:8"
											},
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "Domain",
														"nameLocation": "19691:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "19683:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1978,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "19683:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307838623733633363363962623866653364353132656363346366373539636337393233396637623137396230666661636161396137356435323262333934303066",
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19751:66:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
																		"typeString": "int_const 6307...(69 digits omitted)...1551"
																	},
																	"value": "0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f"
																},
																{
																	"hexValue": "307832653334343533393366323131643131643766383864333235626332366365373839373662346465636433393032396665623230326439623430396663336335",
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19946:66:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1",
																		"typeString": "int_const 2089...(69 digits omitted)...6421"
																	},
																	"value": "0x2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5"
																},
																{
																	"hexValue": "307863383965666461613534633066323063376164663631323838326466303935306635613935313633376530333037636463623463363732663239386238626336",
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20072:66:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1",
																		"typeString": "int_const 9074...(69 digits omitted)...1126"
																	},
																	"value": "0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6"
																},
																{
																	"expression": {
																		"id": 1986,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "20211:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20217:7:8",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "20211:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1990,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20250:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_UnemetaMarket_$2160",
																				"typeString": "contract UnemetaMarket"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_UnemetaMarket_$2160",
																				"typeString": "contract UnemetaMarket"
																			}
																		],
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20242:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1988,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20242:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20242:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
																		"typeString": "int_const 6307...(69 digits omitted)...1551"
																	},
																	{
																		"typeIdentifier": "t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1",
																		"typeString": "int_const 2089...(69 digits omitted)...6421"
																	},
																	{
																		"typeIdentifier": "t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1",
																		"typeString": "int_const 9074...(69 digits omitted)...1126"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1981,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19723:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "19727:6:8",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "19723:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19723:546:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1980,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "19700:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19700:579:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19683:596:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1998,
																	"name": "Hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "20538:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1999,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20567:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20572:6:8",
																	"memberName": "signer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2377,
																	"src": "20567:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2001,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20614:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20619:1:8",
																	"memberName": "v",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2401,
																	"src": "20614:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"expression": {
																		"id": 2003,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20682:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20687:1:8",
																	"memberName": "r",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2403,
																	"src": "20682:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2005,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20706:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20711:1:8",
																	"memberName": "s",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2405,
																	"src": "20706:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2007,
																	"name": "Domain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "20730:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1996,
																	"name": "SignatureChecker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "20484:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SignatureChecker_$2588_$",
																		"typeString": "type(library SignatureChecker)"
																	}
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20514:6:8",
																"memberName": "verify",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2587,
																"src": "20484:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$_t_uint8_$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address,uint8,bytes32,bytes32,bytes32) view returns (bool)"
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20484:266:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e61747572653a20496e76616c6964",
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20764:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75",
																"typeString": "literal_string \"Signature: Invalid\""
															},
															"value": "Signature: Invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75",
																"typeString": "literal_string \"Signature: Invalid\""
															}
														],
														"id": 1995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20463:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20463:331:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "20463:331:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2015,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20894:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20899:8:8",
																	"memberName": "currency",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2389,
																	"src": "20894:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2013,
																	"name": "currencyManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "20856:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
																		"typeString": "contract TheCurrencyManager"
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20872:21:8",
																"memberName": "isCurrencyWhitelisted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2239,
																"src": "20856:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20856:52:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420696e2043757272656e63792077686974656c697374",
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20910:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49",
																"typeString": "literal_string \" Not in Currency whitelist\""
															},
															"value": " Not in Currency whitelist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49",
																"typeString": "literal_string \" Not in Currency whitelist\""
															}
														],
														"id": 2012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20848:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20848:91:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "20848:91:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2024,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "21074:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "21079:8:8",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "21074:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2022,
																	"name": "executionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "21035:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TheExManager_$2294",
																		"typeString": "contract TheExManager"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21052:21:8",
																"memberName": "isStrategyWhitelisted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2276,
																"src": "21035:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21035:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420696e2053747261746567792077686974656c697374",
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21090:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a",
																"typeString": "literal_string \" Not in Strategy whitelist\""
															},
															"value": " Not in Strategy whitelist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a",
																"typeString": "literal_string \" Not in Strategy whitelist\""
															}
														],
														"id": 2021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21027:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21027:92:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "21027:92:8"
											}
										]
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOrder",
									"nameLocation": "19022:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "Make",
												"nameLocation": "19068:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "19037:35:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 1931,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1930,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"19037:10:8",
															"19048:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "19037:21:8"
													},
													"referencedDeclaration": 2406,
													"src": "19037:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "Hash",
												"nameLocation": "19082:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "19074:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19074:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19036:51:8"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19102:0:8"
									},
									"scope": 2160,
									"src": "19013:2113:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "21358:206:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2039,
																"name": "_currencyManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2033,
																"src": "21376:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21404:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21396:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2040,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21396:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21396:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21376:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21408:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															},
															"value": "Cannot update to a null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															}
														],
														"id": 2038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21368:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21368:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "21368:74:8"
											},
											{
												"expression": {
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2048,
														"name": "currencyManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "21452:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
															"typeString": "contract TheCurrencyManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2050,
																"name": "_currencyManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2033,
																"src": "21489:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2049,
															"name": "TheCurrencyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "21470:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheCurrencyManager_$2257_$",
																"typeString": "type(contract TheCurrencyManager)"
															}
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21470:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
															"typeString": "contract TheCurrencyManager"
														}
													},
													"src": "21452:54:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
														"typeString": "contract TheCurrencyManager"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "21452:54:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2055,
															"name": "_currencyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "21540:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2054,
														"name": "NewCurrencyManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "21521:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21521:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2057,
												"nodeType": "EmitStatement",
												"src": "21516:41:8"
											}
										]
									},
									"functionSelector": "5ce052d7",
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2036,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2035,
												"name": "onlyOwner",
												"nameLocations": [
													"21348:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "21348:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "21348:9:8"
										}
									],
									"name": "updateCurrencyManager",
									"nameLocation": "21291:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "_currencyManager",
												"nameLocation": "21321:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "21313:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21313:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21312:26:8"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21358:0:8"
									},
									"scope": 2160,
									"src": "21282:282:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2086,
										"nodeType": "Block",
										"src": "21799:205:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2067,
																"name": "_executionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "21817:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21846:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21838:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2068,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21838:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21838:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21817:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21850:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															},
															"value": "Cannot update to a null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															}
														],
														"id": 2066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21809:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21809:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "21809:75:8"
											},
											{
												"expression": {
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2076,
														"name": "executionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "21894:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheExManager_$2294",
															"typeString": "contract TheExManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2078,
																"name": "_executionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "21926:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2077,
															"name": "TheExManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "21913:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheExManager_$2294_$",
																"typeString": "type(contract TheExManager)"
															}
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21913:31:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheExManager_$2294",
															"typeString": "contract TheExManager"
														}
													},
													"src": "21894:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheExManager_$2294",
														"typeString": "contract TheExManager"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "21894:50:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2083,
															"name": "_executionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "21979:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2082,
														"name": "NewExecutionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "21959:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21959:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2085,
												"nodeType": "EmitStatement",
												"src": "21954:43:8"
											}
										]
									},
									"functionSelector": "d4ff41dc",
									"id": 2087,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2063,
												"name": "onlyOwner",
												"nameLocations": [
													"21789:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "21789:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "21789:9:8"
										}
									],
									"name": "updateExecutionManager",
									"nameLocation": "21730:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "_executionManager",
												"nameLocation": "21761:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "21753:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21753:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21752:27:8"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21799:0:8"
									},
									"scope": 2160,
									"src": "21721:283:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "22265:122:8",
										"statements": [
											{
												"expression": {
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2094,
														"name": "protocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "22275:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2095,
														"name": "_protocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2089,
														"src": "22298:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22275:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2097,
												"nodeType": "ExpressionStatement",
												"src": "22275:44:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2099,
															"name": "_protocolFeeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "22358:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2098,
														"name": "NewProtocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "22334:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22334:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2101,
												"nodeType": "EmitStatement",
												"src": "22329:51:8"
											}
										]
									},
									"functionSelector": "1df47f80",
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2091,
												"name": "onlyOwner",
												"nameLocations": [
													"22255:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "22255:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "22255:9:8"
										}
									],
									"name": "updateProtocolFeeRecipient",
									"nameLocation": "22188:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "_protocolFeeRecipient",
												"nameLocation": "22223:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "22215:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22215:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22214:31:8"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22265:0:8"
									},
									"scope": 2160,
									"src": "22179:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "22624:215:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2111,
																"name": "_royaltyFeeManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "22642:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22672:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22664:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22664:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22664:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22642:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22676:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															},
															"value": "Cannot update to a null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22634:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22634:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2119,
												"nodeType": "ExpressionStatement",
												"src": "22634:76:8"
											},
											{
												"expression": {
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2120,
														"name": "royaltyFeeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "22720:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
															"typeString": "contract TheRoyaltyManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2122,
																"name": "_royaltyFeeManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "22758:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2121,
															"name": "TheRoyaltyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "22740:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheRoyaltyManager_$2310_$",
																"typeString": "type(contract TheRoyaltyManager)"
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22740:37:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
															"typeString": "contract TheRoyaltyManager"
														}
													},
													"src": "22720:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
														"typeString": "contract TheRoyaltyManager"
													}
												},
												"id": 2125,
												"nodeType": "ExpressionStatement",
												"src": "22720:57:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2127,
															"name": "_royaltyFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "22813:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2126,
														"name": "NewRoyaltyFeeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "22792:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22792:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "EmitStatement",
												"src": "22787:45:8"
											}
										]
									},
									"functionSelector": "c5498769",
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2107,
												"name": "onlyOwner",
												"nameLocations": [
													"22614:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "22614:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "22614:9:8"
										}
									],
									"name": "updateRoyaltyFeeManager",
									"nameLocation": "22553:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "_royaltyFeeManager",
												"nameLocation": "22585:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "22577:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22577:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22576:28:8"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22624:0:8"
									},
									"scope": 2160,
									"src": "22544:295:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "23079:227:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2139,
																"name": "_transferSelectorNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "23097:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23129:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23121:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2140,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23121:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23121:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23097:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23133:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															},
															"value": "Cannot update to a null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															}
														],
														"id": 2138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23089:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23089:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "23089:78:8"
											},
											{
												"expression": {
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2148,
														"name": "transferSelectorNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "23177:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
															"typeString": "contract TheTransferSelector"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2150,
																"name": "_transferSelectorNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "23219:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2149,
															"name": "TheTransferSelector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "23199:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheTransferSelector_$2368_$",
																"typeString": "type(contract TheTransferSelector)"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23199:41:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
															"typeString": "contract TheTransferSelector"
														}
													},
													"src": "23177:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
														"typeString": "contract TheTransferSelector"
													}
												},
												"id": 2153,
												"nodeType": "ExpressionStatement",
												"src": "23177:63:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2155,
															"name": "_transferSelectorNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "23278:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2154,
														"name": "NewTransferSelectorNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "23255:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23255:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2157,
												"nodeType": "EmitStatement",
												"src": "23250:49:8"
											}
										]
									},
									"functionSelector": "f75ff53f",
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2135,
												"name": "onlyOwner",
												"nameLocations": [
													"23069:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "23069:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "23069:9:8"
										}
									],
									"name": "updateTransferSelectorNFT",
									"nameLocation": "23004:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "_transferSelectorNFT",
												"nameLocation": "23038:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "23030:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23030:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23029:30:8"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23079:0:8"
									},
									"scope": 2160,
									"src": "22995:311:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2161,
							"src": "995:22314:8",
							"usedErrors": []
						}
					],
					"src": "33:23278:8"
				},
				"id": 8
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
					"exportedSymbols": {
						"OrderTypes": [
							2464
						],
						"TheExStrategy": [
							2200
						]
					},
					"id": 2201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../../libraries/OrderTypes.sol",
							"id": 2164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2201,
							"sourceUnit": 2465,
							"src": "57:61:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2163,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2464,
										"src": "65:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheExStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2200,
							"linearizedBaseContracts": [
								2200
							],
							"name": "TheExStrategy",
							"nameLocation": "130:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2a75ffee",
									"id": 2179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteBuy",
									"nameLocation": "159:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "204:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "173:39:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2165,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"173:10:9",
															"184:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "173:21:9"
													},
													"referencedDeclaration": 2419,
													"src": "173:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "245:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "214:39:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2168,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"214:10:9",
															"225:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "214:21:9"
													},
													"referencedDeclaration": 2406,
													"src": "214:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:82:9"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "315:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "315:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "333:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "354:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:70:9"
									},
									"scope": 2200,
									"src": "150:222:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d310677d",
									"id": 2194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteSell",
									"nameLocation": "387:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "433:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "402:39:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2181,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2180,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"402:10:9",
															"413:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "402:21:9"
													},
													"referencedDeclaration": 2419,
													"src": "402:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "474:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "443:39:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2183,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"443:10:9",
															"454:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "443:21:9"
													},
													"referencedDeclaration": 2406,
													"src": "443:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:82:9"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "544:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "562:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "583:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:70:9"
									},
									"scope": 2200,
									"src": "378:223:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dd1cda6",
									"id": 2199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "616:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:9"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "657:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:9"
									},
									"scope": 2200,
									"src": "607:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2201,
							"src": "120:548:9",
							"usedErrors": []
						}
					],
					"src": "32:637:9"
				},
				"id": 9
			},
			"contracts/Manager/interface/IWETH.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/IWETH.sol",
					"exportedSymbols": {
						"IWETH": [
							2220
						]
					},
					"id": 2221,
					"license": "GNU",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2202,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2220,
							"linearizedBaseContracts": [
								2220
							],
							"name": "IWETH",
							"nameLocation": "68:5:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 2205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "89:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "96:2:10"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:0:10"
									},
									"scope": 2220,
									"src": "80:36:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "131:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "148:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "140:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "160:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "152:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:27:10"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "185:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "185:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:6:10"
									},
									"scope": 2220,
									"src": "122:69:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 2219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "206:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "215:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:9:10"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:0:10"
									},
									"scope": 2220,
									"src": "197:36:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2221,
							"src": "58:177:10",
							"usedErrors": []
						}
					],
					"src": "32:204:10"
				},
				"id": 10
			},
			"contracts/Manager/interface/TheCurrencyManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheCurrencyManager.sol",
					"exportedSymbols": {
						"TheCurrencyManager": [
							2257
						]
					},
					"id": 2258,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheCurrencyManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2257,
							"linearizedBaseContracts": [
								2257
							],
							"name": "TheCurrencyManager",
							"nameLocation": "67:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8ab234b6",
									"id": 2227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCurrency",
									"nameLocation": "101:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "121:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "113:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:18:11"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:0:11"
									},
									"scope": 2257,
									"src": "92:48:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5d3a107",
									"id": 2232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeCurrency",
									"nameLocation": "155:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "178:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "170:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:18:11"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:0:11"
									},
									"scope": 2257,
									"src": "146:51:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "43b938c5",
									"id": 2239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCurrencyWhitelisted",
									"nameLocation": "212:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "242:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "234:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:18:11"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "275:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "275:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:6:11"
									},
									"scope": 2257,
									"src": "203:78:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f39b0a",
									"id": 2251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewWhitelistedCurrencies",
									"nameLocation": "296:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "cursor",
												"nameLocation": "330:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "322:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "346:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "338:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:30:11"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "375:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2245,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "375:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2246,
													"nodeType": "ArrayTypeName",
													"src": "375:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "393:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:27:11"
									},
									"scope": 2257,
									"src": "287:115:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1facfd9c",
									"id": 2256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewCountWhitelistedCurrencies",
									"nameLocation": "417:30:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:11"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "473:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:9:11"
									},
									"scope": 2257,
									"src": "408:74:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2258,
							"src": "57:427:11",
							"usedErrors": []
						}
					],
					"src": "32:453:11"
				},
				"id": 11
			},
			"contracts/Manager/interface/TheExManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheExManager.sol",
					"exportedSymbols": {
						"TheExManager": [
							2294
						]
					},
					"id": 2295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2259,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheExManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2294,
							"linearizedBaseContracts": [
								2294
							],
							"name": "TheExManager",
							"nameLocation": "67:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "223e5479",
									"id": 2264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addStrategy",
									"nameLocation": "95:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "115:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "107:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "106:18:12"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:0:12"
									},
									"scope": 2294,
									"src": "86:48:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "175188e8",
									"id": 2269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeStrategy",
									"nameLocation": "149:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "172:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "164:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:18:12"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "190:0:12"
									},
									"scope": 2294,
									"src": "140:51:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "999ba27c",
									"id": 2276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isStrategyWhitelisted",
									"nameLocation": "206:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "236:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "228:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:18:12"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "269:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:6:12"
									},
									"scope": 2294,
									"src": "197:78:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31fb5b1f",
									"id": 2288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewWhitelistedStrategies",
									"nameLocation": "290:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "cursor",
												"nameLocation": "324:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "316:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "340:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "332:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:30:12"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "369:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2282,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "369:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2283,
													"nodeType": "ArrayTypeName",
													"src": "369:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "387:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:27:12"
									},
									"scope": 2294,
									"src": "281:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "985e3a2f",
									"id": 2293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewCountWhitelistedStrategies",
									"nameLocation": "411:30:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:12"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "467:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:9:12"
									},
									"scope": 2294,
									"src": "402:74:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2295,
							"src": "57:421:12",
							"usedErrors": []
						}
					],
					"src": "32:447:12"
				},
				"id": 12
			},
			"contracts/Manager/interface/TheRoyaltyFeeManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheRoyaltyFeeManager.sol",
					"exportedSymbols": {
						"TheRoyaltyManager": [
							2310
						]
					},
					"id": 2311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheRoyaltyManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2310,
							"linearizedBaseContracts": [
								2310
							],
							"name": "TheRoyaltyManager",
							"nameLocation": "67:17:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f4f635fa",
									"id": 2309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRoyaltyFeeAndGetRecipient",
									"nameLocation": "100:34:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "152:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "144:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "180:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "172:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "205:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "197:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:83:13"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "241:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "250:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:18:13"
									},
									"scope": 2310,
									"src": "91:168:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2311,
							"src": "57:204:13",
							"usedErrors": []
						}
					],
					"src": "32:230:13"
				},
				"id": 13
			},
			"contracts/Manager/interface/TheTransferManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheTransferManager.sol",
					"exportedSymbols": {
						"TheTransferManager": [
							2326
						]
					},
					"id": 2327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheTransferManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2326,
							"linearizedBaseContracts": [
								2326
							],
							"name": "TheTransferManager",
							"nameLocation": "67:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "33f2fa9f",
									"id": 2325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferNonFungibleToken",
									"nameLocation": "101:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "143:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "135:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "171:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "163:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "193:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "185:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "213:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "205:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "238:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "230:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:125:14"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:0:14"
									},
									"scope": 2326,
									"src": "92:168:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2327,
							"src": "57:205:14",
							"usedErrors": []
						}
					],
					"src": "32:231:14"
				},
				"id": 14
			},
			"contracts/Manager/interface/TheUnemetaExchange.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheUnemetaExchange.sol",
					"exportedSymbols": {
						"OrderTypes": [
							2464
						],
						"TheUnemetaExchange": [
							2358
						]
					},
					"id": 2359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:15"
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../libraries/OrderTypes.sol",
							"id": 2330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2359,
							"sourceUnit": 2465,
							"src": "57:58:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2329,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2464,
										"src": "65:10:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheUnemetaExchange",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2358,
							"linearizedBaseContracts": [
								2358
							],
							"name": "TheUnemetaExchange",
							"nameLocation": "127:18:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "509a1a41",
									"id": 2339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "matchSellerOrdersWETH",
									"nameLocation": "161:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "223:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "192:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2331,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"192:10:15",
															"203:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "192:21:15"
													},
													"referencedDeclaration": 2419,
													"src": "192:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "272:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "241:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2334,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"241:10:15",
															"252:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "241:21:15"
													},
													"referencedDeclaration": 2406,
													"src": "241:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "182:104:15"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:0:15"
									},
									"scope": 2358,
									"src": "152:152:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "45ea7231",
									"id": 2348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "matchSellerOrders",
									"nameLocation": "319:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "368:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "337:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2340,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"337:10:15",
															"348:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "337:21:15"
													},
													"referencedDeclaration": 2419,
													"src": "337:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "409:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "378:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2343,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"378:10:15",
															"389:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "378:21:15"
													},
													"referencedDeclaration": 2406,
													"src": "378:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:82:15"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:15"
									},
									"scope": 2358,
									"src": "310:126:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "63521def",
									"id": 2357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "matchesBuyerOrder",
									"nameLocation": "451:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "500:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "469:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2350,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2349,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"469:10:15",
															"480:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "469:21:15"
													},
													"referencedDeclaration": 2419,
													"src": "469:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "541:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "510:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2352,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"510:10:15",
															"521:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "510:21:15"
													},
													"referencedDeclaration": 2406,
													"src": "510:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:82:15"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:15"
									},
									"scope": 2358,
									"src": "442:126:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2359,
							"src": "117:453:15",
							"usedErrors": []
						}
					],
					"src": "32:539:15"
				},
				"id": 15
			},
			"contracts/Manager/trans/interface/TheTransFerSelector.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/trans/interface/TheTransFerSelector.sol",
					"exportedSymbols": {
						"TheTransferSelector": [
							2368
						]
					},
					"id": 2369,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2360,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheTransferSelector",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2368,
							"linearizedBaseContracts": [
								2368
							],
							"name": "TheTransferSelector",
							"nameLocation": "67:19:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cc159493",
									"id": 2367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkTransferManagerForToken",
									"nameLocation": "102:28:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "139:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "131:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "131:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "130:20:16"
									},
									"returnParameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "174:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:9:16"
									},
									"scope": 2368,
									"src": "93:90:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2369,
							"src": "57:128:16",
							"usedErrors": []
						}
					],
					"src": "32:154:16"
				},
				"id": 16
			},
			"contracts/libraries/OrderTypes.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/OrderTypes.sol",
					"exportedSymbols": {
						"OrderTypes": [
							2464
						]
					},
					"id": 2465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2370,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OrderTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2464,
							"linearizedBaseContracts": [
								2464
							],
							"name": "OrderTypes",
							"nameLocation": "281:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2373,
									"mutability": "constant",
									"name": "MAKER_ORDER_HASH",
									"nameLocation": "573:16:17",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "547:111:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2371,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834303236316164653533326661316432633732393364663330616161646239623363363136666165353235613062353664336434313163383431613835303238",
										"id": 2372,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "592:66:17",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_29015347937064319049656096072445641795799588500519861140121276013747802492968_by_1",
											"typeString": "int_const 2901...(69 digits omitted)...2968"
										},
										"value": "0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "OrderTypes.MakerOrder",
									"id": 2406,
									"members": [
										{
											"constant": false,
											"id": 2375,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "698:10:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "693:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2374,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "693:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2377,
											"mutability": "mutable",
											"name": "signer",
											"nameLocation": "758:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "750:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2376,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "750:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2379,
											"mutability": "mutable",
											"name": "collection",
											"nameLocation": "811:10:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "803:18:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2378,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "803:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2381,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "861:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "853:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2380,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "853:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2383,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "904:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "896:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2382,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2385,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "948:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "940:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2384,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "940:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2387,
											"mutability": "mutable",
											"name": "strategy",
											"nameLocation": "1048:8:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1040:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2386,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1040:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2389,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "1154:8:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1146:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2388,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1146:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2391,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1205:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1197:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2390,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1197:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2393,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1339:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1331:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2392,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2395,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "1392:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1384:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2394,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1384:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2397,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1441:18:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1433:26:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2396,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1433:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2399,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "1551:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1545:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2398,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1545:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2401,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "1598:1:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1592:7:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2400,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1592:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2403,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "1644:1:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1636:9:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2402,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1636:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2405,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "1679:1:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1671:9:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2404,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1671:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MakerOrder",
									"nameLocation": "672:10:17",
									"nodeType": "StructDefinition",
									"scope": 2464,
									"src": "665:1038:17",
									"visibility": "public"
								},
								{
									"canonicalName": "OrderTypes.TakerOrder",
									"id": 2419,
									"members": [
										{
											"constant": false,
											"id": 2408,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "1742:10:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1737:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2407,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1737:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2410,
											"mutability": "mutable",
											"name": "taker",
											"nameLocation": "1802:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1794:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2409,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1794:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2412,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1839:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1831:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2411,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1831:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2414,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1894:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1886:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2413,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1886:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2416,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1919:18:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1911:26:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2415,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1911:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2418,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "2032:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "2026:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2417,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2026:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TakerOrder",
									"nameLocation": "1716:10:17",
									"nodeType": "StructDefinition",
									"scope": 2464,
									"src": "1709:368:17",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "2160:616:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2430,
																	"name": "MAKER_ORDER_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "2236:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2431,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2270:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2281:10:17",
																	"memberName": "isOrderAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2375,
																	"src": "2270:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"expression": {
																		"id": 2433,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2309:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2320:6:17",
																	"memberName": "signer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2377,
																	"src": "2309:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2435,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2344:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2355:10:17",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2379,
																	"src": "2344:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2437,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2383:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2394:5:17",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2381,
																	"src": "2383:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2439,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2417:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2428:7:17",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2383,
																	"src": "2417:18:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2441,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2453:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2464:6:17",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2385,
																	"src": "2453:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2443,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2488:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2499:8:17",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "2488:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2445,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2525:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2536:8:17",
																	"memberName": "currency",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2389,
																	"src": "2525:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2447,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2562:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2573:5:17",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2391,
																	"src": "2562:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2449,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2596:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2607:9:17",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2393,
																	"src": "2596:20:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2451,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2634:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2645:7:17",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2395,
																	"src": "2634:18:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2453,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2670:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2681:18:17",
																	"memberName": "minPercentageToAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2397,
																	"src": "2670:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 2456,
																				"name": "makerOrder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2422,
																				"src": "2727:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																					"typeString": "struct OrderTypes.MakerOrder memory"
																				}
																			},
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2738:6:17",
																			"memberName": "params",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2399,
																			"src": "2727:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 2455,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2717:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2717:28:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2428,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2208:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2212:6:17",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2208:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2208:551:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2427,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2185:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:584:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2426,
												"id": 2461,
												"nodeType": "Return",
												"src": "2170:599:17"
											}
										]
									},
									"id": 2463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2093:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "makerOrder",
												"nameLocation": "2116:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2098:28:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2420,
														"name": "MakerOrder",
														"nameLocations": [
															"2098:10:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "2098:10:17"
													},
													"referencedDeclaration": 2406,
													"src": "2098:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:30:17"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2151:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:9:17"
									},
									"scope": 2464,
									"src": "2084:692:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2465,
							"src": "273:2505:17",
							"usedErrors": []
						}
					],
					"src": "32:2747:17"
				},
				"id": 17
			},
			"contracts/libraries/SignatureChecker.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SignatureChecker.sol",
					"exportedSymbols": {
						"Address": [
							856
						],
						"IERC1271": [
							126
						],
						"SignatureChecker": [
							2588
						]
					},
					"id": 2589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2589,
							"sourceUnit": 857,
							"src": "57:66:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2467,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 856,
										"src": "65:7:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"id": 2470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2589,
							"sourceUnit": 127,
							"src": "124:73:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2469,
										"name": "IERC1271",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 126,
										"src": "132:8:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureChecker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2471,
								"nodeType": "StructuredDocumentation",
								"src": "199:121:18",
								"text": " @title SignatureChecker\n @notice This library allows verification of signatures for both EOAs and contracts."
							},
							"fullyImplemented": true,
							"id": 2588,
							"linearizedBaseContracts": [
								2588
							],
							"name": "SignatureChecker",
							"nameLocation": "329:16:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "820:639:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2487,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2479,
																		"src": "1077:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1069:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2485,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1069:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1069:10:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1083:66:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...7168"
																},
																"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
															},
															"src": "1069:80:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20496e76616c6964207320706172616d65746572",
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1163:22:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323",
																"typeString": "literal_string \" Invalid s parameter\""
															},
															"value": " Invalid s parameter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323",
																"typeString": "literal_string \" Invalid s parameter\""
															}
														],
														"id": 2484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1048:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1048:147:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "1048:147:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2495,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "1214:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3237",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1219:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"value": "27"
																},
																"src": "1214:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2498,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "1225:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3238",
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1230:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																},
																"src": "1225:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1214:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207620706172616d65746572",
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1234:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0",
																"typeString": "literal_string \"Invalid v parameter\""
															},
															"value": "Invalid v parameter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0",
																"typeString": "literal_string \"Invalid v parameter\""
															}
														],
														"id": 2494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1206:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1206:50:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2504,
												"nodeType": "ExpressionStatement",
												"src": "1206:50:18"
											},
											{
												"assignments": [
													2506
												],
												"declarations": [
													{
														"constant": false,
														"id": 2506,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "1337:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 2526,
														"src": "1329:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2505,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1329:7:18",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2513,
												"initialValue": {
													"arguments": [
														{
															"id": 2508,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2473,
															"src": "1356:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2509,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2475,
															"src": "1362:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2510,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2477,
															"src": "1365:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2511,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2479,
															"src": "1368:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2507,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "1346:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1346:24:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1329:41:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2515,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2506,
																"src": "1388:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1406:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1398:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2516,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1398:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1398:10:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1388:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20496e76616c6964207369676e6572",
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1410:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0",
																"typeString": "literal_string \" Invalid signer\""
															},
															"value": " Invalid signer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0",
																"typeString": "literal_string \" Invalid signer\""
															}
														],
														"id": 2514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1380:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1380:48:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2523,
												"nodeType": "ExpressionStatement",
												"src": "1380:48:18"
											},
											{
												"expression": {
													"id": 2524,
													"name": "signer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2506,
													"src": "1446:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2483,
												"id": 2525,
												"nodeType": "Return",
												"src": "1439:13:18"
											}
										]
									},
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "697:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "722:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "714:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2472,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "742:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "736:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2474,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "736:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "761:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "753:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "780:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "772:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:83:18"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "811:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:9:18"
									},
									"scope": 2588,
									"src": "688:771:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "1928:721:18",
										"statements": [
											{
												"assignments": [
													2545
												],
												"declarations": [
													{
														"constant": false,
														"id": 2545,
														"mutability": "mutable",
														"name": "digest",
														"nameLocation": "2105:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 2586,
														"src": "2097:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2544,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2097:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2554,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 2550,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2539,
																	"src": "2153:15:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2551,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2529,
																	"src": "2170:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2547,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2124:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2128:12:18",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2124:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2124:51:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2546,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2114:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2114:62:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2097:79:18"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 2557,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "2269:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2555,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2250:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$856_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2258:10:18",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 579,
														"src": "2250:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2250:26:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2584,
													"nodeType": "Block",
													"src": "2510:133:18",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2576,
																			"name": "digest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2545,
																			"src": "2606:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 2577,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "2614:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"id": 2578,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "2617:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 2579,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "2620:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2575,
																		"name": "recover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2527,
																		"src": "2598:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																			"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																		}
																	},
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2598:24:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2581,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2531,
																	"src": "2626:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2598:34:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 2543,
															"id": 2583,
															"nodeType": "Return",
															"src": "2591:41:18"
														}
													]
												},
												"id": 2585,
												"nodeType": "IfStatement",
												"src": "2246:397:18",
												"trueBody": {
													"id": 2574,
													"nodeType": "Block",
													"src": "2278:226:18",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2563,
																			"name": "digest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2545,
																			"src": "2445:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 2566,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2535,
																					"src": "2470:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2567,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "2473:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2568,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2533,
																					"src": "2476:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"expression": {
																					"id": 2564,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2453:3:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2457:12:18",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2453:16:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2453:25:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2560,
																					"name": "signer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2531,
																					"src": "2420:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2559,
																				"name": "IERC1271",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 126,
																				"src": "2411:8:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC1271_$126_$",
																					"typeString": "type(contract IERC1271)"
																				}
																			},
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2411:16:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC1271_$126",
																				"typeString": "contract IERC1271"
																			}
																		},
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2428:16:18",
																		"memberName": "isValidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 125,
																		"src": "2411:33:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
																		}
																	},
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2411:68:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30783136323662613765",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2483:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_371636862_by_1",
																		"typeString": "int_const 371636862"
																	},
																	"value": "0x1626ba7e"
																},
																"src": "2411:82:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 2543,
															"id": 2573,
															"nodeType": "Return",
															"src": "2404:89:18"
														}
													]
												}
											}
										]
									},
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1752:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1776:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1768:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2528,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1798:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1790:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1820:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1814:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2532,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1814:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1839:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1831:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1858:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1850:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "1877:15:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1869:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2538,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:140:18"
									},
									"returnParameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1922:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1922:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:6:18"
									},
									"scope": 2588,
									"src": "1743:906:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2589,
							"src": "321:2330:18",
							"usedErrors": []
						}
					],
					"src": "32:2620:18"
				},
				"id": 18
			}
		}
	}
}