{
	"id": "28456435962fa54602fb6cdeb60c45e1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/royalty/RoyaltyFeeSetter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nimport {IRoyaltyFeeRegistry} from \"./interface/IRoyaltyFeeRegistry.sol\";\nimport {IOwnable} from \"../interface/IOwnable.sol\";\n\n//  Register royalty fee\ncontract RoyaltyFeeSetter is Ownable {\n    // ERC721 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    // ERC1155 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    // ERC2981 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a;\n\n    address public immutable royaltyFeeRegistry;\n\n    //  Initialize a royalty fee registry\n    constructor(address _royaltyFeeRegistry) {\n        royaltyFeeRegistry = _royaltyFeeRegistry;\n    }\n\n\n    //\n    // function updateRoyaltyInfoForCollectionIfAdmin\n    //  @Description: Update royalty info if this is the admin of the collection\n    //  @param address collection address\n    //  @param address  Editor address\n    //  @param address  Wallet address receiving royalty fee\n    //  @param uint256 royalty fee 500=5%\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        //https://eips.ethereum.org/EIPS/eip-2981\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).admin(), \" Not the admin\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n    //\n    // tion updateRoyaltyInfoForCollectionIfOwner\n    //  @Description: Update royalty info if this is the owner of the collection\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfOwner(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).owner(), \" Not the owner\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n\n    //\n    // function updateOwnerOfRoyaltyFeeRegistry\n    //  @Description: Update Owner of the royalty fee registry\n    //  @param address\n    //  @return external\n    //\n    function updateOwnerOfRoyaltyFeeRegistry(address _owner) external onlyOwner {\n        IOwnable(royaltyFeeRegistry).transferOwnership(_owner);\n    }\n\n    //\n    // function updateRoyaltyFeeLimit\n    //  @Description: Update upper limit of royalty fee\n    //  @param uint256 500 = 5%\n    //  @return external\n    //\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external onlyOwner {\n        IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyFeeLimit(_royaltyFeeLimit);\n    }\n\n\n    //\n    // function checkForCollectionSetter\n    //  @Description: Confirm royalty fee seeting information\n    //  @param address\n    //  @return external Return editor, regarless of admin or owner\n    //\n    function checkForCollectionSetter(address collection) external view returns (address, uint8) {\n        (address currentSetter, ,) = IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection);\n\n        if (currentSetter != address(0)) {\n            return (currentSetter, 0);\n        }\n\n        try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {\n            if (interfaceSupport) {\n                return (address(0), 1);\n            }\n        } catch {}\n\n        try IOwnable(collection).owner() returns (address setter) {\n            return (setter, 2);\n        } catch {\n            try IOwnable(collection).admin() returns (address setter) {\n                return (setter, 3);\n            } catch {\n                return (address(0), 4);\n            }\n        }\n    }\n\n    //\n    // function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin\n    //  @Description: Update royalty fee information\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return internal\n    //\n    function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) internal {\n        (address currentSetter, ,) = IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection);\n        require(currentSetter == address(0), \"Already set\");\n\n        require(\n            (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||\n        IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)),\n            \" Not Set of ERC721/ERC1155\"\n        );\n\n        IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection(collection, setter, receiver, fee);\n    }\n}\n"
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IOwnable {\n    function transferOwnership(address newOwner) external;\n\n    function owner() external view returns (address);\n\n    function admin() external view returns (address);\n}\n"
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IRoyaltyFeeRegistry {\n    function updateRoyaltyInfoForCollection(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external;\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function royaltyInfo(address collection, uint256 amount) external view returns (address, uint256);\n\n    function royaltyFeeInfoCollection(address collection)\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"admin()": "f851a440",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/RoyaltyFeeSetter.sol": {
				"RoyaltyFeeSetter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_royaltyFeeRegistry",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC2981",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC721",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "checkForCollectionSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "updateOwnerOfRoyaltyFeeRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":358:5083  contract RoyaltyFeeSetter is Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":761:859  constructor(address _royaltyFeeRegistry) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":812:852  royaltyFeeRegistry = _royaltyFeeRegistry */\n  and\n  0x80\n  mstore\n    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":358:5083  contract RoyaltyFeeSetter is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":358:5083  contract RoyaltyFeeSetter is Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":358:5083  contract RoyaltyFeeSetter is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb9223c9d\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xb9223c9d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbc6bc0cd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc16f5156\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc54e5497\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe72ba456\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x33bf6156\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3755fa80\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xab016670\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb060dd86\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":516:572  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_3:\n      tag_16\n      shl(0xe1, 0x6cdb3d13)\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1983:2424  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_20\n      tag_25\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_26:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1124:1156   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1106:1157   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1094:1096   */\n      0x20\n        /* \"#utility.yul\":1079:1097   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_18\n        /* \"#utility.yul\":960:1163   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1224:1715  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_7:\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":606:662  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n    tag_8:\n      tag_16\n      shl(0xe1, 0x152a902d)\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2922:3094  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external onlyOwner {... */\n    tag_9:\n      tag_20\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":427:482  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n    tag_10:\n      tag_16\n      shl(0xe0, 0x80ac58cd)\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":669:712  address public immutable royaltyFeeRegistry */\n    tag_11:\n      tag_26\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3309:4146  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_12:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1793:1825   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":1775:1826   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1874:1878   */\n      0xff\n        /* \"#utility.yul\":1862:1879   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1857:1859   */\n      0x20\n        /* \"#utility.yul\":1842:1860   */\n      dup4\n      add\n        /* \"#utility.yul\":1835:1880   */\n      mstore\n        /* \"#utility.yul\":1748:1766   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3309:4146  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      tag_18\n        /* \"#utility.yul\":1605:1886   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2604:2751  function updateOwnerOfRoyaltyFeeRegistry(address _owner) external onlyOwner {... */\n    tag_13:\n      tag_20\n      tag_53\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_20\n      tag_56\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1983:2424  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_23:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2163:2222  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2163:2200  IERC165(collection).supportsInterface */\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2163:2222  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      tag_59\n      swap1\n      shl(0xe1, 0x152a902d)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2201:2221  INTERFACE_ID_ERC2981 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2163:2222  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      add\n      tag_19\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2162:2222  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2154:2247  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2375:2377   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2154:2247  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2357:2378   */\n      mstore\n        /* \"#utility.yul\":2414:2416   */\n      0x14\n        /* \"#utility.yul\":2394:2412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2387:2417   */\n      mstore\n      shl(0x60, 0x204d757374206e6f742062652045524332393831)\n        /* \"#utility.yul\":2433:2451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2426:2476   */\n      mstore\n        /* \"#utility.yul\":2493:2511   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2154:2247  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2288:2298  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2279:2305  IOwnable(collection).owner */\n      and\n      0x8da5cb5b\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2279:2307  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2265:2307  msg.sender == IOwnable(collection).owner() */\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2265:2275  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2265:2307  msg.sender == IOwnable(collection).owner() */\n      and\n      eq\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2257:2326  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2980:2982   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2257:2326  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2962:2983   */\n      mstore\n        /* \"#utility.yul\":3019:3021   */\n      0x0e\n        /* \"#utility.yul\":2999:3017   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2992:3022   */\n      mstore\n      shl(0x91, 0x102737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":3038:3056   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3031:3075   */\n      mstore\n        /* \"#utility.yul\":3092:3110   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2257:2326  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_65\n        /* \"#utility.yul\":2778:3116   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2257:2326  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n    tag_71:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2337:2417  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      tag_74\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2383:2393  collection */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2395:2401  setter */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2403:2411  receiver */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2413:2416  fee */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2337:2382  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin */\n      tag_75\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2337:2417  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1983:2424  function updateRoyaltyInfoForCollectionIfOwner(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1224:1715  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_32:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1454:1513  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1454:1491  IERC165(collection).supportsInterface */\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1454:1513  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      tag_84\n      swap1\n      shl(0xe1, 0x152a902d)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1492:1512  INTERFACE_ID_ERC2981 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1454:1513  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      add\n      tag_19\n      jump\t// in\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_87:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1453:1513  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1445:1538  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2375:2377   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1445:1538  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2357:2378   */\n      mstore\n        /* \"#utility.yul\":2414:2416   */\n      0x14\n        /* \"#utility.yul\":2394:2412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2387:2417   */\n      mstore\n      shl(0x60, 0x204d757374206e6f742062652045524332393831)\n        /* \"#utility.yul\":2433:2451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2426:2476   */\n      mstore\n        /* \"#utility.yul\":2493:2511   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1445:1538  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_65\n        /* \"#utility.yul\":2173:2517   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1445:1538  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_88:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1579:1589  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1570:1596  IOwnable(collection).admin */\n      and\n      0xf851a440\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1570:1598  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1556:1598  msg.sender == IOwnable(collection).admin() */\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1556:1566  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1556:1598  msg.sender == IOwnable(collection).admin() */\n      and\n      eq\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1548:1617  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3323:3325   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1548:1617  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3305:3326   */\n      mstore\n        /* \"#utility.yul\":3362:3364   */\n      0x0e\n        /* \"#utility.yul\":3342:3360   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3335:3365   */\n      mstore\n      shl(0x91, 0x102737ba103a34329030b236b4b7)\n        /* \"#utility.yul\":3381:3399   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3374:3418   */\n      mstore\n        /* \"#utility.yul\":3435:3453   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1548:1617  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_65\n        /* \"#utility.yul\":3121:3459   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2922:3094  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3008:3087  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n      shl(0xe0, 0xb9223c9d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3610:3635   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3028:3046  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3008:3069  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyFeeLimit */\n      and\n      swap1\n      0xb9223c9d\n      swap1\n        /* \"#utility.yul\":3583:3601   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3008:3087  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyFeeLimit(_royaltyFeeLimit) */\n    tag_100:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2922:3094  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3309:4146  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_49:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3441:3517  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      mload(0x40)\n      shl(0xe2, 0x38c7be47)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1124:1156   */\n      dup3\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3441:3517  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1106:1157   */\n      mstore\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3461:3479  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3441:3505  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection */\n      swap1\n      swap2\n      and\n      swap1\n      0xe31ef91c\n      swap1\n        /* \"#utility.yul\":1079:1097   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3441:3517  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3412:3517  (address currentSetter, ,) = IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      swap1\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3532:3559  currentSetter != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3528:3611  if (currentSetter != address(0)) {... */\n      tag_111\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3583:3596  currentSetter */\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3598:3599  0 */\n      0x00\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3309:4146  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3528:3611  if (currentSetter != address(0)) {... */\n    tag_111:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3625:3684  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3625:3662  IERC165(collection).supportsInterface */\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3625:3684  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      tag_112\n      swap1\n      shl(0xe1, 0x152a902d)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3663:3683  INTERFACE_ID_ERC2981 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3625:3684  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      add\n      tag_19\n      jump\t// in\n    tag_112:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_113\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_114\n      swap2\n      dup2\n      add\n      swap1\n      tag_63\n      jump\t// in\n    tag_114:\n      0x01\n    tag_113:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3621:3827  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3735:3751  interfaceSupport */\n      dup1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3731:3808  if (interfaceSupport) {... */\n      iszero\n      tag_120\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3787:3788  0 */\n      0x00\n      swap5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3791:3792  1 */\n      0x01\n      swap5\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3309:4146  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3731:3808  if (interfaceSupport) {... */\n    tag_120:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3685:3818  returns (bool interfaceSupport) {... */\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3621:3827  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n    tag_119:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3850:3860  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3841:3867  IOwnable(collection).owner */\n      and\n      0x8da5cb5b\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3841:3869  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_122\n      swap2\n      dup2\n      add\n      swap1\n      tag_70\n      jump\t// in\n    tag_122:\n      0x01\n    tag_121:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3837:4140  try IOwnable(collection).owner() returns (address setter) {... */\n      tag_123\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3972:3982  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3963:3989  IOwnable(collection).admin */\n      and\n      0xf851a440\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3963:3991  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_127\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_128\n      swap2\n      dup2\n      add\n      swap1\n      tag_70\n      jump\t// in\n    tag_128:\n      0x01\n    tag_127:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3959:4130  try IOwnable(collection).admin() returns (address setter) {... */\n      tag_129\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4109:4110  0 */\n      0x00\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4113:4114  4 */\n      0x04\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3309:4146  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3959:4130  try IOwnable(collection).admin() returns (address setter) {... */\n    tag_129:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4043:4049  setter */\n      swap5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4051:4052  3 */\n      0x03\n      swap5\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3309:4146  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3837:4140  try IOwnable(collection).owner() returns (address setter) {... */\n    tag_123:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3917:3923  setter */\n      swap5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3925:3926  2 */\n      0x02\n      swap5\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3309:4146  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2604:2751  function updateOwnerOfRoyaltyFeeRegistry(address _owner) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2690:2744  IOwnable(royaltyFeeRegistry).transferOwnership(_owner) */\n      mload(0x40)\n      shl(0xe0, 0xf2fde38b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1124:1156   */\n      dup3\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2690:2744  IOwnable(royaltyFeeRegistry).transferOwnership(_owner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1106:1157   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2699:2717  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2690:2736  IOwnable(royaltyFeeRegistry).transferOwnership */\n      and\n      swap1\n      0xf2fde38b\n      swap1\n        /* \"#utility.yul\":1079:1097   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2690:2744  IOwnable(royaltyFeeRegistry).transferOwnership(_owner) */\n      tag_100\n        /* \"#utility.yul\":960:1163   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4299:4301   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4281:4302   */\n      mstore\n        /* \"#utility.yul\":4338:4340   */\n      0x26\n        /* \"#utility.yul\":4318:4336   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4311:4341   */\n      mstore\n        /* \"#utility.yul\":4377:4411   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4357:4375   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4350:4412   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4428:4446   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4421:4457   */\n      mstore\n        /* \"#utility.yul\":4474:4493   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_65\n        /* \"#utility.yul\":4097:4499   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4398:5081  function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(... */\n    tag_75:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4606:4682  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      mload(0x40)\n      shl(0xe2, 0x38c7be47)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1124:1156   */\n      dup6\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4606:4682  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1106:1157   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4578:4599  address currentSetter */\n      0x00\n      swap2\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4626:4644  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4606:4670  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection */\n      swap1\n      swap2\n      and\n      swap1\n      0xe31ef91c\n      swap1\n        /* \"#utility.yul\":1079:1097   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4606:4682  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_153:\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4577:4682  (address currentSetter, ,) = IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      swap1\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4700:4727  currentSetter == address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4692:4743  require(currentSetter == address(0), \"Already set\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4706:4708   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4692:4743  require(currentSetter == address(0), \"Already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4688:4709   */\n      mstore\n        /* \"#utility.yul\":4745:4747   */\n      0x0b\n        /* \"#utility.yul\":4725:4743   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4718:4748   */\n      mstore\n      shl(0xaa, 0x105b1c9958591e481cd95d)\n        /* \"#utility.yul\":4764:4782   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4757:4798   */\n      mstore\n        /* \"#utility.yul\":4815:4833   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4692:4743  require(currentSetter == address(0), \"Already set\") */\n      tag_65\n        /* \"#utility.yul\":4504:4839   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4692:4743  require(currentSetter == address(0), \"Already set\") */\n    tag_154:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4776:4834  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4776:4813  IERC165(collection).supportsInterface */\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4776:4834  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      tag_157\n      swap1\n      shl(0xe0, 0x80ac58cd)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4814:4833  INTERFACE_ID_ERC721 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4776:4834  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x04\n      add\n      tag_19\n      jump\t// in\n    tag_157:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_160:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4776:4905  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||... */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4846:4905  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4846:4883  IERC165(collection).supportsInterface */\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4846:4905  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      tag_162\n      swap1\n      shl(0xe1, 0x6cdb3d13)\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4884:4904  INTERFACE_ID_ERC1155 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4846:4905  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x04\n      add\n      tag_19\n      jump\t// in\n    tag_162:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_165:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4754:4958  require(... */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5046:5048   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4754:4958  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5028:5049   */\n      mstore\n        /* \"#utility.yul\":5085:5087   */\n      0x1a\n        /* \"#utility.yul\":5065:5083   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5058:5088   */\n      mstore\n        /* \"#utility.yul\":5124:5152   */\n      0x204e6f7420536574206f66204552433732312f45524331313535000000000000\n        /* \"#utility.yul\":5104:5122   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5097:5153   */\n      mstore\n        /* \"#utility.yul\":5170:5188   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4754:4958  require(... */\n      tag_65\n        /* \"#utility.yul\":4844:5194   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4754:4958  require(... */\n    tag_166:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4969:5074  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      mload(0x40)\n      shl(0xe3, 0x177bf36d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5486:5501   */\n      dup7\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4969:5074  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5468:5502   */\n      mstore\n        /* \"#utility.yul\":5538:5553   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5518:5536   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5511:5554   */\n      mstore\n        /* \"#utility.yul\":5590:5605   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":5570:5588   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":5563:5606   */\n      mstore\n        /* \"#utility.yul\":5622:5640   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5615:5649   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4989:5007  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4969:5039  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection */\n      and\n      swap1\n      0xbbdf9b68\n      swap1\n        /* \"#utility.yul\":5402:5421   */\n      0x84\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4969:5074  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4567:5081  {... */\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":4398:5081  function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5862:5864   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5844:5865   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5881:5899   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5874:5904   */\n      mstore\n        /* \"#utility.yul\":5940:5974   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5920:5938   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5913:5975   */\n      mstore\n        /* \"#utility.yul\":5992:6010   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_65\n        /* \"#utility.yul\":5660:6016   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:216   */\n    tag_19:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":176:209   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":158:210   */\n      dup2\n      mstore\n        /* \"#utility.yul\":146:148   */\n      0x20\n        /* \"#utility.yul\":131:149   */\n      add\n      swap1\n        /* \"#utility.yul\":14:216   */\n      jump\t// out\n        /* \"#utility.yul\":221:352   */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":296:327   */\n      dup2\n      and\n        /* \"#utility.yul\":286:328   */\n      dup2\n      eq\n        /* \"#utility.yul\":276:346   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":342:343   */\n      0x00\n        /* \"#utility.yul\":339:340   */\n      dup1\n        /* \"#utility.yul\":332:344   */\n      revert\n        /* \"#utility.yul\":357:955   */\n    tag_22:\n        /* \"#utility.yul\":443:449   */\n      0x00\n        /* \"#utility.yul\":451:457   */\n      dup1\n        /* \"#utility.yul\":459:465   */\n      0x00\n        /* \"#utility.yul\":467:473   */\n      dup1\n        /* \"#utility.yul\":520:523   */\n      0x80\n        /* \"#utility.yul\":508:517   */\n      dup6\n        /* \"#utility.yul\":499:506   */\n      dup8\n        /* \"#utility.yul\":495:518   */\n      sub\n        /* \"#utility.yul\":491:524   */\n      slt\n        /* \"#utility.yul\":488:541   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":537:538   */\n      0x00\n        /* \"#utility.yul\":534:535   */\n      dup1\n        /* \"#utility.yul\":527:539   */\n      revert\n        /* \"#utility.yul\":488:541   */\n    tag_189:\n        /* \"#utility.yul\":576:585   */\n      dup5\n        /* \"#utility.yul\":563:586   */\n      calldataload\n        /* \"#utility.yul\":595:626   */\n      tag_190\n        /* \"#utility.yul\":620:625   */\n      dup2\n        /* \"#utility.yul\":595:626   */\n      tag_183\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":645:650   */\n      swap4\n      pop\n        /* \"#utility.yul\":702:704   */\n      0x20\n        /* \"#utility.yul\":687:705   */\n      dup6\n      add\n        /* \"#utility.yul\":674:706   */\n      calldataload\n        /* \"#utility.yul\":715:748   */\n      tag_191\n        /* \"#utility.yul\":674:706   */\n      dup2\n        /* \"#utility.yul\":715:748   */\n      tag_183\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":767:774   */\n      swap3\n      pop\n        /* \"#utility.yul\":826:828   */\n      0x40\n        /* \"#utility.yul\":811:829   */\n      dup6\n      add\n        /* \"#utility.yul\":798:830   */\n      calldataload\n        /* \"#utility.yul\":839:872   */\n      tag_192\n        /* \"#utility.yul\":798:830   */\n      dup2\n        /* \"#utility.yul\":839:872   */\n      tag_183\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":357:955   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":891:898   */\n      swap3\n      swap4\n        /* \"#utility.yul\":945:947   */\n      0x60\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":917:949   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":357:955   */\n      jump\t// out\n        /* \"#utility.yul\":1168:1348   */\n    tag_38:\n        /* \"#utility.yul\":1227:1233   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1268:1277   */\n      dup3\n        /* \"#utility.yul\":1259:1266   */\n      dup5\n        /* \"#utility.yul\":1255:1278   */\n      sub\n        /* \"#utility.yul\":1251:1283   */\n      slt\n        /* \"#utility.yul\":1248:1300   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":1296:1297   */\n      0x00\n        /* \"#utility.yul\":1293:1294   */\n      dup1\n        /* \"#utility.yul\":1286:1298   */\n      revert\n        /* \"#utility.yul\":1248:1300   */\n    tag_195:\n      pop\n        /* \"#utility.yul\":1319:1342   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1168:1348   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1353:1600   */\n    tag_48:\n        /* \"#utility.yul\":1412:1418   */\n      0x00\n        /* \"#utility.yul\":1465:1467   */\n      0x20\n        /* \"#utility.yul\":1453:1462   */\n      dup3\n        /* \"#utility.yul\":1444:1451   */\n      dup5\n        /* \"#utility.yul\":1440:1463   */\n      sub\n        /* \"#utility.yul\":1436:1468   */\n      slt\n        /* \"#utility.yul\":1433:1485   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":1481:1482   */\n      0x00\n        /* \"#utility.yul\":1478:1479   */\n      dup1\n        /* \"#utility.yul\":1471:1483   */\n      revert\n        /* \"#utility.yul\":1433:1485   */\n    tag_197:\n        /* \"#utility.yul\":1520:1529   */\n      dup2\n        /* \"#utility.yul\":1507:1530   */\n      calldataload\n        /* \"#utility.yul\":1539:1570   */\n      tag_198\n        /* \"#utility.yul\":1564:1569   */\n      dup2\n        /* \"#utility.yul\":1539:1570   */\n      tag_183\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1589:1594   */\n      swap4\n        /* \"#utility.yul\":1353:1600   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2168   */\n    tag_63:\n        /* \"#utility.yul\":1958:1964   */\n      0x00\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":1999:2008   */\n      dup3\n        /* \"#utility.yul\":1990:1997   */\n      dup5\n        /* \"#utility.yul\":1986:2009   */\n      sub\n        /* \"#utility.yul\":1982:2014   */\n      slt\n        /* \"#utility.yul\":1979:2031   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2027:2028   */\n      0x00\n        /* \"#utility.yul\":2024:2025   */\n      dup1\n        /* \"#utility.yul\":2017:2029   */\n      revert\n        /* \"#utility.yul\":1979:2031   */\n    tag_201:\n        /* \"#utility.yul\":2059:2068   */\n      dup2\n        /* \"#utility.yul\":2053:2069   */\n      mload\n        /* \"#utility.yul\":2112:2117   */\n      dup1\n        /* \"#utility.yul\":2105:2118   */\n      iszero\n        /* \"#utility.yul\":2098:2119   */\n      iszero\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2088:2120   */\n      eq\n        /* \"#utility.yul\":2078:2138   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":2134:2135   */\n      0x00\n        /* \"#utility.yul\":2131:2132   */\n      dup1\n        /* \"#utility.yul\":2124:2136   */\n      revert\n        /* \"#utility.yul\":2522:2773   */\n    tag_70:\n        /* \"#utility.yul\":2592:2598   */\n      0x00\n        /* \"#utility.yul\":2645:2647   */\n      0x20\n        /* \"#utility.yul\":2633:2642   */\n      dup3\n        /* \"#utility.yul\":2624:2631   */\n      dup5\n        /* \"#utility.yul\":2620:2643   */\n      sub\n        /* \"#utility.yul\":2616:2648   */\n      slt\n        /* \"#utility.yul\":2613:2665   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2661:2662   */\n      0x00\n        /* \"#utility.yul\":2658:2659   */\n      dup1\n        /* \"#utility.yul\":2651:2663   */\n      revert\n        /* \"#utility.yul\":2613:2665   */\n    tag_205:\n        /* \"#utility.yul\":2693:2702   */\n      dup2\n        /* \"#utility.yul\":2687:2703   */\n      mload\n        /* \"#utility.yul\":2712:2743   */\n      tag_198\n        /* \"#utility.yul\":2737:2742   */\n      dup2\n        /* \"#utility.yul\":2712:2743   */\n      tag_183\n      jump\t// in\n        /* \"#utility.yul\":3646:4092   */\n    tag_110:\n        /* \"#utility.yul\":3734:3740   */\n      0x00\n        /* \"#utility.yul\":3742:3748   */\n      dup1\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3803:3805   */\n      0x60\n        /* \"#utility.yul\":3791:3800   */\n      dup5\n        /* \"#utility.yul\":3782:3789   */\n      dup7\n        /* \"#utility.yul\":3778:3801   */\n      sub\n        /* \"#utility.yul\":3774:3806   */\n      slt\n        /* \"#utility.yul\":3771:3823   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3819:3820   */\n      0x00\n        /* \"#utility.yul\":3816:3817   */\n      dup1\n        /* \"#utility.yul\":3809:3821   */\n      revert\n        /* \"#utility.yul\":3771:3823   */\n    tag_211:\n        /* \"#utility.yul\":3851:3860   */\n      dup4\n        /* \"#utility.yul\":3845:3861   */\n      mload\n        /* \"#utility.yul\":3870:3901   */\n      tag_212\n        /* \"#utility.yul\":3895:3900   */\n      dup2\n        /* \"#utility.yul\":3870:3901   */\n      tag_183\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3970:3972   */\n      0x20\n        /* \"#utility.yul\":3955:3973   */\n      dup6\n      add\n        /* \"#utility.yul\":3949:3974   */\n      mload\n        /* \"#utility.yul\":3920:3925   */\n      swap1\n      swap4\n      pop\n        /* \"#utility.yul\":3983:4016   */\n      tag_213\n        /* \"#utility.yul\":3949:3974   */\n      dup2\n        /* \"#utility.yul\":3983:4016   */\n      tag_183\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4035:4042   */\n      dup1\n        /* \"#utility.yul\":4025:4042   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":4082:4084   */\n      0x40\n        /* \"#utility.yul\":4071:4080   */\n      dup5\n        /* \"#utility.yul\":4067:4085   */\n      add\n        /* \"#utility.yul\":4061:4086   */\n      mload\n        /* \"#utility.yul\":4051:4086   */\n      swap1\n      pop\n        /* \"#utility.yul\":3646:4092   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dc7dea71cf51dcbf56fa8faf47afd763ab9976adf2ce7651e9cfe0e80a9c57d764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 73,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:6"
															},
															"nodeType": "YulIf",
															"src": "204:70:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:290:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50604051610e1c380380610e1c83398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b608051610d1561010760003960008181610166015281816105010152818161058f015281816107a7015281816108710152610a980152610d156000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b9223c9d11610071578063b9223c9d14610140578063bc6bc0cd14610153578063c16f515614610161578063c54e549714610188578063e72ba456146101bc578063f2fde38b146101cf57600080fd5b806333bf6156146100b95780633755fa80146100dd578063715018a6146100f25780638da5cb5b146100fa578063ab0166701461011f578063b060dd8614610132575b600080fd5b6100c7636cdb3d1360e11b81565b6040516100d49190610ba5565b60405180910390f35b6100f06100eb366004610bcf565b6101e2565b005b6100f0610364565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d4565b6100f061012d366004610bcf565b610378565b6100c763152a902d60e11b81565b6100f061014e366004610c20565b6104e3565b6100c76380ac58cd60e01b81565b6101077f000000000000000000000000000000000000000000000000000000000000000081565b61019b610196366004610c39565b610569565b604080516001600160a01b03909316835260ff9091166020830152016100d4565b6100f06101ca366004610c39565b610780565b6100f06101dd366004610c39565b6107d6565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a7906102159063152a902d60e11b90600401610ba5565b602060405180830381865afa158015610232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102569190610c5d565b1561029f5760405162461bcd60e51b8152602060048201526014602482015273204d757374206e6f74206265204552433239383160601b60448201526064015b60405180910390fd5b836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190610c7f565b6001600160a01b0316336001600160a01b0316146103525760405162461bcd60e51b815260206004820152600e60248201526d102737ba103a34329037bbb732b960911b6044820152606401610296565b61035e8484848461084f565b50505050565b61036c610afb565b6103766000610b55565b565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a7906103ab9063152a902d60e11b90600401610ba5565b602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190610c5d565b156104305760405162461bcd60e51b8152602060048201526014602482015273204d757374206e6f74206265204552433239383160601b6044820152606401610296565b836001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610c7f565b6001600160a01b0316336001600160a01b0316146103525760405162461bcd60e51b815260206004820152600e60248201526d102737ba103a34329030b236b4b760911b6044820152606401610296565b6104eb610afb565b60405163b9223c9d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b9223c9d906024015b600060405180830381600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b5050505050565b6040516338c7be4760e21b81526001600160a01b038281166004830152600091829182917f00000000000000000000000000000000000000000000000000000000000000009091169063e31ef91c90602401606060405180830381865afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc9190610c9c565b50909150506001600160a01b0381161561061a579360009350915050565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061064d9063152a902d60e11b90600401610ba5565b602060405180830381865afa925050508015610686575060408051601f3d908101601f1916820190925261068391810190610c5d565b60015b156106a157801561069f57506000946001945092505050565b505b836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156106fb575060408051601f3d908101601f191682019092526106f891810190610c7f565b60015b61077557836001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610759575060408051601f3d908101601f1916820190925261075691810190610c7f565b60015b61076a575060009360049350915050565b946003945092505050565b946002945092505050565b610788610afb565b60405163f2fde38b60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063f2fde38b90602401610534565b6107de610afb565b6001600160a01b0381166108435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610296565b61084c81610b55565b50565b6040516338c7be4760e21b81526001600160a01b0385811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e31ef91c90602401606060405180830381865afa1580156108ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108de9190610c9c565b50909150506001600160a01b038116156109285760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b6044820152606401610296565b6040516301ffc9a760e01b81526001600160a01b038616906301ffc9a79061095b906380ac58cd60e01b90600401610ba5565b602060405180830381865afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190610c5d565b80610a1657506040516301ffc9a760e01b81526001600160a01b038616906301ffc9a7906109d590636cdb3d1360e11b90600401610ba5565b602060405180830381865afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190610c5d565b610a625760405162461bcd60e51b815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f455243313135350000000000006044820152606401610296565b60405163177bf36d60e31b81526001600160a01b03868116600483015285811660248301528481166044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063bbdf9b6890608401600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b031633146103765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610296565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160e01b031991909116815260200190565b6001600160a01b038116811461084c57600080fd5b60008060008060808587031215610be557600080fd5b8435610bf081610bba565b93506020850135610c0081610bba565b92506040850135610c1081610bba565b9396929550929360600135925050565b600060208284031215610c3257600080fd5b5035919050565b600060208284031215610c4b57600080fd5b8135610c5681610bba565b9392505050565b600060208284031215610c6f57600080fd5b81518015158114610c5657600080fd5b600060208284031215610c9157600080fd5b8151610c5681610bba565b600080600060608486031215610cb157600080fd5b8351610cbc81610bba565b6020850151909350610ccd81610bba565b8092505060408401519050925092509256fea2646970667358221220dc7dea71cf51dcbf56fa8faf47afd763ab9976adf2ce7651e9cfe0e80a9c57d764736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE1C CODESIZE SUB DUP1 PUSH2 0xE1C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x99 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xD15 PUSH2 0x107 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x166 ADD MSTORE DUP2 DUP2 PUSH2 0x501 ADD MSTORE DUP2 DUP2 PUSH2 0x58F ADD MSTORE DUP2 DUP2 PUSH2 0x7A7 ADD MSTORE DUP2 DUP2 PUSH2 0x871 ADD MSTORE PUSH2 0xA98 ADD MSTORE PUSH2 0xD15 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9223C9D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC16F5156 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xE72BA456 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33BF6156 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xAB016670 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF0 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST PUSH2 0xC7 PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xC20 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0xC7 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x780 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x215 SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST ISZERO PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x204D757374206E6F742062652045524332393831 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x102737BA103A34329037BBB732B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x35E DUP5 DUP5 DUP5 DUP5 PUSH2 0x84F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x36C PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x376 PUSH1 0x0 PUSH2 0xB55 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x3AB SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST ISZERO PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x204D757374206E6F742062652045524332393831 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x102737BA103A34329030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x4EB PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9223C9D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB9223C9D SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38C7BE47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE31EF91C SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x61A JUMPI SWAP4 PUSH1 0x0 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x64D SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x686 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x683 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x6A1 JUMPI DUP1 ISZERO PUSH2 0x69F JUMPI POP PUSH1 0x0 SWAP5 PUSH1 0x1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x6FB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x6F8 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x775 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x759 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x756 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x76A JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x4 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP5 PUSH1 0x3 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST SWAP5 PUSH1 0x2 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x788 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH1 0x24 ADD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x7DE PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x84C DUP2 PUSH2 0xB55 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38C7BE47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE31EF91C SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105B1C9958591E481CD95D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x95B SWAP1 PUSH4 0x80AC58CD PUSH1 0xE0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x978 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99C SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST DUP1 PUSH2 0xA16 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x9D5 SWAP1 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA16 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177BF36D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xBBDF9B68 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xBF0 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xC00 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xC10 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC56 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC56 DUP2 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0xCBC DUP2 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0xCCD DUP2 PUSH2 0xBBA JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH30 0xEA71CF51DCBF56FA8FAF47AFD763AB9976ADF2CE7651E9CFE0E80A9C57D7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "358:4725:4:-:0;;;761:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;-1:-1:-1;;;;;812:40:4;;;358:4725;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;:::-;358:4725:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC1155_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC2981_185": {
									"entryPoint": null,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC721_179": {
									"entryPoint": null,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2811,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2901,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateRoyaltyInfoForCollectionIfOwnerOrAdmin_466": {
									"entryPoint": 2127,
									"id": 466,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@checkForCollectionSetter_407": {
									"entryPoint": 1385,
									"id": 407,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 868,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeRegistry_187": {
									"entryPoint": null,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2006,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateOwnerOfRoyaltyFeeRegistry_296": {
									"entryPoint": 1920,
									"id": 296,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeLimit_311": {
									"entryPoint": 1251,
									"id": 311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfAdmin_239": {
									"entryPoint": 888,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfOwner_281": {
									"entryPoint": 482,
									"id": 281,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6018:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "113:103:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "123:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "192:3:6",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "197:10:6",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "188:20:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "176:33:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "158:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "158:52:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "82:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "104:4:6",
														"type": ""
													}
												],
												"src": "14:202:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:86:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "330:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "339:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "332:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "332:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "332:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "289:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "300:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "315:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "320:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "311:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "311:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "324:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "307:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "307:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "296:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "296:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "286:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "286:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:50:6"
															},
															"nodeType": "YulIf",
															"src": "276:70:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "255:5:6",
														"type": ""
													}
												],
												"src": "221:131:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "478:477:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "525:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "534:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "527:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "527:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "527:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "508:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "495:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "520:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "491:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:33:6"
															},
															"nodeType": "YulIf",
															"src": "488:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "550:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "576:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "563:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "554:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "620:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "595:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "595:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "595:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "635:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "645:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "635:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "659:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "691:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "702:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "687:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "687:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "674:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "663:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "740:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "715:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "715:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "715:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "757:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "767:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "815:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "826:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "811:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "811:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "798:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "798:32:6"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "787:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "864:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "839:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "839:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "881:17:6",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "891:7:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "881:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "907:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "917:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "917:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "907:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "420:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "431:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "443:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "451:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "459:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "467:6:6",
														"type": ""
													}
												],
												"src": "357:598:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1061:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1071:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1083:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1079:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1071:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1128:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1144:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1149:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1140:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1140:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1153:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1136:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1136:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1106:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1106:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1030:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1041:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1052:4:6",
														"type": ""
													}
												],
												"src": "960:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1238:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1284:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1293:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1296:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1286:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1286:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1286:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1259:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1255:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1255:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1251:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:32:6"
															},
															"nodeType": "YulIf",
															"src": "1248:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1309:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1332:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1319:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1319:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1309:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1204:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1215:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1227:6:6",
														"type": ""
													}
												],
												"src": "1168:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1423:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1469:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1478:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1471:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1471:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1471:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1444:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1453:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1436:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:32:6"
															},
															"nodeType": "YulIf",
															"src": "1433:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1494:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1520:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1507:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1498:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1564:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1539:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1539:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1579:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1589:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1579:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1389:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1400:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1412:6:6",
														"type": ""
													}
												],
												"src": "1353:247:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:156:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1752:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1763:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1748:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1748:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1740:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1782:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1797:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1813:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1818:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1809:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1809:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1822:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1805:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1805:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1793:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1793:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1775:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1775:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1846:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1857:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1866:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1874:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1862:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1862:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1835:45:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1691:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1702:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1710:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1721:4:6",
														"type": ""
													}
												],
												"src": "1605:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1969:199:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2015:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2027:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2017:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2017:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2017:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1990:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1999:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1986:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1986:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1982:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:32:6"
															},
															"nodeType": "YulIf",
															"src": "1979:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2040:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2059:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2053:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2044:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2122:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2131:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2134:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2124:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2124:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2124:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2091:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2112:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2105:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2105:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2098:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2098:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2088:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2088:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:40:6"
															},
															"nodeType": "YulIf",
															"src": "2078:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2147:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2157:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1935:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1946:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1958:6:6",
														"type": ""
													}
												],
												"src": "1891:277:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2347:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2364:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2375:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2357:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2398:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2409:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2394:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2414:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2387:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2387:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2437:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2448:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2433:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2433:18:6"
																	},
																	{
																		"hexValue": "204d757374206e6f742062652045524332393831",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2453:22:6",
																		"type": "",
																		"value": " Must not be ERC2981"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:50:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2485:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2497:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2508:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2493:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2485:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2324:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2338:4:6",
														"type": ""
													}
												],
												"src": "2173:344:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2603:170:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2649:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2658:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2661:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2651:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2651:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2651:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2624:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2633:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2620:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2620:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2645:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:32:6"
															},
															"nodeType": "YulIf",
															"src": "2613:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2674:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2693:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2687:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2678:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2737:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2712:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2712:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2752:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2762:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2569:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2580:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2592:6:6",
														"type": ""
													}
												],
												"src": "2522:251:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2952:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2969:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2980:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2962:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3003:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2999:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3019:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2992:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2992:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3042:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3053:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3038:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3038:18:6"
																	},
																	{
																		"hexValue": "204e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3058:16:6",
																		"type": "",
																		"value": " Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3031:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3031:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3031:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3084:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3096:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3092:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3084:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2929:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2943:4:6",
														"type": ""
													}
												],
												"src": "2778:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3295:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3312:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3305:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3305:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3305:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3346:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3357:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3342:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3362:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3335:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3335:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3335:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3385:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3396:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3381:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:18:6"
																	},
																	{
																		"hexValue": "204e6f74207468652061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3401:16:6",
																		"type": "",
																		"value": " Not the admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3374:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3374:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3374:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3427:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3439:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3435:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3435:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3427:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3272:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3286:4:6",
														"type": ""
													}
												],
												"src": "3121:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3565:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3575:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3587:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3583:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3575:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3628:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3534:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3464:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3761:331:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3807:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3816:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3819:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3809:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3809:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3809:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3782:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3778:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3778:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3774:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:32:6"
															},
															"nodeType": "YulIf",
															"src": "3771:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3832:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3851:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3845:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3845:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3836:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3895:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3870:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3870:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3910:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3920:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3934:40:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3959:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3970:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3955:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3949:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:25:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3938:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4008:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3983:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3983:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4025:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4035:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4025:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4051:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4071:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4082:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4067:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4067:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4061:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:25:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4051:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3711:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3722:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3734:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3742:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3750:6:6",
														"type": ""
													}
												],
												"src": "3646:446:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4271:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4288:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4281:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4281:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4322:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4333:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4318:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4318:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4338:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4311:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4311:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4361:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4372:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4357:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4357:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4377:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4350:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4350:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4350:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4432:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4443:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4428:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4448:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4421:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4421:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4466:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4478:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4489:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4474:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4474:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4466:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4248:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4262:4:6",
														"type": ""
													}
												],
												"src": "4097:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4678:161:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4695:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4706:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4688:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4729:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4740:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4725:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4725:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:6",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4718:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4718:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4768:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4779:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4764:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4764:18:6"
																	},
																	{
																		"hexValue": "416c726561647920736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4784:13:6",
																		"type": "",
																		"value": "Already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4757:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4757:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4757:41:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4807:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4819:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4830:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4815:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4807:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4655:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4669:4:6",
														"type": ""
													}
												],
												"src": "4504:335:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5018:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5035:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5046:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5028:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5069:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5080:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5065:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5065:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5085:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5058:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5058:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5058:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5108:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5119:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5104:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5104:18:6"
																	},
																	{
																		"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5124:28:6",
																		"type": "",
																		"value": " Not Set of ERC721/ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5097:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5097:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5162:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5174:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5185:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5170:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5162:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4995:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5009:4:6",
														"type": ""
													}
												],
												"src": "4844:350:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5384:271:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5394:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5406:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5417:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5402:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5402:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5394:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5430:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5448:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5453:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5444:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5457:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5440:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5440:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5434:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5475:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5490:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5498:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5486:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5486:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5468:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5468:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5522:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5533:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5518:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5542:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5550:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5538:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5538:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5511:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5574:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5585:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5570:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5570:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5594:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5602:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5590:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5590:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5563:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5563:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5637:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5622:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5622:18:6"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5642:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5615:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5329:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5340:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5348:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5356:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5364:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5375:4:6",
														"type": ""
													}
												],
												"src": "5199:456:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5834:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5851:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5862:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5844:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5885:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5896:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5881:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5881:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5874:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5874:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5924:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5935:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5920:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5920:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5940:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5913:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5913:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5984:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5996:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6007:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5992:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5984:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5811:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5825:4:6",
														"type": ""
													}
												],
												"src": "5660:356:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \" Must not be ERC2981\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \" Not Set of ERC721/ERC1155\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"187": [
									{
										"length": 32,
										"start": 358
									},
									{
										"length": 32,
										"start": 1281
									},
									{
										"length": 32,
										"start": 1423
									},
									{
										"length": 32,
										"start": 1959
									},
									{
										"length": 32,
										"start": 2161
									},
									{
										"length": 32,
										"start": 2712
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b9223c9d11610071578063b9223c9d14610140578063bc6bc0cd14610153578063c16f515614610161578063c54e549714610188578063e72ba456146101bc578063f2fde38b146101cf57600080fd5b806333bf6156146100b95780633755fa80146100dd578063715018a6146100f25780638da5cb5b146100fa578063ab0166701461011f578063b060dd8614610132575b600080fd5b6100c7636cdb3d1360e11b81565b6040516100d49190610ba5565b60405180910390f35b6100f06100eb366004610bcf565b6101e2565b005b6100f0610364565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d4565b6100f061012d366004610bcf565b610378565b6100c763152a902d60e11b81565b6100f061014e366004610c20565b6104e3565b6100c76380ac58cd60e01b81565b6101077f000000000000000000000000000000000000000000000000000000000000000081565b61019b610196366004610c39565b610569565b604080516001600160a01b03909316835260ff9091166020830152016100d4565b6100f06101ca366004610c39565b610780565b6100f06101dd366004610c39565b6107d6565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a7906102159063152a902d60e11b90600401610ba5565b602060405180830381865afa158015610232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102569190610c5d565b1561029f5760405162461bcd60e51b8152602060048201526014602482015273204d757374206e6f74206265204552433239383160601b60448201526064015b60405180910390fd5b836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190610c7f565b6001600160a01b0316336001600160a01b0316146103525760405162461bcd60e51b815260206004820152600e60248201526d102737ba103a34329037bbb732b960911b6044820152606401610296565b61035e8484848461084f565b50505050565b61036c610afb565b6103766000610b55565b565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a7906103ab9063152a902d60e11b90600401610ba5565b602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190610c5d565b156104305760405162461bcd60e51b8152602060048201526014602482015273204d757374206e6f74206265204552433239383160601b6044820152606401610296565b836001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610c7f565b6001600160a01b0316336001600160a01b0316146103525760405162461bcd60e51b815260206004820152600e60248201526d102737ba103a34329030b236b4b760911b6044820152606401610296565b6104eb610afb565b60405163b9223c9d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b9223c9d906024015b600060405180830381600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b5050505050565b6040516338c7be4760e21b81526001600160a01b038281166004830152600091829182917f00000000000000000000000000000000000000000000000000000000000000009091169063e31ef91c90602401606060405180830381865afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc9190610c9c565b50909150506001600160a01b0381161561061a579360009350915050565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061064d9063152a902d60e11b90600401610ba5565b602060405180830381865afa925050508015610686575060408051601f3d908101601f1916820190925261068391810190610c5d565b60015b156106a157801561069f57506000946001945092505050565b505b836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156106fb575060408051601f3d908101601f191682019092526106f891810190610c7f565b60015b61077557836001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610759575060408051601f3d908101601f1916820190925261075691810190610c7f565b60015b61076a575060009360049350915050565b946003945092505050565b946002945092505050565b610788610afb565b60405163f2fde38b60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063f2fde38b90602401610534565b6107de610afb565b6001600160a01b0381166108435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610296565b61084c81610b55565b50565b6040516338c7be4760e21b81526001600160a01b0385811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e31ef91c90602401606060405180830381865afa1580156108ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108de9190610c9c565b50909150506001600160a01b038116156109285760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b6044820152606401610296565b6040516301ffc9a760e01b81526001600160a01b038616906301ffc9a79061095b906380ac58cd60e01b90600401610ba5565b602060405180830381865afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190610c5d565b80610a1657506040516301ffc9a760e01b81526001600160a01b038616906301ffc9a7906109d590636cdb3d1360e11b90600401610ba5565b602060405180830381865afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190610c5d565b610a625760405162461bcd60e51b815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f455243313135350000000000006044820152606401610296565b60405163177bf36d60e31b81526001600160a01b03868116600483015285811660248301528481166044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063bbdf9b6890608401600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b031633146103765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610296565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160e01b031991909116815260200190565b6001600160a01b038116811461084c57600080fd5b60008060008060808587031215610be557600080fd5b8435610bf081610bba565b93506020850135610c0081610bba565b92506040850135610c1081610bba565b9396929550929360600135925050565b600060208284031215610c3257600080fd5b5035919050565b600060208284031215610c4b57600080fd5b8135610c5681610bba565b9392505050565b600060208284031215610c6f57600080fd5b81518015158114610c5657600080fd5b600060208284031215610c9157600080fd5b8151610c5681610bba565b600080600060608486031215610cb157600080fd5b8351610cbc81610bba565b6020850151909350610ccd81610bba565b8092505060408401519050925092509256fea2646970667358221220dc7dea71cf51dcbf56fa8faf47afd763ab9976adf2ce7651e9cfe0e80a9c57d764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9223C9D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC16F5156 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xE72BA456 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33BF6156 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xAB016670 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF0 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST PUSH2 0xC7 PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xC20 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0xC7 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x780 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x215 SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x232 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST ISZERO PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x204D757374206E6F742062652045524332393831 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x102737BA103A34329037BBB732B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x35E DUP5 DUP5 DUP5 DUP5 PUSH2 0x84F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x36C PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x376 PUSH1 0x0 PUSH2 0xB55 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x3AB SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST ISZERO PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x204D757374206E6F742062652045524332393831 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x102737BA103A34329030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x4EB PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9223C9D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB9223C9D SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38C7BE47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE31EF91C SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x61A JUMPI SWAP4 PUSH1 0x0 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x64D SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x686 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x683 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x6A1 JUMPI DUP1 ISZERO PUSH2 0x69F JUMPI POP PUSH1 0x0 SWAP5 PUSH1 0x1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x6FB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x6F8 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x775 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x759 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x756 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x76A JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x4 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP5 PUSH1 0x3 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST SWAP5 PUSH1 0x2 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x788 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH1 0x24 ADD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x7DE PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x84C DUP2 PUSH2 0xB55 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38C7BE47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE31EF91C SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105B1C9958591E481CD95D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x95B SWAP1 PUSH4 0x80AC58CD PUSH1 0xE0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x978 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99C SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST DUP1 PUSH2 0xA16 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x9D5 SWAP1 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA16 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177BF36D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xBBDF9B68 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xBF0 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xC00 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xC10 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC56 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC56 DUP2 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0xCBC DUP2 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0xCCD DUP2 PUSH2 0xBBA JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH30 0xEA71CF51DCBF56FA8FAF47AFD763AB9976ADF2CE7651E9CFE0E80A9C57D7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "358:4725:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:56;;-1:-1:-1;;;516:56:4;;;;;;;;;:::i;:::-;;;;;;;;1983:441;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;1124:32:6;;;1106:51;;1094:2;1079:18;1201:85:0;960:203:6;1224:491:4;;;;;;:::i;:::-;;:::i;606:56::-;;-1:-1:-1;;;606:56:4;;2922:172;;;;;;:::i;:::-;;:::i;427:55::-;;-1:-1:-1;;;427:55:4;;669:43;;;;;3309:837;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1793:32:6;;;1775:51;;1874:4;1862:17;;;1857:2;1842:18;;1835:45;1748:18;3309:837:4;1605:281:6;2604:147:4;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1983:441:4:-;2163:59;;-1:-1:-1;;;2163:59:4;;-1:-1:-1;;;;;2163:37:4;;;;;:59;;-1:-1:-1;;;2201:20:4;2163:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2162:60;2154:93;;;;-1:-1:-1;;;2154:93:4;;2375:2:6;2154:93:4;;;2357:21:6;2414:2;2394:18;;;2387:30;-1:-1:-1;;;2433:18:6;;;2426:50;2493:18;;2154:93:4;;;;;;;;;2288:10;-1:-1:-1;;;;;2279:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2265:42:4;:10;-1:-1:-1;;;;;2265:42:4;;2257:69;;;;-1:-1:-1;;;2257:69:4;;2980:2:6;2257:69:4;;;2962:21:6;3019:2;2999:18;;;2992:30;-1:-1:-1;;;3038:18:6;;;3031:44;3092:18;;2257:69:4;2778:338:6;2257:69:4;2337:80;2383:10;2395:6;2403:8;2413:3;2337:45;:80::i;:::-;1983:441;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1224:491:4:-;1454:59;;-1:-1:-1;;;1454:59:4;;-1:-1:-1;;;;;1454:37:4;;;;;:59;;-1:-1:-1;;;1492:20:4;1454:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1453:60;1445:93;;;;-1:-1:-1;;;1445:93:4;;2375:2:6;1445:93:4;;;2357:21:6;2414:2;2394:18;;;2387:30;-1:-1:-1;;;2433:18:6;;;2426:50;2493:18;;1445:93:4;2173:344:6;1445:93:4;1579:10;-1:-1:-1;;;;;1570:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1556:42:4;:10;-1:-1:-1;;;;;1556:42:4;;1548:69;;;;-1:-1:-1;;;1548:69:4;;3323:2:6;1548:69:4;;;3305:21:6;3362:2;3342:18;;;3335:30;-1:-1:-1;;;3381:18:6;;;3374:44;3435:18;;1548:69:4;3121:338:6;2922:172:4;1094:13:0;:11;:13::i;:::-;3008:79:4::1;::::0;-1:-1:-1;;;3008:79:4;;::::1;::::0;::::1;3610:25:6::0;;;3028:18:4::1;-1:-1:-1::0;;;;;3008:61:4::1;::::0;::::1;::::0;3583:18:6;;3008:79:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2922:172:::0;:::o;3309:837::-;3441:76;;-1:-1:-1;;;3441:76:4;;-1:-1:-1;;;;;1124:32:6;;;3441:76:4;;;1106:51:6;-1:-1:-1;;;;;;3461:18:4;3441:64;;;;;;1079:18:6;;3441:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3412:105:4;;-1:-1:-1;;;;;;;3532:27:4;;;3528:83;;3583:13;3598:1;;-1:-1:-1;3309:837:4;-1:-1:-1;;3309:837:4:o;3528:83::-;3625:59;;-1:-1:-1;;;3625:59:4;;-1:-1:-1;;;;;3625:37:4;;;;;:59;;-1:-1:-1;;;3663:20:4;3625:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;3625:59:4;;;;;;;;-1:-1:-1;;3625:59:4;;;;;;;;;;;;:::i;:::-;;;3621:206;;;3735:16;3731:77;;;-1:-1:-1;3787:1:4;;3791;;-1:-1:-1;3309:837:4;-1:-1:-1;;;3309:837:4:o;3731:77::-;3685:133;3621:206;3850:10;-1:-1:-1;;;;;3841:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3841:28:4;;;;;;;;-1:-1:-1;;3841:28:4;;;;;;;;;;;;:::i;:::-;;;3837:303;;3972:10;-1:-1:-1;;;;;3963:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3963:28:4;;;;;;;;-1:-1:-1;;3963:28:4;;;;;;;;;;;;:::i;:::-;;;3959:171;;-1:-1:-1;4109:1:4;;4113;;-1:-1:-1;3309:837:4;-1:-1:-1;;3309:837:4:o;3959:171::-;4043:6;4051:1;;-1:-1:-1;3309:837:4;-1:-1:-1;;;3309:837:4:o;3837:303::-;3917:6;3925:1;;-1:-1:-1;3309:837:4;-1:-1:-1;;;3309:837:4:o;2604:147::-;1094:13:0;:11;:13::i;:::-;2690:54:4::1;::::0;-1:-1:-1;;;2690:54:4;;-1:-1:-1;;;;;1124:32:6;;;2690:54:4::1;::::0;::::1;1106:51:6::0;2699:18:4::1;2690:46;::::0;::::1;::::0;1079:18:6;;2690:54:4::1;960:203:6::0;2081:198:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;4299:2:6;2161:73:0::1;::::0;::::1;4281:21:6::0;4338:2;4318:18;;;4311:30;4377:34;4357:18;;;4350:62;-1:-1:-1;;;4428:18:6;;;4421:36;4474:19;;2161:73:0::1;4097:402:6::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;4398:683:4:-;4606:76;;-1:-1:-1;;;4606:76:4;;-1:-1:-1;;;;;1124:32:6;;;4606:76:4;;;1106:51:6;4578:21:4;;4626:18;4606:64;;;;;;1079:18:6;;4606:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4577:105:4;;-1:-1:-1;;;;;;;4700:27:4;;;4692:51;;;;-1:-1:-1;;;4692:51:4;;4706:2:6;4692:51:4;;;4688:21:6;4745:2;4725:18;;;4718:30;-1:-1:-1;;;4764:18:6;;;4757:41;4815:18;;4692:51:4;4504:335:6;4692:51:4;4776:58;;-1:-1:-1;;;4776:58:4;;-1:-1:-1;;;;;4776:37:4;;;;;:58;;-1:-1:-1;;;4814:19:4;4776:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:129;;;-1:-1:-1;4846:59:4;;-1:-1:-1;;;4846:59:4;;-1:-1:-1;;;;;4846:37:4;;;;;:59;;-1:-1:-1;;;4884:20:4;4846:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4754:204;;;;-1:-1:-1;;;4754:204:4;;5046:2:6;4754:204:4;;;5028:21:6;5085:2;5065:18;;;5058:30;5124:28;5104:18;;;5097:56;5170:18;;4754:204:4;4844:350:6;4754:204:4;4969:105;;-1:-1:-1;;;4969:105:4;;-1:-1:-1;;;;;5486:15:6;;;4969:105:4;;;5468:34:6;5538:15;;;5518:18;;;5511:43;5590:15;;;5570:18;;;5563:43;5622:18;;;5615:34;;;4989:18:4;4969:70;;;;5402:19:6;;4969:105:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4567:514;4398:683;;;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;5862:2:6;1414:68:0;;;5844:21:6;;;5881:18;;;5874:30;5940:34;5920:18;;;5913:62;5992:18;;1414:68:0;5660:356:6;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:202:6:-;-1:-1:-1;;;;;;176:33:6;;;;158:52;;146:2;131:18;;14:202::o;221:131::-;-1:-1:-1;;;;;296:31:6;;286:42;;276:70;;342:1;339;332:12;357:598;443:6;451;459;467;520:3;508:9;499:7;495:23;491:33;488:53;;;537:1;534;527:12;488:53;576:9;563:23;595:31;620:5;595:31;:::i;:::-;645:5;-1:-1:-1;702:2:6;687:18;;674:32;715:33;674:32;715:33;:::i;:::-;767:7;-1:-1:-1;826:2:6;811:18;;798:32;839:33;798:32;839:33;:::i;:::-;357:598;;;;-1:-1:-1;891:7:6;;945:2;930:18;917:32;;-1:-1:-1;;357:598:6:o;1168:180::-;1227:6;1280:2;1268:9;1259:7;1255:23;1251:32;1248:52;;;1296:1;1293;1286:12;1248:52;-1:-1:-1;1319:23:6;;1168:180;-1:-1:-1;1168:180:6:o;1353:247::-;1412:6;1465:2;1453:9;1444:7;1440:23;1436:32;1433:52;;;1481:1;1478;1471:12;1433:52;1520:9;1507:23;1539:31;1564:5;1539:31;:::i;:::-;1589:5;1353:247;-1:-1:-1;;;1353:247:6:o;1891:277::-;1958:6;2011:2;1999:9;1990:7;1986:23;1982:32;1979:52;;;2027:1;2024;2017:12;1979:52;2059:9;2053:16;2112:5;2105:13;2098:21;2091:5;2088:32;2078:60;;2134:1;2131;2124:12;2522:251;2592:6;2645:2;2633:9;2624:7;2620:23;2616:32;2613:52;;;2661:1;2658;2651:12;2613:52;2693:9;2687:16;2712:31;2737:5;2712:31;:::i;3646:446::-;3734:6;3742;3750;3803:2;3791:9;3782:7;3778:23;3774:32;3771:52;;;3819:1;3816;3809:12;3771:52;3851:9;3845:16;3870:31;3895:5;3870:31;:::i;:::-;3970:2;3955:18;;3949:25;3920:5;;-1:-1:-1;3983:33:6;3949:25;3983:33;:::i;:::-;4035:7;4025:17;;;4082:2;4071:9;4067:18;4061:25;4051:35;;3646:446;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "669800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC1155()": "250",
								"INTERFACE_ID_ERC2981()": "360",
								"INTERFACE_ID_ERC721()": "271",
								"checkForCollectionSetter(address)": "infinite",
								"owner()": "2387",
								"renounceOwnership()": "infinite",
								"royaltyFeeRegistry()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateOwnerOfRoyaltyFeeRegistry(address)": "infinite",
								"updateRoyaltyFeeLimit(uint256)": "infinite",
								"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "infinite"
							},
							"internal": {
								"_updateRoyaltyInfoForCollectionIfOwnerOrAdmin(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 761,
									"end": 859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 812,
									"end": 852,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 812,
									"end": 852,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 812,
									"end": 852,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "187"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 5083,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc7dea71cf51dcbf56fa8faf47afd763ab9976adf2ce7651e9cfe0e80a9c57d764736f6c63430008110033",
									".code": [
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "BC6BC0CD"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "C16F5156"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "C54E5497"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "E72BA456"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "33BF6156"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "3755FA80"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "AB016670"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "B060DD86"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 5083,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 516,
											"end": 572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 516,
											"end": 572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1983,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1983,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1157,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 960,
											"end": 1163,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1224,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1224,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 606,
											"end": 662,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 606,
											"end": 662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 606,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 606,
											"end": 662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 606,
											"end": 662,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2922,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2922,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 482,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 427,
											"end": 482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 427,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 427,
											"end": 482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 427,
											"end": 482,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 669,
											"end": 712,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 669,
											"end": 712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 669,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 669,
											"end": 712,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 669,
											"end": 712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 669,
											"end": 712,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3309,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3309,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1825,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1825,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1826,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1880,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1605,
											"end": 1886,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2604,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2604,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2163,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2163,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2222,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2416,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "204D757374206E6F742062652045524332393831"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2298,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2279,
											"end": 2305,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2279,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2307,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 2982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 2983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3021,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2999,
											"end": 3017,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2999,
											"end": 3017,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2999,
											"end": 3017,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "102737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3038,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3038,
											"end": 3056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3038,
											"end": 3056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3110,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3092,
											"end": 3110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2778,
											"end": 3116,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2383,
											"end": 2393,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2411,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2416,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2337,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2417,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2337,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1454,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1454,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1513,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2416,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "204D757374206E6F742062652045524332393831"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2173,
											"end": 2517,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "F851A440"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1570,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1556,
											"end": 1598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1566,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1556,
											"end": 1598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3305,
											"end": 3326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "102737BA103A34329030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3418,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3435,
											"end": 3453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3121,
											"end": 3459,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9223C9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3028,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3008,
											"end": 3069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D"
										},
										{
											"begin": 3008,
											"end": 3069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38C7BE47"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3441,
											"end": 3505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3505,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3505,
											"name": "PUSH",
											"source": 4,
											"value": "E31EF91C"
										},
										{
											"begin": 3441,
											"end": 3505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1079,
											"end": 1097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3441,
											"end": 3517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3441,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3532,
											"end": 3559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3559,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3559,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3528,
											"end": 3611,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3611,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3528,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3625,
											"end": 3662,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3662,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3662,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 3625,
											"end": 3662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3663,
											"end": 3683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3625,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3625,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3625,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3621,
											"end": 3827,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3621,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3621,
											"end": 3827,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3751,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3808,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3731,
											"end": 3808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3792,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3791,
											"end": 3792,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3808,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3731,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3621,
											"end": 3827,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3621,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3860,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3867,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3841,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3841,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3837,
											"end": 4140,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3982,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3963,
											"end": 3989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3989,
											"name": "PUSH",
											"source": 4,
											"value": "F851A440"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3963,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3963,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3959,
											"end": 4130,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4113,
											"end": 4114,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 4130,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3959,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4049,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4051,
											"end": 4052,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4051,
											"end": 4052,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 4140,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3837,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2744,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2FDE38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2690,
											"end": 2744,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2690,
											"end": 2736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 2690,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1079,
											"end": 1097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 960,
											"end": 1163,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4302,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4340,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4341,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4411,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4357,
											"end": 4375,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4357,
											"end": 4375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4493,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4474,
											"end": 4493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4097,
											"end": 4499,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 5081,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4398,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38C7BE47"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4578,
											"end": 4599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4606,
											"end": 4670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4670,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4670,
											"name": "PUSH",
											"source": 4,
											"value": "E31EF91C"
										},
										{
											"begin": 4606,
											"end": 4670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1079,
											"end": 1097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4606,
											"end": 4682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4606,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4577,
											"end": 4682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4577,
											"end": 4682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4727,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4727,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4708,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4748,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4504,
											"end": 4839,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 4813,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4813,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4813,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 4776,
											"end": 4813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4814,
											"end": 4833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4776,
											"end": 4834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 4834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4776,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4776,
											"end": 4905,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4846,
											"end": 4883,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4883,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4883,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 4846,
											"end": 4883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4884,
											"end": 4904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4846,
											"end": 4905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4846,
											"end": 4905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5028,
											"end": 5049,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5085,
											"end": 5087,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5152,
											"name": "PUSH",
											"source": 6,
											"value": "204E6F7420536574206F66204552433732312F45524331313535000000000000"
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5153,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4844,
											"end": 5194,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4754,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177BF36D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5486,
											"end": 5501,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5486,
											"end": 5501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5486,
											"end": 5501,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5468,
											"end": 5502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5553,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5553,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5554,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5605,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5640,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5622,
											"end": 5640,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5640,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5649,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4969,
											"end": 5039,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5039,
											"name": "PUSH",
											"source": 4,
											"value": "BBDF9B68"
										},
										{
											"begin": 4969,
											"end": 5039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5402,
											"end": 5421,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5402,
											"end": 5421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4567,
											"end": 5081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 5081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 5081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 5081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 5081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 5081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 5865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 5899,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5881,
											"end": 5899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 5899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5974,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5660,
											"end": 6016,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 216,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 176,
											"end": 209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 176,
											"end": 209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 176,
											"end": 209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 176,
											"end": 209,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 158,
											"end": 210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 158,
											"end": 210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 146,
											"end": 148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 131,
											"end": 149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14,
											"end": 216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 221,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 296,
											"end": 327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 296,
											"end": 327,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 286,
											"end": 328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 328,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 276,
											"end": 346,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 342,
											"end": 343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 340,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 332,
											"end": 344,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 357,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 357,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 443,
											"end": 449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 459,
											"end": 465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 520,
											"end": 523,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 508,
											"end": 517,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 499,
											"end": 506,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 495,
											"end": 518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 491,
											"end": 524,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 488,
											"end": 541,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 488,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 488,
											"end": 541,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 537,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 535,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 527,
											"end": 539,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 488,
											"end": 541,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 488,
											"end": 541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 585,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 563,
											"end": 586,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 595,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 620,
											"end": 625,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 595,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 595,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 595,
											"end": 626,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 595,
											"end": 626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 645,
											"end": 650,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 705,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 687,
											"end": 705,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 674,
											"end": 706,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 715,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 674,
											"end": 706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 715,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 715,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 715,
											"end": 748,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 715,
											"end": 748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 767,
											"end": 774,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 811,
											"end": 829,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 811,
											"end": 829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 839,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 798,
											"end": 830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 839,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 839,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 839,
											"end": 872,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 839,
											"end": 872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 955,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 357,
											"end": 955,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 357,
											"end": 955,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 357,
											"end": 955,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 891,
											"end": 898,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 891,
											"end": 898,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 949,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 917,
											"end": 949,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 357,
											"end": 955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1348,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1168,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 1278,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1298,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1319,
											"end": 1342,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1342,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1600,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1353,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1467,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1451,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1463,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1468,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1483,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1539,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1594,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1353,
											"end": 1600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2168,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1891,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2014,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2029,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2069,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2118,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2120,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2078,
											"end": 2138,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2773,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2522,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2631,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2643,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2648,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2663,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2712,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 4092,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3646,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3791,
											"end": 3800,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3801,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3806,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3823,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3771,
											"end": 3823,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3821,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3823,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3771,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3861,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3895,
											"end": 3900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3870,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3870,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 3972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3983,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4016,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3983,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4042,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4042,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4080,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 4092,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 4092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 4092,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 4092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 4092,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 4092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Manager/interface/IOwnable.sol",
								"contracts/Manager/royalty/RoyaltyFeeSetter.sol",
								"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC1155()": "33bf6156",
							"INTERFACE_ID_ERC2981()": "b060dd86",
							"INTERFACE_ID_ERC721()": "bc6bc0cd",
							"checkForCollectionSetter(address)": "c54e5497",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royaltyFeeRegistry()": "c16f5156",
							"transferOwnership(address)": "f2fde38b",
							"updateOwnerOfRoyaltyFeeRegistry(address)": "e72ba456",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "ab016670",
							"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "3755fa80"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyFeeRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC2981\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkForCollectionSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"updateOwnerOfRoyaltyFeeRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":\"RoyaltyFeeSetter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]},\"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":{\"keccak256\":\"0xd6ffa21d49d8a958a6ddfa42e912a0411181f98dab3175068a71c8e9a49692f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bef00058e8da1643d9cfc7630b6611a4947b815d113a6a73f31074c6ae26ac3\",\"dweb:/ipfs/QmbsQKzyQDf4i6RmfEy5ihNXrGmeYpFumRUDiT5M6wT4Ci\"]},\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x3d1aef933c5c45cae2a9d102babd425844eaec353a84f6c3bf659336038e1cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721a303c1a32c92841d2c9541e3fc7afd440af8ee20bbba620814a8be8f57d11\",\"dweb:/ipfs/QmQWrBJJDiqZ62qfQa2fpAfgWYgyPDEePCrLtZjmd6FJu4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/royalty/RoyaltyFeeSetter.sol:RoyaltyFeeSetter",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"IRoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollection(address,address,address,uint256)": "bbdf9b68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":\"IRoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x3d1aef933c5c45cae2a9d102babd425844eaec353a84f6c3bf659336038e1cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721a303c1a32c92841d2c9541e3fc7afd440af8ee20bbba620814a8be8f57d11\",\"dweb:/ipfs/QmQWrBJJDiqZ62qfQa2fpAfgWYgyPDEePCrLtZjmd6FJu4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IERC165",
							"nameLocation": "415:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "801:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:2"
									},
									"scope": 146,
									"src": "774:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "405:447:2",
							"usedErrors": []
						}
					],
					"src": "100:753:2"
				},
				"id": 2
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "IOwnable",
							"nameLocation": "67:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "91:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "117:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "109:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:18:3"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:0:3"
									},
									"scope": 164,
									"src": "82:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "151:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "156:2:3"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "182:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:9:3"
									},
									"scope": 164,
									"src": "142:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f851a440",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "admin",
									"nameLocation": "206:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:3"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "237:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:3"
									},
									"scope": 164,
									"src": "197:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 165,
							"src": "57:191:3",
							"usedErrors": []
						}
					],
					"src": "32:217:3"
				},
				"id": 3
			},
			"contracts/Manager/royalty/RoyaltyFeeSetter.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/RoyaltyFeeSetter.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						],
						"IOwnable": [
							164
						],
						"IRoyaltyFeeRegistry": [
							508
						],
						"Ownable": [
							112
						],
						"RoyaltyFeeSetter": [
							467
						]
					},
					"id": 468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 113,
							"src": "57:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 167,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "65:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 147,
							"src": "125:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 169,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 146,
										"src": "133:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
							"file": "./interface/IRoyaltyFeeRegistry.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 509,
							"src": "207:72:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IRoyaltyFeeRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 508,
										"src": "215:19:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/IOwnable.sol",
							"file": "../interface/IOwnable.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 165,
							"src": "280:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 164,
										"src": "288:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 175,
										"name": "Ownable",
										"nameLocations": [
											"387:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "387:7:4"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "387:7:4"
								}
							],
							"canonicalName": "RoyaltyFeeSetter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 467,
							"linearizedBaseContracts": [
								467,
								112,
								134
							],
							"name": "RoyaltyFeeSetter",
							"nameLocation": "367:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "bc6bc0cd",
									"id": 179,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC721",
									"nameLocation": "450:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "427:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 177,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "427:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783830616335386364",
										"id": 178,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "472:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2158778573_by_1",
											"typeString": "int_const 2158778573"
										},
										"value": "0x80ac58cd"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "33bf6156",
									"id": 182,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC1155",
									"nameLocation": "539:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "516:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 180,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "516:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "562:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b060dd86",
									"id": 185,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC2981",
									"nameLocation": "629:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "606:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 183,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "606:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783261353532303561",
										"id": 184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "652:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_710221914_by_1",
											"typeString": "int_const 710221914"
										},
										"value": "0x2a55205a"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c16f5156",
									"id": 187,
									"mutability": "immutable",
									"name": "royaltyFeeRegistry",
									"nameLocation": "694:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "669:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 186,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "669:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "802:57:4",
										"statements": [
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 192,
														"name": "royaltyFeeRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "812:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 193,
														"name": "_royaltyFeeRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "833:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "812:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "812:40:4"
											}
										]
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_royaltyFeeRegistry",
												"nameLocation": "781:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "773:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:29:4"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "802:0:4"
									},
									"scope": 467,
									"src": "761:98:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1385:330:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1453:60:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 213,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1492:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 210,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "1462:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 209,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "1454:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1454:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1474:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "1454:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1454:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1515:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1445:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1445:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "1445:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 220,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1556:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1560:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1556:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 223,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "1579:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 222,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "1570:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1570:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$164",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1591:5:4",
																	"memberName": "admin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 163,
																	"src": "1570:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1570:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1556:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f74207468652061646d696e",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1600:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															},
															"value": " Not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1548:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "1548:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 232,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1674:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 233,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "1686:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 234,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "1694:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "1704:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 231,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "1628:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1628:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1628:80:4"
											}
										]
									},
									"functionSelector": "ab016670",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfAdmin",
									"nameLocation": "1233:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1288:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1280:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "1316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1340:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1332:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1366:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1358:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:105:4"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1385:0:4"
									},
									"scope": 467,
									"src": "1224:491:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "2144:280:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2162:60:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 255,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2201:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 252,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "2171:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 251,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "2163:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2163:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2183:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "2163:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2163:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2224:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2154:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 262,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2265:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2269:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2265:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "2288:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 264,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "2279:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2279:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$164",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2300:5:4",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 158,
																	"src": "2279:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2279:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2265:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420746865206f776e6572",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															},
															"value": " Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2257:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "2257:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2383:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 275,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2395:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 276,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2403:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2413:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2337:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2337:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2337:80:4"
											}
										]
									},
									"functionSelector": "3755fa80",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfOwner",
									"nameLocation": "1992:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2047:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2039:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "2075:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2067:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2099:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2091:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2125:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2117:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:105:4"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:4"
									},
									"scope": 467,
									"src": "1983:441:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2680:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "2737:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 289,
																	"name": "royaltyFeeRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "2699:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 288,
																"name": "IOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2690:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																	"typeString": "type(contract IOwnable)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnable_$164",
																"typeString": "contract IOwnable"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2719:17:4",
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "2690:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2690:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "2690:54:4"
											}
										]
									},
									"functionSelector": "e72ba456",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 285,
												"name": "onlyOwner",
												"nameLocations": [
													"2670:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2670:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2670:9:4"
										}
									],
									"name": "updateOwnerOfRoyaltyFeeRegistry",
									"nameLocation": "2613:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2653:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2645:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:16:4"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:4"
									},
									"scope": 467,
									"src": "2604:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2998:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "_royaltyFeeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3070:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 304,
																	"name": "royaltyFeeRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "3028:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 303,
																"name": "IRoyaltyFeeRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "3008:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRoyaltyFeeRegistry_$508_$",
																	"typeString": "type(contract IRoyaltyFeeRegistry)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3008:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$508",
																"typeString": "contract IRoyaltyFeeRegistry"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3048:21:4",
														"memberName": "updateRoyaltyFeeLimit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 485,
														"src": "3008:61:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3008:79:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "3008:79:4"
											}
										]
									},
									"functionSelector": "b9223c9d",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 300,
												"name": "onlyOwner",
												"nameLocations": [
													"2988:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2988:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2988:9:4"
										}
									],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "2931:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "2961:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2953:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2952:26:4"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2998:0:4"
									},
									"scope": 467,
									"src": "2922:172:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "3402:744:4",
										"statements": [
											{
												"assignments": [
													321,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "3421:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 406,
														"src": "3413:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 320,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3413:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"id": 326,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3506:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 323,
																	"name": "royaltyFeeRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "3461:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 322,
																"name": "IRoyaltyFeeRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "3441:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRoyaltyFeeRegistry_$508_$",
																	"typeString": "type(contract IRoyaltyFeeRegistry)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3441:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$508",
																"typeString": "contract IRoyaltyFeeRegistry"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3481:24:4",
														"memberName": "royaltyFeeInfoCollection",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 507,
														"src": "3441:64:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$_t_address_$_t_uint256_$",
															"typeString": "function (address) view external returns (address,address,uint256)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3441:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3412:105:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 329,
														"name": "currentSetter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "3532:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3557:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3549:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 330,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3549:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3549:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3532:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 340,
												"nodeType": "IfStatement",
												"src": "3528:83:4",
												"trueBody": {
													"id": 339,
													"nodeType": "Block",
													"src": "3561:50:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 335,
																		"name": "currentSetter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "3583:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3598:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 337,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3582:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																	"typeString": "tuple(address,int_const 0)"
																}
															},
															"functionReturnParameters": 319,
															"id": 338,
															"nodeType": "Return",
															"src": "3575:25:4"
														}
													]
												}
											},
											{
												"clauses": [
													{
														"block": {
															"id": 360,
															"nodeType": "Block",
															"src": "3717:101:4",
															"statements": [
																{
																	"condition": {
																		"id": 350,
																		"name": "interfaceSupport",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "3735:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 359,
																	"nodeType": "IfStatement",
																	"src": "3731:77:4",
																	"trueBody": {
																		"id": 358,
																		"nodeType": "Block",
																		"src": "3753:55:4",
																		"statements": [
																			{
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 353,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3787:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 352,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "3779:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 351,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "3779:7:4",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 354,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3779:10:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"hexValue": "31",
																							"id": 355,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3791:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						}
																					],
																					"id": 356,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3778:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_address_$_t_rational_1_by_1_$",
																						"typeString": "tuple(address,int_const 1)"
																					}
																				},
																				"functionReturnParameters": 319,
																				"id": 357,
																				"nodeType": "Return",
																				"src": "3771:22:4"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 361,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 349,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 348,
																	"mutability": "mutable",
																	"name": "interfaceSupport",
																	"nameLocation": "3699:16:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 361,
																	"src": "3694:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 347,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3694:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "3693:23:4"
														},
														"src": "3685:133:4"
													},
													{
														"block": {
															"id": 362,
															"nodeType": "Block",
															"src": "3825:2:4",
															"statements": []
														},
														"errorName": "",
														"id": 363,
														"nodeType": "TryCatchClause",
														"src": "3819:8:4"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 345,
															"name": "INTERFACE_ID_ERC2981",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "3663:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 342,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "3633:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 341,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "3625:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3625:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$146",
																"typeString": "contract IERC165"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3645:17:4",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3625:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view external returns (bool)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:59:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 364,
												"nodeType": "TryStatement",
												"src": "3621:206:4"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 377,
															"nodeType": "Block",
															"src": "3895:43:4",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"id": 373,
																				"name": "setter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 371,
																				"src": "3917:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3925:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"id": 375,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3916:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_address_$_t_rational_2_by_1_$",
																			"typeString": "tuple(address,int_const 2)"
																		}
																	},
																	"functionReturnParameters": 319,
																	"id": 376,
																	"nodeType": "Return",
																	"src": "3909:18:4"
																}
															]
														},
														"errorName": "",
														"id": 378,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 372,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 371,
																	"mutability": "mutable",
																	"name": "setter",
																	"nameLocation": "3887:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 378,
																	"src": "3879:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 370,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3879:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "3878:16:4"
														},
														"src": "3870:68:4"
													},
													{
														"block": {
															"id": 403,
															"nodeType": "Block",
															"src": "3945:195:4",
															"statements": [
																{
																	"clauses": [
																		{
																			"block": {
																				"id": 391,
																				"nodeType": "Block",
																				"src": "4017:51:4",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"id": 387,
																									"name": "setter",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 385,
																									"src": "4043:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "33",
																									"id": 388,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4051:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								}
																							],
																							"id": 389,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "4042:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_3_by_1_$",
																								"typeString": "tuple(address,int_const 3)"
																							}
																						},
																						"functionReturnParameters": 319,
																						"id": 390,
																						"nodeType": "Return",
																						"src": "4035:18:4"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 392,
																			"nodeType": "TryCatchClause",
																			"parameters": {
																				"id": 386,
																				"nodeType": "ParameterList",
																				"parameters": [
																					{
																						"constant": false,
																						"id": 385,
																						"mutability": "mutable",
																						"name": "setter",
																						"nameLocation": "4009:6:4",
																						"nodeType": "VariableDeclaration",
																						"scope": 392,
																						"src": "4001:14:4",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4001:7:4",
																							"stateMutability": "nonpayable",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"src": "4000:16:4"
																			},
																			"src": "3992:76:4"
																		},
																		{
																			"block": {
																				"id": 400,
																				"nodeType": "Block",
																				"src": "4075:55:4",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 395,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4109:1:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 394,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "4101:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 393,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "4101:7:4",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 396,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4101:10:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "34",
																									"id": 397,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4113:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_4_by_1",
																										"typeString": "int_const 4"
																									},
																									"value": "4"
																								}
																							],
																							"id": 398,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "4100:15:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_4_by_1_$",
																								"typeString": "tuple(address,int_const 4)"
																							}
																						},
																						"functionReturnParameters": 319,
																						"id": 399,
																						"nodeType": "Return",
																						"src": "4093:22:4"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 401,
																			"nodeType": "TryCatchClause",
																			"src": "4069:61:4"
																		}
																	],
																	"externalCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 380,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 313,
																						"src": "3972:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 379,
																					"name": "IOwnable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 164,
																					"src": "3963:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																						"typeString": "type(contract IOwnable)"
																					}
																				},
																				"id": 381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3963:20:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IOwnable_$164",
																					"typeString": "contract IOwnable"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3984:5:4",
																			"memberName": "admin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 163,
																			"src": "3963:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3963:28:4",
																		"tryCall": true,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 402,
																	"nodeType": "TryStatement",
																	"src": "3959:171:4"
																}
															]
														},
														"errorName": "",
														"id": 404,
														"nodeType": "TryCatchClause",
														"src": "3939:201:4"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 366,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "3850:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 365,
																"name": "IOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "3841:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																	"typeString": "type(contract IOwnable)"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3841:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnable_$164",
																"typeString": "contract IOwnable"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3862:5:4",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "3841:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3841:28:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 405,
												"nodeType": "TryStatement",
												"src": "3837:303:4"
											}
										]
									},
									"functionSelector": "c54e5497",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkForCollectionSetter",
									"nameLocation": "3318:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3351:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3343:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:20:4"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3386:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3395:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 317,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3395:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:16:4"
									},
									"scope": 467,
									"src": "3309:837:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "4567:514:4",
										"statements": [
											{
												"assignments": [
													419,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "4586:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "4578:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 418,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4578:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 426,
												"initialValue": {
													"arguments": [
														{
															"id": 424,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "4671:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 421,
																	"name": "royaltyFeeRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "4626:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 420,
																"name": "IRoyaltyFeeRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "4606:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRoyaltyFeeRegistry_$508_$",
																	"typeString": "type(contract IRoyaltyFeeRegistry)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4606:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$508",
																"typeString": "contract IRoyaltyFeeRegistry"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4646:24:4",
														"memberName": "royaltyFeeInfoCollection",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 507,
														"src": "4606:64:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$_t_address_$_t_uint256_$",
															"typeString": "function (address) view external returns (address,address,uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4577:105:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "currentSetter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "4700:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4725:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4717:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 429,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4717:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4717:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4700:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920736574",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4729:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															},
															"value": "Already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4692:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4692:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "4692:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 442,
																				"name": "INTERFACE_ID_ERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "4814:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 439,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 409,
																						"src": "4784:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 438,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "4776:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4776:19:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$146",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4796:17:4",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 145,
																			"src": "4776:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4776:58:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 448,
																				"name": "INTERFACE_ID_ERC1155",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 182,
																				"src": "4884:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 445,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 409,
																						"src": "4854:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 444,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "4846:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4846:19:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$146",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4866:17:4",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 145,
																			"src": "4846:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4846:59:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4776:129:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 451,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4775:131:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4920:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															},
															"value": " Not Set of ERC721/ERC1155"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															}
														],
														"id": 437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4754:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4754:204:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "4754:204:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 459,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "5040:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "5052:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "5060:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5070:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 456,
																	"name": "royaltyFeeRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "4989:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 455,
																"name": "IRoyaltyFeeRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "4969:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRoyaltyFeeRegistry_$508_$",
																	"typeString": "type(contract IRoyaltyFeeRegistry)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4969:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$508",
																"typeString": "contract IRoyaltyFeeRegistry"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5009:30:4",
														"memberName": "updateRoyaltyInfoForCollection",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 480,
														"src": "4969:70:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256) external"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4969:105:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "4969:105:4"
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
									"nameLocation": "4407:45:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "4470:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "4462:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4462:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "4498:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "4490:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4522:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "4514:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4548:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "4540:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4540:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:105:4"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4567:0:4"
									},
									"scope": 467,
									"src": "4398:683:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 468,
							"src": "358:4725:4",
							"usedErrors": []
						}
					],
					"src": "32:5052:4"
				},
				"id": 4
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							508
						]
					},
					"id": 509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 469,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 508,
							"linearizedBaseContracts": [
								508
							],
							"name": "IRoyaltyFeeRegistry",
							"nameLocation": "67:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bbdf9b68",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollection",
									"nameLocation": "102:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "150:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "142:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "178:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "170:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "202:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "194:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "228:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "220:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "132:105:5"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:5"
									},
									"scope": 508,
									"src": "93:154:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b9223c9d",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "261:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "291:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "283:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:26:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:0:5"
									},
									"scope": 508,
									"src": "252:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "333:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "353:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "345:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "373:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "365:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:36:5"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "404:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "413:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:18:5"
									},
									"scope": 508,
									"src": "324:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e31ef91c",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "437:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "470:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "462:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:20:5"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "542:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "563:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "584:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:73:5"
									},
									"scope": 508,
									"src": "428:174:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 509,
							"src": "57:547:5",
							"usedErrors": []
						}
					],
					"src": "32:573:5"
				},
				"id": 5
			}
		}
	}
}