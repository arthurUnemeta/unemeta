{
	"id": "1ecfff5ac6d5a80f8b257bcc8a195a56",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IOwnable} from \"../interface/IOwnable.sol\";\n\nimport {IRoyaltyFeeRegistry} from \"./interface/IRoyaltyFeeRegistry.sol\";\n\n//  register royalty fee\ncontract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {\n    struct FeeInfo {\n        address setter;\n        address receiver;\n        uint256 fee;\n    }\n       // ERC721 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    // ERC1155 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    // ERC2981 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a;\n\n    // limit max royalty fee（10,000 = 100%）\n    uint256 public royaltyFeeLimit;\n\n    //compile royalty information mapping \n    mapping(address => FeeInfo) private _royaltyFeeInfoCollection;\n\n    event NewRoyaltyFeeLimit(uint256 royaltyFeeLimit);\n    event RoyaltyFeeUpdate(address indexed collection, address indexed setter, address indexed receiver, uint256 fee);\n\n    //  initialize royalty fee\n    constructor(uint256 _royaltyFeeLimit) {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n    }\n\n    // Update a collection's upper limit of royalty fee\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n\n        emit NewRoyaltyFeeLimit(_royaltyFeeLimit);\n    }\n\n    function updateRoyaltyInfoForCollection(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external override onlyOwner {\n        require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\");\n        _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee});\n\n        emit RoyaltyFeeUpdate(collection, setter, receiver, fee);\n    }\n\n    //\n    // function royaltyInfo\n    //  @Description: calculate royalty fee\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {\n        return (\n        _royaltyFeeInfoCollection[collection].receiver,\n        (amount * _royaltyFeeInfoCollection[collection].fee) / 10000\n        );\n    }\n    /*Check collection information*/\n    function royaltyFeeInfoCollection(address collection)\n    external\n    view\n    override\n    returns (\n        address,\n        address,\n        uint256\n    )\n    {\n        return (\n        _royaltyFeeInfoCollection[collection].setter,\n        _royaltyFeeInfoCollection[collection].receiver,\n        _royaltyFeeInfoCollection[collection].fee\n        );\n    }\n\n        //\n    // function checkForCollectionSetter\n    //  @Description: Confirm royalty fee seeting information\n    //  @param address\n    //  @return external Return editor, regarless of admin or owner\n    //\n    function checkForCollectionSetter(address collection) external view returns (address, uint8) {\n        try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {\n            if (interfaceSupport) {\n                return (address(0), 1);\n            }\n        } catch {}\n\n        try IOwnable(collection).owner() returns (address setter) {\n            return (setter, 2);\n        } catch {\n            try IOwnable(collection).admin() returns (address setter) {\n                return (setter, 3);\n            } catch {\n                return (address(0), 4);\n            }\n        }\n    }\n}\n"
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IRoyaltyFeeRegistry {\n    function updateRoyaltyInfoForCollection(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external;\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function royaltyInfo(address collection, uint256 amount) external view returns (address, uint256);\n\n    function royaltyFeeInfoCollection(address collection)\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        );\n}\n"
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IOwnable {\n    function transferOwnership(address newOwner) external;\n\n    function owner() external view returns (address);\n\n    function admin() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"admin()": "f851a440",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"RoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "NewRoyaltyFeeLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "RoyaltyFeeUpdate",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC2981",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC721",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "checkForCollectionSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:3874  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1194:1398  constructor(uint256 _royaltyFeeLimit) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1312:1316  9500 */\n  0x251c\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1292:1308  _royaltyFeeLimit */\n  dup2\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1292:1316  _royaltyFeeLimit <= 9500 */\n  gt\n  iszero\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1284:1347  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":405:407   */\n  0x20\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1284:1347  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":387:408   */\n  mstore\n    /* \"#utility.yul\":444:446   */\n  0x1a\n    /* \"#utility.yul\":424:442   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":417:447   */\n  mstore\n    /* \"#utility.yul\":483:511   */\n  0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n    /* \"#utility.yul\":463:481   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":456:512   */\n  mstore\n    /* \"#utility.yul\":529:547   */\n  0x64\n  add\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1284:1347  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1357:1372  royaltyFeeLimit */\n  0x01\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1357:1391  royaltyFeeLimit = _royaltyFeeLimit */\n  sstore\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:3874  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_20:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:553   */\ntag_18:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:3874  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:3874  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb9223c9d\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xc54e5497\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc54e5497\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe31ef91c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0xb9223c9d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbbdf9b68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xbc6bc0cd\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb060dd86\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x2782d6c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x33bf6156\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4fb7d3f9\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2359:2626  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":697:739   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":685:740   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":667:741   */\n      dup4\n      mstore\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":757:775   */\n      dup4\n      add\n        /* \"#utility.yul\":750:784   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":640:658   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2359:2626  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":639:695  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_4:\n      tag_24\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":969:1035   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":957:1036   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":939:1037   */\n      dup2\n      mstore\n        /* \"#utility.yul\":927:929   */\n      0x20\n        /* \"#utility.yul\":912:930   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":639:695  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n      tag_22\n        /* \"#utility.yul\":795:1043   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":840:870  uint256 public royaltyFeeLimit */\n    tag_5:\n      tag_28\n      sload(0x01)\n      dup2\n      jump\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1194:1219   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1182:1184   */\n      0x20\n        /* \"#utility.yul\":1167:1185   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":840:870  uint256 public royaltyFeeLimit */\n      tag_22\n        /* \"#utility.yul\":1048:1225   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1376:1450   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1364:1366   */\n      0x20\n        /* \"#utility.yul\":1349:1367   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1230:1456   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":729:785  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n    tag_8:\n      tag_24\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1460:1763  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_9:\n      tag_32\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1769:2196  function updateRoyaltyInfoForCollection(... */\n    tag_10:\n      tag_32\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":550:605  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n    tag_11:\n      tag_24\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3244:3872  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_12:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2701:2743   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2689:2744   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2671:2745   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2793:2797   */\n      0xff\n        /* \"#utility.yul\":2781:2798   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2761:2779   */\n      dup4\n      add\n        /* \"#utility.yul\":2754:2799   */\n      mstore\n        /* \"#utility.yul\":2644:2662   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3244:3872  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      tag_22\n        /* \"#utility.yul\":2501:2805   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2668:3026  function royaltyFeeInfoCollection(address collection)... */\n    tag_13:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_59:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2858:2895  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2779:2786  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2858:2895  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2858:2883  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2858:2895  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2858:2902  _royaltyFeeInfoCollection[collection].setter */\n      dup1\n      sload\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2912:2958  _royaltyFeeInfoCollection[collection].receiver */\n      dup3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2968:3009  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2858:2902  _royaltyFeeInfoCollection[collection].setter */\n      swap2\n      dup4\n      and\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2912:2958  _royaltyFeeInfoCollection[collection].receiver */\n      swap3\n      and\n      swap2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2668:3026  function royaltyFeeInfoCollection(address collection)... */\n      jump\n    tag_58:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3022:3064   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3091:3106   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":3073:3107   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3143:3158   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3138:3140   */\n      0x20\n        /* \"#utility.yul\":3123:3141   */\n      dup5\n      add\n        /* \"#utility.yul\":3116:3159   */\n      mstore\n        /* \"#utility.yul\":3175:3193   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3168:3202   */\n      mstore\n        /* \"#utility.yul\":3000:3002   */\n      0x60\n        /* \"#utility.yul\":2985:3003   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2668:3026  function royaltyFeeInfoCollection(address collection)... */\n      tag_22\n        /* \"#utility.yul\":2810:3208   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_32\n      tag_64\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2359:2626  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_21:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2493:2530  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup4\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2448:2455  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2493:2530  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2493:2518  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2493:2530  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2493:2539  _royaltyFeeInfoCollection[collection].receiver */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2559:2600  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2448:2455  address */\n      swap2\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2493:2539  _royaltyFeeInfoCollection[collection].receiver */\n      swap2\n      and\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2604:2609  10000 */\n      0x2710\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2550:2600  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_67\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2550:2556  amount */\n      dup7\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2550:2600  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2549:2609  (amount * _royaltyFeeInfoCollection[collection].fee) / 10000 */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2476:2619  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2359:2626  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1460:1763  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1625:1629  9500 */\n      0x251c\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1605:1621  _royaltyFeeLimit */\n      dup2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1605:1629  _royaltyFeeLimit <= 9500 */\n      gt\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4021:4023   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4003:4024   */\n      mstore\n        /* \"#utility.yul\":4060:4062   */\n      0x1a\n        /* \"#utility.yul\":4040:4058   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4033:4063   */\n      mstore\n        /* \"#utility.yul\":4099:4127   */\n      0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n        /* \"#utility.yul\":4079:4097   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4072:4128   */\n      mstore\n        /* \"#utility.yul\":4145:4163   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1670:1685  royaltyFeeLimit */\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1670:1704  royaltyFeeLimit = _royaltyFeeLimit */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1720:1756  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n        /* \"#utility.yul\":1194:1219   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1720:1756  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      0x2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256\n      swap1\n        /* \"#utility.yul\":1182:1184   */\n      0x20\n        /* \"#utility.yul\":1167:1185   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1720:1756  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1460:1763  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1769:2196  function updateRoyaltyInfoForCollection(... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1967:1982  royaltyFeeLimit */\n      sload(0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1960:1963  fee */\n      dup2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1960:1982  fee <= royaltyFeeLimit */\n      gt\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1952:2017  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4376:4378   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1952:2017  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4358:4379   */\n      mstore\n        /* \"#utility.yul\":4415:4417   */\n      0x1e\n        /* \"#utility.yul\":4395:4413   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4388:4418   */\n      mstore\n        /* \"#utility.yul\":4454:4486   */\n      0x52656769737472793a20526f79616c74792066656520746f6f20686967680000\n        /* \"#utility.yul\":4434:4452   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4427:4487   */\n      mstore\n        /* \"#utility.yul\":4504:4522   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1952:2017  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_82\n        /* \"#utility.yul\":4174:4528   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1952:2017  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n    tag_88:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2067:2122  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      dup6\n      dup3\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n      dup6\n      dup8\n      add\n      dup9\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2027:2064  _royaltyFeeInfoCollection[collection] */\n      dup12\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2027:2052  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2027:2064  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup7\n      mstore\n      swap1\n      dup11\n      swap1\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2027:2122  _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup10\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap2\n      dup3\n      and\n      or\n      dup11\n      sstore\n      swap4\n      mload\n      0x01\n      dup11\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap10\n      and\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap7\n      sstore\n      mload\n      swap6\n      add\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2138:2189  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      swap4\n      mload\n        /* \"#utility.yul\":1194:1219   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2067:2122  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap1\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2138:2189  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      0xd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64\n      swap2\n        /* \"#utility.yul\":1167:1185   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2138:2189  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1769:2196  function updateRoyaltyInfoForCollection(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3244:3872  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_55:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3351:3410  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3389:3409  INTERFACE_ID_ERC2981 */\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3351:3410  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":939:1037   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3321:3328  address */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3351:3388  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":912:930   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3351:3410  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_94\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_95\n      swap2\n      dup2\n      add\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x01\n    tag_94:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3347:3553  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3461:3477  interfaceSupport */\n      dup1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3457:3534  if (interfaceSupport) {... */\n      iszero\n      tag_102\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3513:3514  0 */\n      0x00\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3517:3518  1 */\n      0x01\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3244:3872  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3457:3534  if (interfaceSupport) {... */\n    tag_102:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3411:3544  returns (bool interfaceSupport) {... */\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3347:3553  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n    tag_101:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3576:3586  collection */\n      dup3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3567:3593  IOwnable(collection).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3567:3595  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_103\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_104\n      swap2\n      dup2\n      add\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      0x01\n    tag_103:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3563:3866  try IOwnable(collection).owner() returns (address setter) {... */\n      tag_106\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3698:3708  collection */\n      dup3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3689:3715  IOwnable(collection).admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf851a440\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3689:3717  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_110\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_111\n      swap2\n      dup2\n      add\n      swap1\n      tag_105\n      jump\t// in\n    tag_111:\n      0x01\n    tag_110:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3685:3856  try IOwnable(collection).admin() returns (address setter) {... */\n      tag_112\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3835:3836  0 */\n      0x00\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3839:3840  4 */\n      0x04\n      swap3\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3244:3872  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3685:3856  try IOwnable(collection).admin() returns (address setter) {... */\n    tag_112:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3769:3775  setter */\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3777:3778  3 */\n      0x03\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3244:3872  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3563:3866  try IOwnable(collection).owner() returns (address setter) {... */\n    tag_106:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3643:3649  setter */\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3651:3652  2 */\n      0x02\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3244:3872  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5273:5275   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5255:5276   */\n      mstore\n        /* \"#utility.yul\":5312:5314   */\n      0x26\n        /* \"#utility.yul\":5292:5310   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5285:5315   */\n      mstore\n        /* \"#utility.yul\":5351:5385   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5331:5349   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5324:5386   */\n      mstore\n        /* \"#utility.yul\":5422:5430   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5402:5420   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5395:5431   */\n      mstore\n        /* \"#utility.yul\":5448:5467   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_82\n        /* \"#utility.yul\":5071:5473   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5680:5682   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5662:5683   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5699:5717   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5692:5722   */\n      mstore\n        /* \"#utility.yul\":5758:5792   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5738:5756   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5731:5793   */\n      mstore\n        /* \"#utility.yul\":5810:5828   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_82\n        /* \"#utility.yul\":5478:5834   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:168   */\n    tag_135:\n        /* \"#utility.yul\":100:142   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":89:143   */\n      and\n        /* \"#utility.yul\":82:87   */\n      dup2\n        /* \"#utility.yul\":79:144   */\n      eq\n        /* \"#utility.yul\":69:162   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":158:159   */\n      0x00\n        /* \"#utility.yul\":155:156   */\n      dup1\n        /* \"#utility.yul\":148:160   */\n      revert\n        /* \"#utility.yul\":173:488   */\n    tag_20:\n        /* \"#utility.yul\":241:247   */\n      0x00\n        /* \"#utility.yul\":249:255   */\n      dup1\n        /* \"#utility.yul\":302:304   */\n      0x40\n        /* \"#utility.yul\":290:299   */\n      dup4\n        /* \"#utility.yul\":281:288   */\n      dup6\n        /* \"#utility.yul\":277:300   */\n      sub\n        /* \"#utility.yul\":273:305   */\n      slt\n        /* \"#utility.yul\":270:322   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":315:316   */\n      dup1\n        /* \"#utility.yul\":308:320   */\n      revert\n        /* \"#utility.yul\":270:322   */\n    tag_140:\n        /* \"#utility.yul\":357:366   */\n      dup3\n        /* \"#utility.yul\":344:367   */\n      calldataload\n        /* \"#utility.yul\":376:407   */\n      tag_141\n        /* \"#utility.yul\":401:406   */\n      dup2\n        /* \"#utility.yul\":376:407   */\n      tag_135\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":426:431   */\n      swap5\n        /* \"#utility.yul\":478:480   */\n      0x20\n        /* \"#utility.yul\":463:481   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":450:482   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":173:488   */\n      jump\t// out\n        /* \"#utility.yul\":1461:1641   */\n    tag_43:\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1561:1570   */\n      dup3\n        /* \"#utility.yul\":1552:1559   */\n      dup5\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":1612:1635   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1461:1641   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1646:2244   */\n    tag_47:\n        /* \"#utility.yul\":1732:1738   */\n      0x00\n        /* \"#utility.yul\":1740:1746   */\n      dup1\n        /* \"#utility.yul\":1748:1754   */\n      0x00\n        /* \"#utility.yul\":1756:1762   */\n      dup1\n        /* \"#utility.yul\":1809:1812   */\n      0x80\n        /* \"#utility.yul\":1797:1806   */\n      dup6\n        /* \"#utility.yul\":1788:1795   */\n      dup8\n        /* \"#utility.yul\":1784:1807   */\n      sub\n        /* \"#utility.yul\":1780:1813   */\n      slt\n        /* \"#utility.yul\":1777:1830   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":1826:1827   */\n      0x00\n        /* \"#utility.yul\":1823:1824   */\n      dup1\n        /* \"#utility.yul\":1816:1828   */\n      revert\n        /* \"#utility.yul\":1777:1830   */\n    tag_149:\n        /* \"#utility.yul\":1865:1874   */\n      dup5\n        /* \"#utility.yul\":1852:1875   */\n      calldataload\n        /* \"#utility.yul\":1884:1915   */\n      tag_150\n        /* \"#utility.yul\":1909:1914   */\n      dup2\n        /* \"#utility.yul\":1884:1915   */\n      tag_135\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1934:1939   */\n      swap4\n      pop\n        /* \"#utility.yul\":1991:1993   */\n      0x20\n        /* \"#utility.yul\":1976:1994   */\n      dup6\n      add\n        /* \"#utility.yul\":1963:1995   */\n      calldataload\n        /* \"#utility.yul\":2004:2037   */\n      tag_151\n        /* \"#utility.yul\":1963:1995   */\n      dup2\n        /* \"#utility.yul\":2004:2037   */\n      tag_135\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2056:2063   */\n      swap3\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x40\n        /* \"#utility.yul\":2100:2118   */\n      dup6\n      add\n        /* \"#utility.yul\":2087:2119   */\n      calldataload\n        /* \"#utility.yul\":2128:2161   */\n      tag_152\n        /* \"#utility.yul\":2087:2119   */\n      dup2\n        /* \"#utility.yul\":2128:2161   */\n      tag_135\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1646:2244   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":2180:2187   */\n      swap3\n      swap4\n        /* \"#utility.yul\":2234:2236   */\n      0x60\n        /* \"#utility.yul\":2219:2237   */\n      add\n        /* \"#utility.yul\":2206:2238   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":1646:2244   */\n      jump\t// out\n        /* \"#utility.yul\":2249:2496   */\n    tag_54:\n        /* \"#utility.yul\":2308:2314   */\n      0x00\n        /* \"#utility.yul\":2361:2363   */\n      0x20\n        /* \"#utility.yul\":2349:2358   */\n      dup3\n        /* \"#utility.yul\":2340:2347   */\n      dup5\n        /* \"#utility.yul\":2336:2359   */\n      sub\n        /* \"#utility.yul\":2332:2364   */\n      slt\n        /* \"#utility.yul\":2329:2381   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2377:2378   */\n      0x00\n        /* \"#utility.yul\":2374:2375   */\n      dup1\n        /* \"#utility.yul\":2367:2379   */\n      revert\n        /* \"#utility.yul\":2329:2381   */\n    tag_154:\n        /* \"#utility.yul\":2416:2425   */\n      dup2\n        /* \"#utility.yul\":2403:2426   */\n      calldataload\n        /* \"#utility.yul\":2435:2466   */\n      tag_155\n        /* \"#utility.yul\":2460:2465   */\n      dup2\n        /* \"#utility.yul\":2435:2466   */\n      tag_135\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2485:2490   */\n      swap4\n        /* \"#utility.yul\":2249:2496   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3535   */\n    tag_68:\n        /* \"#utility.yul\":3286:3295   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3317:3326   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3334:3349   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3328:3350   */\n      dup5\n      eq\n        /* \"#utility.yul\":3314:3351   */\n      or\n        /* \"#utility.yul\":3304:3529   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3385:3462   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3382:3383   */\n      0x00\n        /* \"#utility.yul\":3375:3463   */\n      mstore\n        /* \"#utility.yul\":3486:3490   */\n      0x11\n        /* \"#utility.yul\":3483:3484   */\n      0x04\n        /* \"#utility.yul\":3476:3491   */\n      mstore\n        /* \"#utility.yul\":3514:3518   */\n      0x24\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3504:3519   */\n      revert\n        /* \"#utility.yul\":3304:3529   */\n    tag_159:\n        /* \"#utility.yul\":3213:3535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3540:3814   */\n    tag_70:\n        /* \"#utility.yul\":3580:3581   */\n      0x00\n        /* \"#utility.yul\":3606:3607   */\n      dup3\n        /* \"#utility.yul\":3596:3785   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":3641:3718   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3638:3639   */\n      0x00\n        /* \"#utility.yul\":3631:3719   */\n      mstore\n        /* \"#utility.yul\":3742:3746   */\n      0x12\n        /* \"#utility.yul\":3739:3740   */\n      0x04\n        /* \"#utility.yul\":3732:3747   */\n      mstore\n        /* \"#utility.yul\":3770:3774   */\n      0x24\n        /* \"#utility.yul\":3767:3768   */\n      0x00\n        /* \"#utility.yul\":3760:3775   */\n      revert\n        /* \"#utility.yul\":3596:3785   */\n    tag_161:\n      pop\n        /* \"#utility.yul\":3799:3808   */\n      div\n      swap1\n        /* \"#utility.yul\":3540:3814   */\n      jump\t// out\n        /* \"#utility.yul\":4533:4810   */\n    tag_96:\n        /* \"#utility.yul\":4600:4606   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4641:4650   */\n      dup3\n        /* \"#utility.yul\":4632:4639   */\n      dup5\n        /* \"#utility.yul\":4628:4651   */\n      sub\n        /* \"#utility.yul\":4624:4656   */\n      slt\n        /* \"#utility.yul\":4621:4673   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":4669:4670   */\n      0x00\n        /* \"#utility.yul\":4666:4667   */\n      dup1\n        /* \"#utility.yul\":4659:4671   */\n      revert\n        /* \"#utility.yul\":4621:4673   */\n    tag_165:\n        /* \"#utility.yul\":4701:4710   */\n      dup2\n        /* \"#utility.yul\":4695:4711   */\n      mload\n        /* \"#utility.yul\":4754:4759   */\n      dup1\n        /* \"#utility.yul\":4747:4760   */\n      iszero\n        /* \"#utility.yul\":4740:4761   */\n      iszero\n        /* \"#utility.yul\":4733:4738   */\n      dup2\n        /* \"#utility.yul\":4730:4762   */\n      eq\n        /* \"#utility.yul\":4720:4780   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":4776:4777   */\n      0x00\n        /* \"#utility.yul\":4773:4774   */\n      dup1\n        /* \"#utility.yul\":4766:4778   */\n      revert\n        /* \"#utility.yul\":4815:5066   */\n    tag_105:\n        /* \"#utility.yul\":4885:4891   */\n      0x00\n        /* \"#utility.yul\":4938:4940   */\n      0x20\n        /* \"#utility.yul\":4926:4935   */\n      dup3\n        /* \"#utility.yul\":4917:4924   */\n      dup5\n        /* \"#utility.yul\":4913:4936   */\n      sub\n        /* \"#utility.yul\":4909:4941   */\n      slt\n        /* \"#utility.yul\":4906:4958   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":4954:4955   */\n      0x00\n        /* \"#utility.yul\":4951:4952   */\n      dup1\n        /* \"#utility.yul\":4944:4956   */\n      revert\n        /* \"#utility.yul\":4906:4958   */\n    tag_168:\n        /* \"#utility.yul\":4986:4995   */\n      dup2\n        /* \"#utility.yul\":4980:4996   */\n      mload\n        /* \"#utility.yul\":5005:5036   */\n      tag_155\n        /* \"#utility.yul\":5030:5035   */\n      dup2\n        /* \"#utility.yul\":5005:5036   */\n      tag_135\n      jump\t// in\n\n    auxdata: 0xa264697066735822122051ba6c2292b24958b8751ef6037c06627dd0dc13e03dd05a39ad94e82bf63ebc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_232": {
									"entryPoint": null,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 150,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:555:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "394:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "387:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:6"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "483:28:6",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "521:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "354:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "368:4:6",
														"type": ""
													}
												],
												"src": "203:350:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610c04380380610c0483398101604081905261002f916100e6565b61003833610096565b61251c81111561008e5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f2068696768000000000000604482015260640160405180910390fd5b6001556100ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f857600080fd5b5051919050565b610af68061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063b9223c9d11610081578063c54e54971161005b578063c54e549714610232578063e31ef91c14610273578063f2fde38b146102f257600080fd5b8063b9223c9d146101e5578063bbdf9b68146101f8578063bc6bc0cd1461020b57600080fd5b8063715018a6116100b2578063715018a61461018c5780638da5cb5b14610196578063b060dd86146101be57600080fd5b80632782d6c7146100d957806333bf61561461011d5780634fb7d3f914610175575b600080fd5b6100ec6100e7366004610948565b610305565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b6101447fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610114565b61017e60015481565b604051908152602001610114565b61019461035f565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610114565b6101447f2a55205a0000000000000000000000000000000000000000000000000000000081565b6101946101f3366004610974565b610373565b61019461020636600461098d565b610427565b6101447f80ac58cd0000000000000000000000000000000000000000000000000000000081565b6102456102403660046109de565b610564565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260ff909116602083015201610114565b6102bf6102813660046109de565b73ffffffffffffffffffffffffffffffffffffffff908116600090815260026020819052604090912080546001820154919092015491831693921691565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815293909216602084015290820152606001610114565b6101946103003660046109de565b610779565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020819052604082206001810154910154919283929116906127109061034a9086610a02565b6103549190610a46565b915091509250929050565b610367610830565b61037160006108b1565b565b61037b610830565b61251c8111156103ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064015b60405180910390fd5b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b61042f610830565b60015481111561049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f2068696768000060448201526064016103e3565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff85811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff8416906301ffc9a790602401602060405180830381865afa92505050801561062d575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261062a91810190610a81565b60015b15610647578015610645575060009360019350915050565b505b8273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156106cc575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526106c991810190610aa3565b60015b61076f578273ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610755575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261075291810190610aa3565b60015b6107655750600092600492509050565b9360039350915050565b9360029350915050565b610781610830565b73ffffffffffffffffffffffffffffffffffffffff8116610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103e3565b61082d816108b1565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e3565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461082d57600080fd5b6000806040838503121561095b57600080fd5b823561096681610926565b946020939093013593505050565b60006020828403121561098657600080fd5b5035919050565b600080600080608085870312156109a357600080fd5b84356109ae81610926565b935060208501356109be81610926565b925060408501356109ce81610926565b9396929550929360600135925050565b6000602082840312156109f057600080fd5b81356109fb81610926565b9392505050565b8082028115828204841417610a40577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600082610a7c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215610a9357600080fd5b815180151581146109fb57600080fd5b600060208284031215610ab557600080fd5b81516109fb8161092656fea264697066735822122051ba6c2292b24958b8751ef6037c06627dd0dc13e03dd05a39ad94e82bf63ebc64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC04 CODESIZE SUB DUP1 PUSH2 0xC04 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x96 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF6 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9223C9D GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xC54E5497 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xBBDF9B68 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x948 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x35F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x144 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH2 0x144 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x34A SWAP1 DUP7 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x354 SWAP2 SWAP1 PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x367 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x371 PUSH1 0x0 PUSH2 0x8B1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x37B PUSH2 0x830 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x42F PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x62D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x62A SWAP2 DUP2 ADD SWAP1 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x647 JUMPI DUP1 ISZERO PUSH2 0x645 JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x6CC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x6C9 SWAP2 DUP2 ADD SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x76F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x755 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x752 SWAP2 DUP2 ADD SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x765 JUMPI POP PUSH1 0x0 SWAP3 PUSH1 0x4 SWAP3 POP SWAP1 POP JUMP JUMPDEST SWAP4 PUSH1 0x3 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP4 PUSH1 0x2 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0x781 PUSH2 0x830 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x82D DUP2 PUSH2 0x8B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x95B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x966 DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x9AE DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x9BE DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x9CE DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9FB DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA40 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA7C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9FB DUP2 PUSH2 0x926 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xBA PUSH13 0x2292B24958B8751EF6037C0662 PUSH30 0xD0DC13E03DD05A39AD94E82BF63EBC64736F6C6343000811003300000000 ",
							"sourceMap": "357:3517:4:-:0;;;1194:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;1312:4:4;1292:16;:24;;1284:63;;;;-1:-1:-1;;;1284:63:4;;405:2:6;1284:63:4;;;387:21:6;444:2;424:18;;;417:30;483:28;463:18;;;456:56;529:18;;1284:63:4;;;;;;;;1357:15;:34;357:3517;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:184:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:6;;14:184;-1:-1:-1;14:184:6:o;203:350::-;357:3517:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC1155_191": {
									"entryPoint": null,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC2981_194": {
									"entryPoint": null,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC721_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2096,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2225,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkForCollectionSetter_425": {
									"entryPoint": 1380,
									"id": 425,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 863,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeInfoCollection_350": {
									"entryPoint": null,
									"id": 350,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@royaltyFeeLimit_196": {
									"entryPoint": null,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyInfo_323": {
									"entryPoint": 773,
									"id": 323,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@transferOwnership_91": {
									"entryPoint": 1913,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeLimit_256": {
									"entryPoint": 883,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollection_295": {
									"entryPoint": 1063,
									"id": 295,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5836:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:109:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "146:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "155:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "158:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "148:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "148:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "148:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "100:42:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:54:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:65:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:73:6"
															},
															"nodeType": "YulIf",
															"src": "69:93:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:6",
														"type": ""
													}
												],
												"src": "14:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "260:228:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "306:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "318:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "308:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "308:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "308:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "281:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "290:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "277:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "277:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "302:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "273:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "273:32:6"
															},
															"nodeType": "YulIf",
															"src": "270:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "357:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "344:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "344:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "335:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "401:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "376:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "376:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "416:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "426:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "416:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "440:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "450:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "450:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "440:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "218:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "229:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "241:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "249:6:6",
														"type": ""
													}
												],
												"src": "173:315:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "622:168:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "632:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "644:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "655:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "640:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "632:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "674:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "689:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "697:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "685:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "685:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:74:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "667:74:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "761:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "772:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "757:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "777:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "750:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "583:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "594:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "602:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "613:4:6",
														"type": ""
													}
												],
												"src": "493:297:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "894:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "904:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "916:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "927:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "904:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "946:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "969:66:6",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "957:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:79:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:98:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:98:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "863:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "874:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "885:4:6",
														"type": ""
													}
												],
												"src": "795:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1149:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1159:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1171:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1182:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1159:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1201:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1212:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1118:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1129:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1140:4:6",
														"type": ""
													}
												],
												"src": "1048:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:125:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1341:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1353:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1364:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1349:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1349:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1341:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1383:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1406:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1394:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1394:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:74:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1376:74:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1300:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1311:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1322:4:6",
														"type": ""
													}
												],
												"src": "1230:226:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:6"
															},
															"nodeType": "YulIf",
															"src": "1541:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1625:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1612:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1497:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1508:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1520:6:6",
														"type": ""
													}
												],
												"src": "1461:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1767:477:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1814:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1823:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1826:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1816:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1816:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1816:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1788:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1797:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1784:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1784:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1809:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1780:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1780:33:6"
															},
															"nodeType": "YulIf",
															"src": "1777:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1839:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1865:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1852:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1843:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1909:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1884:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1884:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1924:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1934:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1948:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1991:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1976:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1976:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1963:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1952:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2029:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2004:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2046:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2056:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2046:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2072:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2104:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2115:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2100:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2100:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2087:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:32:6"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "2076:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2153:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2128:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2128:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2170:17:6",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "2180:7:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2170:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2196:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2223:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2234:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2219:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2219:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2206:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2196:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1709:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1720:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1732:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1740:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1748:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1756:6:6",
														"type": ""
													}
												],
												"src": "1646:598:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2319:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2365:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2374:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2367:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2367:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2367:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2340:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2349:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2336:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2336:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2361:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2332:32:6"
															},
															"nodeType": "YulIf",
															"src": "2329:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2390:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2416:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2403:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2394:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2460:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2435:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2435:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2475:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2485:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2285:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2296:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2308:6:6",
														"type": ""
													}
												],
												"src": "2249:247:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2626:179:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2636:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2648:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2659:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2636:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2678:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2693:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2701:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2671:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:74:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2671:74:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2765:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2761:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2761:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2793:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2781:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2754:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2754:45:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2587:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2598:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2606:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2617:4:6",
														"type": ""
													}
												],
												"src": "2501:304:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2967:241:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2977:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2989:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3000:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2985:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2977:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3012:52:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3022:42:6",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3016:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3080:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3095:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3103:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3091:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3073:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3127:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3138:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3123:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3147:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3155:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3143:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3143:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3179:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3190:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3175:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3175:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3195:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2920:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2931:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2939:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2947:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2958:4:6",
														"type": ""
													}
												],
												"src": "2810:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3265:270:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3275:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3290:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3293:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3286:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3275:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3361:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3382:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3385:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3375:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3375:88:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3375:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3486:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3476:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3324:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3317:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3317:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3331:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3338:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3347:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3334:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3334:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3328:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3328:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3314:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3307:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3307:45:6"
															},
															"nodeType": "YulIf",
															"src": "3304:225:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3244:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3247:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3253:7:6",
														"type": ""
													}
												],
												"src": "3213:322:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3586:228:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3617:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3638:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3641:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3631:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3631:88:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3631:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3739:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3742:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3732:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3732:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3732:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3767:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3770:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3760:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3760:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3760:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3606:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:9:6"
															},
															"nodeType": "YulIf",
															"src": "3596:189:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3794:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3803:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3806:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3799:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3799:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3794:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3571:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3574:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3580:1:6",
														"type": ""
													}
												],
												"src": "3540:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3993:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4010:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4021:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4003:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4003:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4044:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4055:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4040:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4033:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4033:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4083:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:18:6"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4099:28:6",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4072:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4072:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4072:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4137:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4149:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4160:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4145:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4145:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4137:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3970:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3984:4:6",
														"type": ""
													}
												],
												"src": "3819:350:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4348:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4365:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4358:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4399:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4395:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4415:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4388:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4438:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4449:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4434:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4434:18:6"
																	},
																	{
																		"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4454:32:6",
																		"type": "",
																		"value": "Registry: Royalty fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4427:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4427:60:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4427:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4496:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4508:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4519:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4504:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4504:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4496:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4325:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4339:4:6",
														"type": ""
													}
												],
												"src": "4174:354:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4611:199:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4657:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4666:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4669:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4659:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4659:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4659:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4632:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4628:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4628:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4624:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4624:32:6"
															},
															"nodeType": "YulIf",
															"src": "4621:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4682:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4701:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4695:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4695:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4686:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4764:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4773:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4776:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4766:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4766:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4766:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4733:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4754:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4747:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4747:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4740:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4740:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4730:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4730:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:40:6"
															},
															"nodeType": "YulIf",
															"src": "4720:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4789:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4799:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4789:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4577:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4588:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4600:6:6",
														"type": ""
													}
												],
												"src": "4533:277:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4896:170:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4942:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4951:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4954:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4944:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4944:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4944:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4917:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4926:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4913:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4913:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4938:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4909:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4909:32:6"
															},
															"nodeType": "YulIf",
															"src": "4906:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4967:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4986:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4980:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4971:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5030:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5005:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5005:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5045:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5055:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5045:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4862:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4873:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4885:6:6",
														"type": ""
													}
												],
												"src": "4815:251:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5245:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5262:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5273:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5255:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5255:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5296:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5307:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5292:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5292:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5312:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5285:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5285:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5335:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5346:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5331:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5331:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5351:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5324:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5324:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5324:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5417:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5402:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5422:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5395:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5395:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5395:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5440:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5452:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5463:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5448:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5440:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5222:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5236:4:6",
														"type": ""
													}
												],
												"src": "5071:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5652:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5669:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5680:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5662:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5662:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5703:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5714:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5719:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5742:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5753:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5738:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5738:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5758:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5731:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5731:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5731:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5802:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5814:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5825:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5810:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5802:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5629:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5643:4:6",
														"type": ""
													}
												],
												"src": "5478:356:6"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Registry: Royalty fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100d45760003560e01c8063b9223c9d11610081578063c54e54971161005b578063c54e549714610232578063e31ef91c14610273578063f2fde38b146102f257600080fd5b8063b9223c9d146101e5578063bbdf9b68146101f8578063bc6bc0cd1461020b57600080fd5b8063715018a6116100b2578063715018a61461018c5780638da5cb5b14610196578063b060dd86146101be57600080fd5b80632782d6c7146100d957806333bf61561461011d5780634fb7d3f914610175575b600080fd5b6100ec6100e7366004610948565b610305565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b6101447fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610114565b61017e60015481565b604051908152602001610114565b61019461035f565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610114565b6101447f2a55205a0000000000000000000000000000000000000000000000000000000081565b6101946101f3366004610974565b610373565b61019461020636600461098d565b610427565b6101447f80ac58cd0000000000000000000000000000000000000000000000000000000081565b6102456102403660046109de565b610564565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260ff909116602083015201610114565b6102bf6102813660046109de565b73ffffffffffffffffffffffffffffffffffffffff908116600090815260026020819052604090912080546001820154919092015491831693921691565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815293909216602084015290820152606001610114565b6101946103003660046109de565b610779565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020819052604082206001810154910154919283929116906127109061034a9086610a02565b6103549190610a46565b915091509250929050565b610367610830565b61037160006108b1565b565b61037b610830565b61251c8111156103ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064015b60405180910390fd5b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b61042f610830565b60015481111561049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f2068696768000060448201526064016103e3565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff85811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff8416906301ffc9a790602401602060405180830381865afa92505050801561062d575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261062a91810190610a81565b60015b15610647578015610645575060009360019350915050565b505b8273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156106cc575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526106c991810190610aa3565b60015b61076f578273ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610755575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261075291810190610aa3565b60015b6107655750600092600492509050565b9360039350915050565b9360029350915050565b610781610830565b73ffffffffffffffffffffffffffffffffffffffff8116610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103e3565b61082d816108b1565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e3565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461082d57600080fd5b6000806040838503121561095b57600080fd5b823561096681610926565b946020939093013593505050565b60006020828403121561098657600080fd5b5035919050565b600080600080608085870312156109a357600080fd5b84356109ae81610926565b935060208501356109be81610926565b925060408501356109ce81610926565b9396929550929360600135925050565b6000602082840312156109f057600080fd5b81356109fb81610926565b9392505050565b8082028115828204841417610a40577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600082610a7c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215610a9357600080fd5b815180151581146109fb57600080fd5b600060208284031215610ab557600080fd5b81516109fb8161092656fea264697066735822122051ba6c2292b24958b8751ef6037c06627dd0dc13e03dd05a39ad94e82bf63ebc64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9223C9D GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xC54E5497 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xBBDF9B68 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x948 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x35F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x144 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH2 0x144 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x34A SWAP1 DUP7 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x354 SWAP2 SWAP1 PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x367 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x371 PUSH1 0x0 PUSH2 0x8B1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x37B PUSH2 0x830 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x42F PUSH2 0x830 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x62D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x62A SWAP2 DUP2 ADD SWAP1 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x647 JUMPI DUP1 ISZERO PUSH2 0x645 JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x6CC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x6C9 SWAP2 DUP2 ADD SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x76F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x755 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x752 SWAP2 DUP2 ADD SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x765 JUMPI POP PUSH1 0x0 SWAP3 PUSH1 0x4 SWAP3 POP SWAP1 POP JUMP JUMPDEST SWAP4 PUSH1 0x3 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP4 PUSH1 0x2 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0x781 PUSH2 0x830 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x82D DUP2 PUSH2 0x8B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x95B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x966 DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x9AE DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x9BE DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x9CE DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9FB DUP2 PUSH2 0x926 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA40 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA7C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9FB DUP2 PUSH2 0x926 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xBA PUSH13 0x2292B24958B8751EF6037C0662 PUSH30 0xD0DC13E03DD05A39AD94E82BF63EBC64736F6C6343000811003300000000 ",
							"sourceMap": "357:3517:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2359:267;;;;;;:::i;:::-;;:::i;:::-;;;;697:42:6;685:55;;;667:74;;772:2;757:18;;750:34;;;;640:18;2359:267:4;;;;;;;;639:56;;;;;;;;969:66:6;957:79;;;939:98;;927:2;912:18;639:56:4;795:248:6;840:30:4;;;;;;;;;1194:25:6;;;1182:2;1167:18;840:30:4;1048:177:6;1831:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;1273:6;;;;1376:74:6;;1364:2;1349:18;1201:85:0;1230:226:6;729:56:4;;;;;1460:303;;;;;;:::i;:::-;;:::i;1769:427::-;;;;;;:::i;:::-;;:::i;550:55::-;;;;;3244:628;;;;;;:::i;:::-;;:::i;:::-;;;;2701:42:6;2689:55;;;2671:74;;2793:4;2781:17;;;2776:2;2761:18;;2754:45;2644:18;3244:628:4;2501:304:6;2668:358:4;;;;;;:::i;:::-;2858:37;;;;2779:7;2858:37;;;:25;:37;;;;;;;;:44;;;2912:46;;;2968:41;;;;;2858:44;;;;2912:46;;;2668:358;;;;;3022:42:6;3091:15;;;3073:34;;3143:15;;;;3138:2;3123:18;;3116:43;3175:18;;;3168:34;3000:2;2985:18;2668:358:4;2810:398:6;2081:198:0;;;;;;:::i;:::-;;:::i;2359:267:4:-;2493:37;;;;2448:7;2493:37;;;:25;:37;;;;;;;:46;;;;2559:41;;;2448:7;;;;2493:46;;;2604:5;;2550:50;;:6;:50;:::i;:::-;2549:60;;;;:::i;:::-;2476:143;;;;2359:267;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1460:303:4:-;1094:13:0;:11;:13::i;:::-;1625:4:4::1;1605:16;:24;;1597:63;;;::::0;::::1;::::0;;4021:2:6;1597:63:4::1;::::0;::::1;4003:21:6::0;4060:2;4040:18;;;4033:30;4099:28;4079:18;;;4072:56;4145:18;;1597:63:4::1;;;;;;;;;1670:15;:34:::0;;;1720:36:::1;::::0;1194:25:6;;;1720:36:4::1;::::0;1182:2:6;1167:18;1720:36:4::1;;;;;;;1460:303:::0;:::o;1769:427::-;1094:13:0;:11;:13::i;:::-;1967:15:4::1;;1960:3;:22;;1952:65;;;::::0;::::1;::::0;;4376:2:6;1952:65:4::1;::::0;::::1;4358:21:6::0;4415:2;4395:18;;;4388:30;4454:32;4434:18;;;4427:60;4504:18;;1952:65:4::1;4174:354:6::0;1952:65:4::1;2067:55;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;::::1;;::::0;;::::1;::::0;;;;;;;;;2027:37;;::::1;-1:-1:-1::0;2027:37:4;;;:25:::1;:37:::0;;;;;;;:95;;;;;;::::1;::::0;;;::::1;;::::0;;;;-1:-1:-1;2027:95:4;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;2138:51;;1194:25:6;;;2067:55:4;;2138:51:::1;::::0;1167:18:6;2138:51:4::1;;;;;;;1769:427:::0;;;;:::o;3244:628::-;3351:59;;;;;3389:20;3351:59;;;939:98:6;3321:7:4;;;;3351:37;;;;;;912:18:6;;3351:59:4;;;;;;;;;;;;;;;;;;-1:-1:-1;3351:59:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3347:206;;;3461:16;3457:77;;;-1:-1:-1;3513:1:4;;3517;;-1:-1:-1;3244:628:4;-1:-1:-1;;3244:628:4:o;3457:77::-;3411:133;3347:206;3576:10;3567:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3567:28:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3563:303;;3698:10;3689:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3689:28:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3685:171;;-1:-1:-1;3835:1:4;;3839;;-1:-1:-1;3244:628:4;-1:-1:-1;3244:628:4:o;3685:171::-;3769:6;3777:1;;-1:-1:-1;3244:628:4;-1:-1:-1;;3244:628:4:o;3563:303::-;3643:6;3651:1;;-1:-1:-1;3244:628:4;-1:-1:-1;;3244:628:4:o;2081:198:0:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;5273:2:6;2161:73:0::1;::::0;::::1;5255:21:6::0;5312:2;5292:18;;;5285:30;5351:34;5331:18;;;5324:62;5422:8;5402:18;;;5395:36;5448:19;;2161:73:0::1;5071:402:6::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:1;1422:23:0;1414:68;;;;;;;5680:2:6;1414:68:0;;;5662:21:6;;;5699:18;;;5692:30;5758:34;5738:18;;;5731:62;5810:18;;1414:68:0;5478:356:6;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:154:6:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:315;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;478:2;463:18;;;;450:32;;-1:-1:-1;;;173:315:6:o;1461:180::-;1520:6;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;-1:-1:-1;1612:23:6;;1461:180;-1:-1:-1;1461:180:6:o;1646:598::-;1732:6;1740;1748;1756;1809:3;1797:9;1788:7;1784:23;1780:33;1777:53;;;1826:1;1823;1816:12;1777:53;1865:9;1852:23;1884:31;1909:5;1884:31;:::i;:::-;1934:5;-1:-1:-1;1991:2:6;1976:18;;1963:32;2004:33;1963:32;2004:33;:::i;:::-;2056:7;-1:-1:-1;2115:2:6;2100:18;;2087:32;2128:33;2087:32;2128:33;:::i;:::-;1646:598;;;;-1:-1:-1;2180:7:6;;2234:2;2219:18;2206:32;;-1:-1:-1;;1646:598:6:o;2249:247::-;2308:6;2361:2;2349:9;2340:7;2336:23;2332:32;2329:52;;;2377:1;2374;2367:12;2329:52;2416:9;2403:23;2435:31;2460:5;2435:31;:::i;:::-;2485:5;2249:247;-1:-1:-1;;;2249:247:6:o;3213:322::-;3286:9;;;3317;;3334:15;;;3328:22;;3314:37;3304:225;;3385:77;3382:1;3375:88;3486:4;3483:1;3476:15;3514:4;3511:1;3504:15;3304:225;3213:322;;;;:::o;3540:274::-;3580:1;3606;3596:189;;3641:77;3638:1;3631:88;3742:4;3739:1;3732:15;3770:4;3767:1;3760:15;3596:189;-1:-1:-1;3799:9:6;;3540:274::o;4533:277::-;4600:6;4653:2;4641:9;4632:7;4628:23;4624:32;4621:52;;;4669:1;4666;4659:12;4621:52;4701:9;4695:16;4754:5;4747:13;4740:21;4733:5;4730:32;4720:60;;4776:1;4773;4766:12;4815:251;4885:6;4938:2;4926:9;4917:7;4913:23;4909:32;4906:52;;;4954:1;4951;4944:12;4906:52;4986:9;4980:16;5005:31;5030:5;5005:31;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "561200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC1155()": "250",
								"INTERFACE_ID_ERC2981()": "271",
								"INTERFACE_ID_ERC721()": "271",
								"checkForCollectionSetter(address)": "infinite",
								"owner()": "2334",
								"renounceOwnership()": "infinite",
								"royaltyFeeInfoCollection(address)": "6862",
								"royaltyFeeLimit()": "2363",
								"royaltyInfo(address,uint256)": "4911",
								"transferOwnership(address)": "infinite",
								"updateRoyaltyFeeLimit(uint256)": "25590",
								"updateRoyaltyInfoForCollection(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 357,
									"end": 3874,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1194,
									"end": 1398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1316,
									"name": "PUSH",
									"source": 4,
									"value": "251C"
								},
								{
									"begin": 1292,
									"end": 1308,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 387,
									"end": 408,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "1A"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 442,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 417,
									"end": 447,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 483,
									"end": 511,
									"name": "PUSH",
									"source": 6,
									"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 456,
									"end": 512,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 529,
									"end": 547,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 529,
									"end": 547,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1357,
									"end": 1372,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1357,
									"end": 1391,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 203,
									"end": 553,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 203,
									"end": 553,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 3874,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051ba6c2292b24958b8751ef6037c06627dd0dc13e03dd05a39ad94e82bf63ebc64736f6c63430008110033",
									".code": [
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "C54E5497"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "C54E5497"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "E31EF91C"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "BBDF9B68"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "BC6BC0CD"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "B060DD86"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "2782D6C7"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "33BF6156"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "4FB7D3F9"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 3874,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2359,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 697,
											"end": 739,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 685,
											"end": 740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 667,
											"end": 741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 667,
											"end": 741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 750,
											"end": 784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 750,
											"end": 784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 750,
											"end": 784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 640,
											"end": 658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH",
											"source": 4,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 969,
											"end": 1035,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 927,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 795,
											"end": 1043,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 840,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1184,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1048,
											"end": 1225,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 1450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1230,
											"end": 1456,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 729,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 729,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 729,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 729,
											"end": 785,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 729,
											"end": 785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 729,
											"end": 785,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1460,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1460,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1769,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1769,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 550,
											"end": 605,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3244,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3244,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2701,
											"end": 2743,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2689,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2744,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2744,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2797,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2799,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2501,
											"end": 2805,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2668,
											"end": 3026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2883,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2902,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2902,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2902,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2912,
											"end": 2958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2958,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2958,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3009,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3009,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2902,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2902,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2902,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2902,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2958,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2958,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2958,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3140,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3002,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2810,
											"end": 3208,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2530,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2539,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2493,
											"end": 2539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2539,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2539,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2600,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2600,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2539,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2550,
											"end": 2600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2556,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2550,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2600,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2550,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2549,
											"end": 2609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2549,
											"end": 2609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2609,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2549,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "251C"
										},
										{
											"begin": 1605,
											"end": 1621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1629,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1629,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1670,
											"end": 1704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1704,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256"
										},
										{
											"begin": 1720,
											"end": 1756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1184,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1967,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1963,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1982,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1982,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1952,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 2017,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1952,
											"end": 2017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1952,
											"end": 2017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4415,
											"end": 4417,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4418,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4486,
											"name": "PUSH",
											"source": 6,
											"value": "52656769737472793A20526F79616C74792066656520746F6F20686967680000"
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4487,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4174,
											"end": 4528,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1952,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2064,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2122,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "D01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64"
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1167,
											"end": 1185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2189,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 912,
											"end": 930,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3351,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3351,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3347,
											"end": 3553,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3347,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3347,
											"end": 3553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3461,
											"end": 3477,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3534,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3457,
											"end": 3534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3514,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3534,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3457,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3347,
											"end": 3553,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3347,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3586,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3593,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3567,
											"end": 3593,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3593,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3567,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3567,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3563,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3563,
											"end": 3866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3715,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3689,
											"end": 3715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3715,
											"name": "PUSH",
											"source": 4,
											"value": "F851A440"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3689,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3689,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3685,
											"end": 3856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3835,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3836,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3840,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3839,
											"end": 3840,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3856,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3685,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3769,
											"end": 3775,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3563,
											"end": 3866,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3563,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3649,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3651,
											"end": 3652,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3651,
											"end": 3652,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5275,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5255,
											"end": 5276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5292,
											"end": 5310,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5292,
											"end": 5310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5385,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5324,
											"end": 5386,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5430,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5467,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5448,
											"end": 5467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5071,
											"end": 5473,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5680,
											"end": 5682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5758,
											"end": 5792,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5793,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5478,
											"end": 5834,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 168,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 14,
											"end": 168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 100,
											"end": 142,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 89,
											"end": 143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 82,
											"end": 87,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 79,
											"end": 144,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 69,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 69,
											"end": 162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 158,
											"end": 159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 160,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 173,
											"end": 488,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 173,
											"end": 488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 302,
											"end": 304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 299,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 281,
											"end": 288,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 277,
											"end": 300,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 273,
											"end": 305,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 270,
											"end": 322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 270,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 270,
											"end": 322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 308,
											"end": 320,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 270,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 270,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 366,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 344,
											"end": 367,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 376,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 401,
											"end": 406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 376,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 376,
											"end": 407,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 376,
											"end": 407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 426,
											"end": 431,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 481,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 481,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 482,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 482,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 173,
											"end": 488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1641,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1461,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1635,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 2244,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1646,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1762,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1812,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1830,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1777,
											"end": 1830,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 1828,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1830,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1777,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1874,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1875,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1909,
											"end": 1914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1884,
											"end": 1915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1915,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1884,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1991,
											"end": 1993,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2004,
											"end": 2037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2037,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2004,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2063,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2119,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2087,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2128,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2161,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2128,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 2244,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 2244,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 2244,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 2244,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2236,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2219,
											"end": 2237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 2244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2496,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2249,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2359,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2364,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2435,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2490,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2496,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3349,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3351,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3304,
											"end": 3529,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3463,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3490,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3476,
											"end": 3491,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3518,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3519,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3529,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3304,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3814,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3540,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3580,
											"end": 3581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3596,
											"end": 3785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3718,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3638,
											"end": 3639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3719,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3746,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3747,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3775,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3596,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3808,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4533,
											"end": 4810,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4533,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4641,
											"end": 4650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4632,
											"end": 4639,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4656,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4701,
											"end": 4710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4695,
											"end": 4711,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4733,
											"end": 4738,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4720,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4720,
											"end": 4780,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4773,
											"end": 4774,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4778,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 5066,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4815,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4885,
											"end": 4891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4940,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 4924,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4936,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4909,
											"end": 4941,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4958,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4906,
											"end": 4958,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4954,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 4956,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4958,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4906,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4996,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5030,
											"end": 5035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5005,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Manager/interface/IOwnable.sol",
								"contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
								"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC1155()": "33bf6156",
							"INTERFACE_ID_ERC2981()": "b060dd86",
							"INTERFACE_ID_ERC721()": "bc6bc0cd",
							"checkForCollectionSetter(address)": "c54e5497",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyFeeLimit()": "4fb7d3f9",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"transferOwnership(address)": "f2fde38b",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollection(address,address,address,uint256)": "bbdf9b68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"NewRoyaltyFeeLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RoyaltyFeeUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC2981\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkForCollectionSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":\"RoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]},\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xb72cb0d045761b532ac58159acfc822d37c18c1f459a63296f93863b6b5c1db1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bfa8b5c0b3ce7db33fa5e50b9cf8705220ebf5dbf1bcec958500c6ebd3022ce\",\"dweb:/ipfs/Qmb2gxg3ReSBBBD5n1ocZUdiEZudmvgC2VaAmQDtJZG82P\"]},\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x3d1aef933c5c45cae2a9d102babd425844eaec353a84f6c3bf659336038e1cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721a303c1a32c92841d2c9541e3fc7afd440af8ee20bbba620814a8be8f57d11\",\"dweb:/ipfs/QmQWrBJJDiqZ62qfQa2fpAfgWYgyPDEePCrLtZjmd6FJu4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 196,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "royaltyFeeLimit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 201,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_royaltyFeeInfoCollection",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(FeeInfo)185_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(FeeInfo)185_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(FeeInfo)185_storage"
							},
							"t_struct(FeeInfo)185_storage": {
								"encoding": "inplace",
								"label": "struct RoyaltyFeeRegistry.FeeInfo",
								"members": [
									{
										"astId": 180,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "setter",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 182,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "receiver",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 184,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "fee",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"IRoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollection(address,address,address,uint256)": "bbdf9b68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":\"IRoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x3d1aef933c5c45cae2a9d102babd425844eaec353a84f6c3bf659336038e1cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721a303c1a32c92841d2c9541e3fc7afd440af8ee20bbba620814a8be8f57d11\",\"dweb:/ipfs/QmQWrBJJDiqZ62qfQa2fpAfgWYgyPDEePCrLtZjmd6FJu4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IERC165",
							"nameLocation": "415:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "801:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:2"
									},
									"scope": 146,
									"src": "774:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "405:447:2",
							"usedErrors": []
						}
					],
					"src": "100:753:2"
				},
				"id": 2
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "IOwnable",
							"nameLocation": "67:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "91:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "117:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "109:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:18:3"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:0:3"
									},
									"scope": 164,
									"src": "82:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "151:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "156:2:3"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "182:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:9:3"
									},
									"scope": 164,
									"src": "142:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f851a440",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "admin",
									"nameLocation": "206:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:3"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "237:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:3"
									},
									"scope": 164,
									"src": "197:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 165,
							"src": "57:191:3",
							"usedErrors": []
						}
					],
					"src": "32:217:3"
				},
				"id": 3
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						],
						"IOwnable": [
							164
						],
						"IRoyaltyFeeRegistry": [
							467
						],
						"Ownable": [
							112
						],
						"RoyaltyFeeRegistry": [
							426
						]
					},
					"id": 427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 427,
							"sourceUnit": 147,
							"src": "56:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 167,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 146,
										"src": "64:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 427,
							"sourceUnit": 113,
							"src": "137:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 169,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "145:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/IOwnable.sol",
							"file": "../interface/IOwnable.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 427,
							"sourceUnit": 165,
							"src": "205:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 164,
										"src": "213:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
							"file": "./interface/IRoyaltyFeeRegistry.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 427,
							"sourceUnit": 468,
							"src": "258:72:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IRoyaltyFeeRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 467,
										"src": "266:19:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 175,
										"name": "IRoyaltyFeeRegistry",
										"nameLocations": [
											"388:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "388:19:4"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "388:19:4"
								},
								{
									"baseName": {
										"id": 177,
										"name": "Ownable",
										"nameLocations": [
											"409:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "409:7:4"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "409:7:4"
								}
							],
							"canonicalName": "RoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 426,
							"linearizedBaseContracts": [
								426,
								112,
								134,
								467
							],
							"name": "RoyaltyFeeRegistry",
							"nameLocation": "366:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "RoyaltyFeeRegistry.FeeInfo",
									"id": 185,
									"members": [
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "setter",
											"nameLocation": "456:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "448:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 179,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "448:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 182,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "480:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "472:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 181,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "506:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "498:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 183,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeInfo",
									"nameLocation": "430:7:4",
									"nodeType": "StructDefinition",
									"scope": 426,
									"src": "423:93:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bc6bc0cd",
									"id": 188,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC721",
									"nameLocation": "573:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "550:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 186,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "550:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783830616335386364",
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "595:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2158778573_by_1",
											"typeString": "int_const 2158778573"
										},
										"value": "0x80ac58cd"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "33bf6156",
									"id": 191,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC1155",
									"nameLocation": "662:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "639:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 189,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "639:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "685:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b060dd86",
									"id": 194,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC2981",
									"nameLocation": "752:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "729:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 192,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "729:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783261353532303561",
										"id": 193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "775:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_710221914_by_1",
											"typeString": "int_const 710221914"
										},
										"value": "0x2a55205a"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fb7d3f9",
									"id": 196,
									"mutability": "mutable",
									"name": "royaltyFeeLimit",
									"nameLocation": "855:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "840:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "840:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_royaltyFeeInfoCollection",
									"nameLocation": "956:25:4",
									"nodeType": "VariableDeclaration",
									"scope": 426,
									"src": "920:61:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
										"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
									},
									"typeName": {
										"id": 200,
										"keyType": {
											"id": 197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "928:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "920:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
											"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
										},
										"valueType": {
											"id": 199,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 198,
												"name": "FeeInfo",
												"nameLocations": [
													"939:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "939:7:4"
											},
											"referencedDeclaration": 185,
											"src": "939:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeeInfo_$185_storage_ptr",
												"typeString": "struct RoyaltyFeeRegistry.FeeInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256",
									"id": 205,
									"name": "NewRoyaltyFeeLimit",
									"nameLocation": "994:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"indexed": false,
												"mutability": "mutable",
												"name": "royaltyFeeLimit",
												"nameLocation": "1021:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1013:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:25:4"
									},
									"src": "988:50:4"
								},
								{
									"anonymous": false,
									"eventSelector": "d01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64",
									"id": 215,
									"name": "RoyaltyFeeUpdate",
									"nameLocation": "1049:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1082:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1066:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "1110:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1094:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1134:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1118:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1152:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1144:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:91:4"
									},
									"src": "1043:114:4"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "1232:166:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "1292:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1312:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "1292:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1318:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1284:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1284:63:4"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1357:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 228,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1375:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1357:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "1357:34:4"
											}
										]
									},
									"id": 232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "1214:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1206:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:26:4"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1232:0:4"
									},
									"scope": 426,
									"src": "1194:204:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										444
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1545:218:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 241,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1605:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1625:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "1605:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1631:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1597:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "1597:63:4"
											},
											{
												"expression": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 247,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1670:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 248,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1688:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1670:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1670:34:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 252,
															"name": "_royaltyFeeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "1739:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"name": "NewRoyaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1720:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "EmitStatement",
												"src": "1715:41:4"
											}
										]
									},
									"functionSelector": "b9223c9d",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 237,
												"name": "onlyOwner",
												"nameLocations": [
													"1535:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1535:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1535:9:4"
										}
									],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "1469:21:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 236,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1526:8:4"
									},
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "1499:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1491:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:26:4"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1545:0:4"
									},
									"scope": 426,
									"src": "1460:303:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										439
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "1942:254:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "1960:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 272,
																"name": "royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1967:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1960:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1984:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															},
															"value": "Registry: Royalty fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1952:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1952:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "1952:65:4"
											},
											{
												"expression": {
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 277,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "2027:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 279,
														"indexExpression": {
															"id": 278,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "2053:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2027:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 281,
																"name": "setter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2084:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 282,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2102:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 283,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2117:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 280,
															"name": "FeeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2067:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FeeInfo_$185_storage_ptr_$",
																"typeString": "type(struct RoyaltyFeeRegistry.FeeInfo storage pointer)"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2076:6:4",
															"2092:8:4",
															"2112:3:4"
														],
														"names": [
															"setter",
															"receiver",
															"fee"
														],
														"nodeType": "FunctionCall",
														"src": "2067:55:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_memory_ptr",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo memory"
														}
													},
													"src": "2027:95:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
														"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "2027:95:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 288,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "2155:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 289,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2167:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 290,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "2175:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2185:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 287,
														"name": "RoyaltyFeeUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2138:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2138:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "EmitStatement",
												"src": "2133:56:4"
											}
										]
									},
									"functionSelector": "bbdf9b68",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 268,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 267,
												"name": "onlyOwner",
												"nameLocations": [
													"1932:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1932:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:9:4"
										}
									],
									"name": "updateRoyaltyInfoForCollection",
									"nameLocation": "1778:30:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 266,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1923:8:4"
									},
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1826:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "1854:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1846:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1878:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1870:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1904:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1896:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:105:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1942:0:4"
									},
									"scope": 426,
									"src": "1769:427:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										455
									],
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "2466:160:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 307,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2493:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 309,
																"indexExpression": {
																	"id": 308,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "2519:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2493:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2531:8:4",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "2493:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 311,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "2550:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 312,
																					"name": "_royaltyFeeInfoCollection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 201,
																					"src": "2559:25:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																						"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																					}
																				},
																				"id": 314,
																				"indexExpression": {
																					"id": 313,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 297,
																					"src": "2585:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2559:37:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																					"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																				}
																			},
																			"id": 315,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2597:3:4",
																			"memberName": "fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 184,
																			"src": "2559:41:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2550:50:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 317,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2549:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2604:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "2549:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 320,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2483:136:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 306,
												"id": 321,
												"nodeType": "Return",
												"src": "2476:143:4"
											}
										]
									},
									"functionSelector": "2782d6c7",
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "2368:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 301,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2430:8:4"
									},
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2388:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2380:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2380:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2408:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2400:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2379:36:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2448:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:18:4"
									},
									"scope": 426,
									"src": "2359:267:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										466
									],
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "2831:195:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 335,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2858:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 337,
																"indexExpression": {
																	"id": 336,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "2884:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2858:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2896:6:4",
															"memberName": "setter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 180,
															"src": "2858:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 339,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2912:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 341,
																"indexExpression": {
																	"id": 340,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "2938:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2912:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2950:8:4",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "2912:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 343,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2968:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 345,
																"indexExpression": {
																	"id": 344,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "2994:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2968:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3006:3:4",
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 184,
															"src": "2968:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 347,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2848:171:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"functionReturnParameters": 334,
												"id": 348,
												"nodeType": "Return",
												"src": "2841:178:4"
											}
										]
									},
									"functionSelector": "e31ef91c",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "2677:24:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 327,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2748:8:4"
									},
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2710:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2702:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:20:4"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2779:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2796:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:57:4"
									},
									"scope": 426,
									"src": "2668:358:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "3337:535:4",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 378,
															"nodeType": "Block",
															"src": "3443:101:4",
															"statements": [
																{
																	"condition": {
																		"id": 368,
																		"name": "interfaceSupport",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "3461:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 377,
																	"nodeType": "IfStatement",
																	"src": "3457:77:4",
																	"trueBody": {
																		"id": 376,
																		"nodeType": "Block",
																		"src": "3479:55:4",
																		"statements": [
																			{
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 371,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3513:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 370,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "3505:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 369,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "3505:7:4",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 372,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3505:10:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"hexValue": "31",
																							"id": 373,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3517:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						}
																					],
																					"id": 374,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3504:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_address_$_t_rational_1_by_1_$",
																						"typeString": "tuple(address,int_const 1)"
																					}
																				},
																				"functionReturnParameters": 358,
																				"id": 375,
																				"nodeType": "Return",
																				"src": "3497:22:4"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 379,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 367,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 366,
																	"mutability": "mutable",
																	"name": "interfaceSupport",
																	"nameLocation": "3425:16:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 379,
																	"src": "3420:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 365,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3420:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "3419:23:4"
														},
														"src": "3411:133:4"
													},
													{
														"block": {
															"id": 380,
															"nodeType": "Block",
															"src": "3551:2:4",
															"statements": []
														},
														"errorName": "",
														"id": 381,
														"nodeType": "TryCatchClause",
														"src": "3545:8:4"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 363,
															"name": "INTERFACE_ID_ERC2981",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "3389:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 360,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3359:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 359,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "3351:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3351:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$146",
																"typeString": "contract IERC165"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3371:17:4",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3351:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view external returns (bool)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:59:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 382,
												"nodeType": "TryStatement",
												"src": "3347:206:4"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 395,
															"nodeType": "Block",
															"src": "3621:43:4",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"id": 391,
																				"name": "setter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "3643:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3651:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"id": 393,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3642:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_address_$_t_rational_2_by_1_$",
																			"typeString": "tuple(address,int_const 2)"
																		}
																	},
																	"functionReturnParameters": 358,
																	"id": 394,
																	"nodeType": "Return",
																	"src": "3635:18:4"
																}
															]
														},
														"errorName": "",
														"id": 396,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 390,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 389,
																	"mutability": "mutable",
																	"name": "setter",
																	"nameLocation": "3613:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 396,
																	"src": "3605:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 388,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3605:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "3604:16:4"
														},
														"src": "3596:68:4"
													},
													{
														"block": {
															"id": 421,
															"nodeType": "Block",
															"src": "3671:195:4",
															"statements": [
																{
																	"clauses": [
																		{
																			"block": {
																				"id": 409,
																				"nodeType": "Block",
																				"src": "3743:51:4",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"id": 405,
																									"name": "setter",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 403,
																									"src": "3769:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "33",
																									"id": 406,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3777:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								}
																							],
																							"id": 407,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3768:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_3_by_1_$",
																								"typeString": "tuple(address,int_const 3)"
																							}
																						},
																						"functionReturnParameters": 358,
																						"id": 408,
																						"nodeType": "Return",
																						"src": "3761:18:4"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 410,
																			"nodeType": "TryCatchClause",
																			"parameters": {
																				"id": 404,
																				"nodeType": "ParameterList",
																				"parameters": [
																					{
																						"constant": false,
																						"id": 403,
																						"mutability": "mutable",
																						"name": "setter",
																						"nameLocation": "3735:6:4",
																						"nodeType": "VariableDeclaration",
																						"scope": 410,
																						"src": "3727:14:4",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"typeName": {
																							"id": 402,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "3727:7:4",
																							"stateMutability": "nonpayable",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"src": "3726:16:4"
																			},
																			"src": "3718:76:4"
																		},
																		{
																			"block": {
																				"id": 418,
																				"nodeType": "Block",
																				"src": "3801:55:4",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 413,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "3835:1:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 412,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "3827:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 411,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "3827:7:4",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 414,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3827:10:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "34",
																									"id": 415,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3839:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_4_by_1",
																										"typeString": "int_const 4"
																									},
																									"value": "4"
																								}
																							],
																							"id": 416,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3826:15:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_4_by_1_$",
																								"typeString": "tuple(address,int_const 4)"
																							}
																						},
																						"functionReturnParameters": 358,
																						"id": 417,
																						"nodeType": "Return",
																						"src": "3819:22:4"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 419,
																			"nodeType": "TryCatchClause",
																			"src": "3795:61:4"
																		}
																	],
																	"externalCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 398,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 352,
																						"src": "3698:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 397,
																					"name": "IOwnable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 164,
																					"src": "3689:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																						"typeString": "type(contract IOwnable)"
																					}
																				},
																				"id": 399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3689:20:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IOwnable_$164",
																					"typeString": "contract IOwnable"
																				}
																			},
																			"id": 400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3710:5:4",
																			"memberName": "admin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 163,
																			"src": "3689:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3689:28:4",
																		"tryCall": true,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 420,
																	"nodeType": "TryStatement",
																	"src": "3685:171:4"
																}
															]
														},
														"errorName": "",
														"id": 422,
														"nodeType": "TryCatchClause",
														"src": "3665:201:4"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 384,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3576:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 383,
																"name": "IOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "3567:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																	"typeString": "type(contract IOwnable)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3567:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnable_$164",
																"typeString": "contract IOwnable"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3588:5:4",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "3567:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3567:28:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 423,
												"nodeType": "TryStatement",
												"src": "3563:303:4"
											}
										]
									},
									"functionSelector": "c54e5497",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkForCollectionSetter",
									"nameLocation": "3253:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3286:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3278:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3277:20:4"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3321:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3330:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 356,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3320:16:4"
									},
									"scope": 426,
									"src": "3244:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 427,
							"src": "357:3517:4",
							"usedErrors": []
						}
					],
					"src": "32:3843:4"
				},
				"id": 4
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							467
						]
					},
					"id": 468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 428,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 467,
							"linearizedBaseContracts": [
								467
							],
							"name": "IRoyaltyFeeRegistry",
							"nameLocation": "67:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bbdf9b68",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollection",
									"nameLocation": "102:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "150:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "142:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "178:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "170:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "202:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "194:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "228:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "220:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "132:105:5"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:5"
									},
									"scope": 467,
									"src": "93:154:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b9223c9d",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "261:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "291:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "283:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:26:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:0:5"
									},
									"scope": 467,
									"src": "252:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "333:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "353:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "345:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "373:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "365:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:36:5"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "404:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "413:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:18:5"
									},
									"scope": 467,
									"src": "324:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e31ef91c",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "437:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "470:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "462:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:20:5"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "542:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "563:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "584:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:73:5"
									},
									"scope": 467,
									"src": "428:174:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 468,
							"src": "57:547:5",
							"usedErrors": []
						}
					],
					"src": "32:573:5"
				},
				"id": 5
			}
		}
	}
}